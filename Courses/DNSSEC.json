{
  "Title": "DNSSEC",
  "Description": "You are organizing a practical webinar focused on Domain Name System (DNS) risks and the DNS Security Extension (DNSSEC).\r\n\r\nDuring the training participants will learn:\r\n\r\n- how to implement DNSSEC,\r\n- how to sign zones and manage cryptographic keys,\r\n- how to establish and verify a chain of trust,\r\n- how to use validation and troubleshooting tools.\r\n\r\nThe seminar will combine theory with hands-on experience, including:\r\n\r\n- DNS/DNSSEC debugging,\r\n- zone creation and configuration (primary and secondary zones),\r\n- manual and automatic zone signing,\r\n- chain of trust establishment and verification,\r\n- DNSSEC validation with recursive resolvers.\r\n\r\nParticipant requirements: basic knowledge of DNS and networking is required; Linux/UNIX experience is recommended. Please bring a laptop with WiFi access. Training will be held in English.\r\n\r\nProgram:\r\n\r\n    8:30 \u2013 Registration \u0026 morning coffee\r\n    9:00\u201312:00 \u2013 DNSSEC workshop\r\n    12:00\u201313:00 \u2013 Lunch\r\n    13:00\u201315:00 \u2013 DNSSEC workshop\r\n    15:00\u201315:20 \u2013 Coffee break\r\n    15:20\u201317:00 \u2013 DNSSEC workshop\r\n",
  "Modules": [
    {
      "Title": "Accueil et introduction \u00E0 DNSSEC",
      "Description": "Pr\u00E9sentation des objectifs, des risques li\u00E9s au DNS (spoofing, cache poisoning) et introduction aux principes et b\u00E9n\u00E9fices de DNSSEC.",
      "EstimatedHours": 0.5,
      "Lessons": [
        {
          "Title": "Accueil et objectifs du module",
          "Summary": "Pr\u00E9sentation des objectifs p\u00E9dagogiques, du plan du module, des r\u00E9sultats attendus, des pr\u00E9requis et de l\u0027organisation des \u00E9valuations.",
          "EstimatedMinutes": 40,
          "LearningObjectives": [
            "Comprendre le contexte et les enjeux p\u00E9dagogiques du module \u00AB Accueil et introduction \u00E0 DNSSEC \u00BB",
            "Conna\u00EEtre le plan d\u00E9taill\u00E9 du module et la logique d\u0027encha\u00EEnement des s\u00E9ances",
            "Savoir quels sont les r\u00E9sultats d\u0027apprentissage attendus \u00E0 l\u0027issue du module",
            "Identifier et v\u00E9rifier les pr\u00E9requis techniques et conceptuels n\u00E9cessaires pour suivre le module",
            "Comprendre l\u0027organisation, les crit\u00E8res et le calendrier des \u00E9valuations",
            "Conna\u00EEtre les ressources, la logistique et les modalit\u00E9s pratiques pour tirer le meilleur parti du module"
          ],
          "Content": "Pr\u00E9sentation g\u00E9n\u00E9rale\r\nBienvenue au module \u00AB Accueil et introduction \u00E0 DNSSEC \u00BB. Cette premi\u00E8re le\u00E7on a pour but d\u0027installer le cadre p\u00E9dagogique : pourquoi DNSSEC est important, quels probl\u00E8mes il adresse (int\u00E9grit\u00E9 et authenticit\u00E9 des r\u00E9ponses DNS), et quelle sera la progression p\u00E9dagogique sur la dur\u00E9e du module. On y pr\u00E9sente aussi l\u0027\u00E9quipe p\u00E9dagogique, le public vis\u00E9 et la dur\u00E9e globale du module.\r\n\r\nObjectifs p\u00E9dagogiques du module\r\nLes objectifs p\u00E9dagogiques formalisent ce que vous devrez \u00EAtre capables de faire \u00E0 la fin du module. Ils portent sur la compr\u00E9hension des principes cryptographiques appliqu\u00E9s \u00E0 DNS (signatures, cha\u00EEnes de confiance), la ma\u00EEtrise des notions cl\u00E9s (zones, enregistrements RRSIG, DNSKEY, DS), la mise en \u0153uvre basique d\u0027un d\u00E9ploiement DNSSEC sur une zone de test et la capacit\u00E9 \u00E0 diagnostiquer des erreurs courantes. Les objectifs incluent aussi des comp\u00E9tences transverses : lecture de documentation technique, utilisation d\u0027outils de diagnostic, et bonnes pratiques d\u0027exploitation.\r\n\r\nPlan du module\r\nLe module est structur\u00E9 en s\u00E9quences progressives : 1) Accueil et introduction (cette le\u00E7on) ; 2) Principes th\u00E9oriques et cryptographie de base ; 3) Architecture DNS et impacts de DNSSEC ; 4) Pratique : g\u00E9n\u00E9ration de cl\u00E9s, signature de zone et publication ; 5) Validation et diagnostic ; 6) Cas d\u0027\u00E9tudes et retour d\u0027exp\u00E9rience ; 7) \u00C9valuation finale et conclusion. Chaque s\u00E9quence comporte des expos\u00E9s, d\u00E9monstrations et travaux pratiques.\r\n\r\nR\u00E9sultats attendus\r\n\u00C0 la fin du module, les apprenants devront : \u00EAtre capables d\u0027expliquer pourquoi DNSSEC est n\u00E9cessaire et comment il fonctionne, identifier et d\u00E9crire les enregistrements DNSSEC essentiels, g\u00E9n\u00E9rer une paire de cl\u00E9s et signer une zone dans un environnement de test, publier les enregistrements n\u00E9cessaires et v\u00E9rifier la validation c\u00F4t\u00E9 r\u00E9solveur, et diagnostiquer des causes fr\u00E9quentes d\u0027\u00E9chec (mauvaise remarque de TTL, erreurs de DS, horodatage, etc.). Les acquis seront v\u00E9rifiables via les exercices pratiques et l\u0027\u00E9valuation finale.\r\n\r\nPr\u00E9requis\r\nConnaissances recommand\u00E9es : compr\u00E9hension de base du fonctionnement du DNS (zones, r\u00E9solveurs, enregistrements), notions \u00E9l\u00E9mentaires de r\u00E9seau (IP, ports), et familiarit\u00E9 avec un terminal Linux/Unix pour ex\u00E9cuter commandes. Comp\u00E9tences en cryptographie ne sont pas obligatoires mais un aper\u00E7u (cl\u00E9 publique/priv\u00E9e, signature) est utile. S\u0027il manque des pr\u00E9requis, des ressources pr\u00E9liminaires seront indiqu\u00E9es pour mise \u00E0 niveau.\r\n\r\nOrganisation des \u00E9valuations\r\nL\u0027\u00E9valuation est compos\u00E9e de plusieurs \u00E9l\u00E9ments pond\u00E9r\u00E9s : quiz formatif (questions \u00E0 choix) pour valider la compr\u00E9hension th\u00E9orique (20 %), travaux pratiques not\u00E9s pour \u00E9valuer la mise en \u0153uvre (60 %), et un mini-projet ou \u00E9tude de cas final avec rapport et d\u00E9monstration (20 %). Des crit\u00E8res d\u0027\u00E9valuation clairs sont fournis : conformit\u00E9 technique, documentation des \u00E9tapes, capacit\u00E9 de diagnostic et qualit\u00E9 de la restitution. Des sessions de rattrapage et corrections comment\u00E9es sont pr\u00E9vues.\r\n\r\nRessources et modalit\u00E9s pratiques\r\nLes ressources partag\u00E9es incluent un syllabus, fiches de commande, environnements de labo (VM ou conteneurs), et liens vers documentation officielle (IETF RFCs, guides d\u0027op\u00E9rateurs). Modalit\u00E9s pratiques : horaires des s\u00E9ances, acc\u00E8s aux plateformes de TP, proc\u00E9dures de sauvegarde des travaux et r\u00E8gles de collaboration. Les r\u00E8gles d\u0027assiduit\u00E9, confidentialit\u00E9 des clefs priv\u00E9es et bonnes pratiques de s\u00E9curit\u00E9 seront rappel\u00E9es.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Citez trois objectifs p\u00E9dagogiques de ce module.",
              "Answer": "1) Comprendre les principes et enjeux de DNSSEC. 2) Savoir g\u00E9n\u00E9rer des cl\u00E9s et signer une zone de test. 3) \u00CAtre capable de diagnostiquer des erreurs li\u00E9es \u00E0 DNSSEC.",
              "Explanation": "Ces trois \u00E9l\u00E9ments couvrent la compr\u00E9hension th\u00E9orique, la mise en \u0153uvre pratique et la capacit\u00E9 de r\u00E9solution de probl\u00E8mes \u2014 composants essentiels d\u00E9finis dans les objectifs p\u00E9dagogiques."
            },
            {
              "Instruction": "Indiquez deux pr\u00E9requis indispensables avant de commencer le module.",
              "Answer": "1) Connaissance de base du DNS (zones, enregistrements). 2) Acc\u00E8s et familiarit\u00E9 avec un terminal Linux/Unix pour ex\u00E9cuter des commandes.",
              "Explanation": "Le DNS est le contexte technique central du module ; travailler les TP et les d\u00E9monstrations n\u00E9cessite un terminal pour utiliser outils comme dig, named, ou utilitaires de signature."
            },
            {
              "Instruction": "D\u00E9crivez bri\u00E8vement comment est organis\u00E9e l\u0027\u00E9valuation du module et quel est son objectif principal.",
              "Answer": "L\u0027\u00E9valuation combine un quiz formatif (20 %), des travaux pratiques not\u00E9s (60 %) et un mini-projet final (20 %) ; son objectif est de v\u00E9rifier la compr\u00E9hension th\u00E9orique, la capacit\u00E9 \u00E0 mettre en \u0153uvre DNSSEC et l\u0027aptitude au diagnostic et \u00E0 la restitution.",
              "Explanation": "La pond\u00E9ration privil\u00E9gie la pratique (60 %) car DNSSEC est avant tout une comp\u00E9tence op\u00E9rationnelle, tandis que le quiz et le projet compl\u00E8tent pour \u00E9valuer la compr\u00E9hension et l\u0027application en situation."
            }
          ]
        },
        {
          "Title": "Rappel : fonctionnement du DNS",
          "Summary": "Revue concise des concepts cl\u00E9s du DNS (r\u00E9solution r\u00E9cursive/it\u00E9rative, r\u00E9solveurs, serveurs autoritatifs, zones et types d\u0027enregistrements) pour situer DNSSEC.",
          "EstimatedMinutes": 25,
          "LearningObjectives": [
            "Comprendre le r\u00F4le fondamental du DNS comme annuaire distribu\u00E9 d\u0027Internet.",
            "Distinguer r\u00E9solution r\u00E9cursive et it\u00E9rative et savoir quand chaque mode intervient.",
            "Identifier les diff\u00E9rents acteurs : r\u00E9solveurs r\u00E9cursifs, r\u00E9solveurs it\u00E9ratifs, et serveurs autoritatifs.",
            "Comprendre la notion de zone DNS et la hi\u00E9rarchie des serveurs (racine, TLD, autoritatifs).",
            "Conna\u00EEtre les principaux types d\u0027enregistrements (A, AAAA, CNAME, NS, MX, TXT, SOA) et leur usage.",
            "Situer pourquoi et comment ces \u00E9l\u00E9ments servent de base \u00E0 DNSSEC (o\u00F9 signer, que prot\u00E9ger)."
          ],
          "Content": "Le r\u00F4le du DNS\r\nLe DNS (Domain Name System) traduit des noms lisibles par l\u0027humain (ex. exemple.com) en informations utiles aux machines (adresses IP, serveurs de mail, etc.). Il fonctionne comme un annuaire distribu\u00E9 et hi\u00E9rarchique, \u00E9vitant la centralisation d\u0027une liste unique. Comprendre ce r\u00F4le est essentiel pour saisir l\u0027objectif de DNSSEC : garantir l\u0027authenticit\u00E9 et l\u0027int\u00E9grit\u00E9 des r\u00E9ponses DNS.\r\n\r\nR\u00E9solution r\u00E9cursive vs it\u00E9rative\r\nR\u00E9solution r\u00E9cursive : un client (souvent un stub resolver sur l\u0027OS) demande \u00E0 un r\u00E9solveur r\u00E9cursif de trouver une r\u00E9ponse compl\u00E8te. Le r\u00E9solveur effectue toutes les requ\u00EAtes n\u00E9cessaires jusqu\u0027\u00E0 obtenir la r\u00E9ponse finale. R\u00E9solution it\u00E9rative : le client (ou le r\u00E9solveur r\u00E9cursif) interroge successivement plusieurs serveurs DNS (racine, TLD, serveur autoritatif) ; chaque serveur retourne soit la r\u00E9ponse, soit une d\u00E9l\u00E9gation (pointeur vers un autre serveur). En pratique, les stub resolvers demandent r\u00E9cursivement \u00E0 un r\u00E9solveur proche (fournisseur d\u0027acc\u00E8s, entreprise, DNS public).\r\n\r\nLes r\u00E9solveurs\r\nR\u00E9solveur r\u00E9cursif : serveur qui prend en charge la recherche compl\u00E8te pour le client et peut mettre en cache les r\u00E9ponses. Stub resolver : composant logiciel sur l\u0027h\u00F4te qui envoie des requ\u00EAtes (souvent en mode r\u00E9cursif) \u00E0 un r\u00E9solveur. Le cache du r\u00E9solveur r\u00E9duit la latence et la charge sur la hi\u00E9rarchie DNS. Les r\u00E9solveurs jouent aussi un r\u00F4le dans la validation DNSSEC quand ils sont configur\u00E9s pour v\u00E9rifier les signatures.\r\n\r\nServeurs autoritatifs, zones et hi\u00E9rarchie\r\nServeur autoritatif : d\u00E9tient la r\u00E9ponse officielle pour une zone DNS (ex. zone example.com). Une zone est un ensemble d\u0027enregistrements g\u00E9r\u00E9 comme une unit\u00E9 (fichier de zone ou \u00E9quivalent). La hi\u00E9rarchie DNS comprend : serveurs racine (.), serveurs TLD (ex. .com, .fr), puis serveurs autoritatifs pour les domaines. Les serveurs autoritatifs fournissent les enregistrements d\u00E9finitifs ou des d\u00E9l\u00E9gations (enregistrements NS) vers d\u0027autres serveurs.\r\n\r\nTypes d\u0027enregistrements courants\r\nA : adresse IPv4 ; AAAA : adresse IPv6 ; CNAME : alias vers un autre nom canonique ; NS : indique les serveurs de noms pour une zone ; MX : enregistreur de serveurs de mail pour le domaine ; TXT : texte libre, utilis\u00E9 pour SPF, DKIM, v\u00E9rifications ; SOA : enregistrement de d\u00E9but de zone contenant m\u00E9tadonn\u00E9es (ma\u00EEtre, contact, num\u00E9ros de s\u00E9rie, TTL par d\u00E9faut). Chaque type a un r\u00F4le pr\u00E9cis et des contraintes (ex. un nom avec CNAME ne peut g\u00E9n\u00E9ralement pas avoir d\u0027autres enregistrements).\r\n\r\nPoints d\u0027accroche pour DNSSEC\r\nDNSSEC ajoute des signatures cryptographiques aux r\u00E9ponses DNS. Pour savoir quoi signer et o\u00F9 v\u00E9rifier : les signatures (RRSIG) accompagnent des ensembles d\u0027enregistrements au niveau des zones autoritatives ; les enregistrements DS plac\u00E9s chez le parent (ex. dans le TLD) lient la cl\u00E9 de la zone enfant \u00E0 la cha\u00EEne de confiance. La distinction r\u00E9cursif/it\u00E9ratif reste pertinente : le r\u00E9solveur r\u00E9cursif est g\u00E9n\u00E9ralement l\u0027endroit o\u00F9 l\u0027on r\u00E9alise la validation DNSSEC (validation aboutit ou \u00E9chec), tandis que les serveurs autoritatifs produisent les signatures.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "1) D\u00E9crivez en une phrase la diff\u00E9rence entre une requ\u00EAte r\u00E9cursive et une requ\u00EAte it\u00E9rative.",
              "Answer": "Une requ\u00EAte r\u00E9cursive demande \u00E0 un r\u00E9solveur de retourner la r\u00E9ponse finale pour le client, tandis qu\u0027une requ\u00EAte it\u00E9rative obtient soit la r\u00E9ponse, soit une r\u00E9f\u00E9rence vers un autre serveur \u00E0 interroger.",
              "Explanation": "La phrase met en \u00E9vidence que la r\u00E9cursivit\u00E9 d\u00E9l\u00E8gue au r\u00E9solveur la t\u00E2che compl\u00E8te, alors que l\u0027it\u00E9ration implique plusieurs \u00E9changes successifs o\u00F9 chaque serveur peut renvoyer une d\u00E9l\u00E9gation."
            },
            {
              "Instruction": "2) On interroge le r\u00E9solveur r\u00E9cursif pour \u0027www.example.com\u0027. Indiquez l\u0027ordre typique des serveurs contact\u00E9s si le r\u00E9solveur n\u0027a rien en cache (racine \u2192 ? \u2192 ?).",
              "Answer": "Racine \u2192 serveur TLD (.com) \u2192 serveur autoritatif pour example.com \u2192 \u00E9ventuellement serveur autoritatif pour sous-domaine si d\u00E9l\u00E9gu\u00E9.",
              "Explanation": "Le r\u00E9solveur commence par la racine pour obtenir la d\u00E9l\u00E9gation vers le TLD, puis interroge le TLD pour la d\u00E9l\u00E9gation vers example.com, puis interroge l\u0027autoritatif d\u0027example.com pour obtenir l\u0027enregistrement final. Si \u0027www\u0027 est dans une sous-zone d\u00E9l\u00E9gu\u00E9e, il faut suivre la d\u00E9l\u00E9gation."
            },
            {
              "Instruction": "3) Associez chaque cas \u00E0 l\u0027enregistrement DNS le plus appropri\u00E9 : a) adresse IPv6 ; b) alias vers un autre nom ; c) serveur de mail ; d) m\u00E9tadonn\u00E9es de la zone.",
              "Answer": "a) AAAA ; b) CNAME ; c) MX ; d) SOA",
              "Explanation": "AAAA stocke IPv6, CNAME cr\u00E9e un alias pointant vers un nom canonique, MX d\u00E9signe les serveurs de courrier pour le domaine, et SOA contient les informations administratives et de contr\u00F4le de la zone."
            }
          ]
        },
        {
          "Title": "Menaces majeures : spoofing et cache poisoning",
          "Summary": "Explication du spoofing et du cache poisoning, m\u00E9canismes d\u0027attaque, exemples concrets et cons\u00E9quences pour la confidentialit\u00E9, l\u0027int\u00E9grit\u00E9 et la disponibilit\u00E9.",
          "EstimatedMinutes": 45,
          "LearningObjectives": [
            "D\u00E9finir clairement le spoofing DNS et le cache poisoning et en distinguer les notions cl\u00E9s.",
            "Comprendre les m\u00E9canismes g\u00E9n\u00E9raux utilis\u00E9s par les attaquants pour falsifier des r\u00E9ponses DNS sans fournir d\u0027instructions op\u00E9rationnelles dommageables.",
            "Analyser des exemples concrets d\u0027attaques (cas historiques et sc\u00E9narios plausibles) et en tirer les le\u00E7ons.",
            "\u00C9valuer les cons\u00E9quences de ces attaques sur la confidentialit\u00E9, l\u0027int\u00E9grit\u00E9 et la disponibilit\u00E9 des services et des utilisateurs.",
            "Identifier les signes indicateurs d\u0027une compromission DNS et les mesures d\u00E9fensives conceptuelles, y compris le r\u00F4le de DNSSEC.",
            "Savoir formuler des recommandations de s\u00E9curit\u00E9 adapt\u00E9es au contexte (op\u00E9rateur, administrateur r\u00E9seau, utilisateur)."
          ],
          "Content": "Introduction et contexte\r\nLe syst\u00E8me DNS traduit des noms lisibles (ex. example.com) en adresses IP. La confiance implicite entre r\u00E9solveurs et serveurs autoritatives est une faiblesse historique : les r\u00E9sponses non sign\u00E9es par un m\u00E9canisme d\u0027authentification peuvent \u00EAtre falsifi\u00E9es. Cette le\u00E7on porte sur deux menaces majeures li\u00E9es \u00E0 cette faiblesse : le spoofing (usurpation de sources) et le cache poisoning (empoisonnement du cache DNS).\r\n\r\nD\u00E9finitions : spoofing et cache poisoning\r\nSpoofing DNS : action par laquelle un attaquant fait croire \u00E0 un destinataire (r\u00E9solveur ou client) qu\u0027une r\u00E9ponse provient d\u0027une source l\u00E9gitime alors qu\u0027elle est fabriqu\u00E9e ou modifi\u00E9e par l\u0027attaquant. Cache poisoning : forme particuli\u00E8re de spoofing visant \u00E0 injecter des enregistrements falsifi\u00E9s dans le cache d\u0027un r\u00E9solveur r\u00E9cursif, de sorte que le r\u00E9solveur distribuera ces enregistrements falsifi\u00E9s \u00E0 d\u0027autres clients pendant une dur\u00E9e d\u00E9termin\u00E9e (TTL).\r\n\r\nM\u00E9canismes g\u00E9n\u00E9raux d\u0027attaque (conceptuel)\r\nLes attaques reposent sur l\u0027exploitation d\u0027incertitudes ou de pr\u00E9dictibilit\u00E9 dans le protocole : on tente de convaincre un r\u00E9solveur qu\u0027une r\u00E9ponse falsifi\u00E9e est la r\u00E9ponse l\u00E9gitime avant que le serveur autoritatif n\u0027envoie la v\u00E9ritable r\u00E9ponse. Les vecteurs conceptuels incluent la pr\u00E9diction/forgery d\u0027identifiants (par ex. identifiant de transaction, ports), la r\u00E9ponse plus rapide que le serveur l\u00E9gitime, et la manipulation du comportement des r\u00E9solveurs (ex. r\u00E9ponses fragment\u00E9es, r\u00E9ponses partielles, r\u00E9ponses \u00E0 des requ\u00EAtes malform\u00E9es). L\u0027approche est expliqu\u00E9e au niveau conceptuel sans fournir de recette technique.\r\n\r\nExemples concrets et cas historiques (r\u00E9sum\u00E9s)\r\nCas Kaminsky (2008) : d\u00E9monstration publique d\u0027une m\u00E9thode d\u0027empoisonnement du cache exploitant la faible entropie de certaines impl\u00E9mentations ; a entra\u00EEn\u00E9 une prise de conscience et des mesures d\u0027urgence. Pharming : redirection d\u0027utilisateurs vers des sites frauduleux via empoisonnement DNS pour vol d\u0027identifiants. Compromission d\u0027un r\u00E9solveur ISP : un attaquant ins\u00E8re des enregistrements falsifi\u00E9s pour des domaines bancaires, entra\u00EEnant une fraude \u00E0 grande \u00E9chelle. Ces exemples montrent comment, sans authentification des r\u00E9ponses, un grand nombre d\u0027utilisateurs peut \u00EAtre touch\u00E9 rapidement.\r\n\r\nCons\u00E9quences pour la confidentialit\u00E9, l\u0027int\u00E9grit\u00E9 et la disponibilit\u00E9\r\nConfidentialit\u00E9 : redirection des utilisateurs vers des sites contr\u00F4l\u00E9s par l\u0027attaquant permet l\u0027interception des identifiants, cookies et des communications (phishing, MITM). Int\u00E9grit\u00E9 : modification des destinations r\u00E9seau (sites falsifi\u00E9s, mises \u00E0 jour malveillantes via serveurs d\u00E9tourn\u00E9s) alt\u00E8re la confiance dans les donn\u00E9es re\u00E7ues. Disponibilit\u00E9 : empoisonnement peut rendre des services inaccessibles (redirection vers des IP non routables) ou provoquer des pannes en dirigeant massivement le trafic vers des ressources satur\u00E9es. L\u0027impact d\u00E9pend de l\u0027\u00E9tendue du cache compromis et du TTL des enregistrements inject\u00E9s.\r\n\r\nSignes indicateurs et d\u00E9tection (niveau conceptuel)\r\nSignes possibles : plaintes simultan\u00E9es d\u0027utilisateurs vers plusieurs services l\u00E9gitimes, r\u00E9solutions DNS incoh\u00E9rentes entre r\u00E9solveurs (divergences de r\u00E9solution), trafic r\u00E9seau vers IP inhabituelles pour des domaines r\u00E9pandus, certificats TLS inattendus ou erreurs de validation, logs de r\u00E9solveur montrant r\u00E9ponses non sollicit\u00E9es ou erreurs r\u00E9currentes. La corr\u00E9lation entre ces signes et la mise en place d\u0027outils de surveillance DNS aide \u00E0 d\u00E9tecter un probl\u00E8me.\r\n\r\nMesures d\u00E9fensives et r\u00F4le de DNSSEC (conceptuel)\r\nMesures d\u00E9fensives g\u00E9n\u00E9rales : durcir les r\u00E9solveurs (entropie \u00E9lev\u00E9e pour ports et identifiants, validation stricte des r\u00E9ponses, patchs), limiter la port\u00E9e des caches, surveillance et alerting, s\u00E9paration des services critiques. DNSSEC apporte l\u0027authentification des donn\u00E9es DNS via signatures num\u00E9riques : elle permet au r\u00E9solveur d\u0027authentifier qu\u0027une r\u00E9ponse provient bien de la zone autoritative et qu\u0027elle n\u0027a pas \u00E9t\u00E9 alt\u00E9r\u00E9e, r\u00E9duisant fortement l\u0027efficacit\u00E9 du spoofing et du poisoning si elle est correctement d\u00E9ploy\u00E9e. Il est important de comprendre que DNSSEC n\u0027est pas une panac\u00E9e unique (ex. complexit\u00E9 op\u00E9rationnelle, n\u00E9cessit\u00E9 de d\u00E9ploiement end-to-end) mais c\u0027est une d\u00E9fense essentielle.\r\n\r\nBonnes pratiques op\u00E9rationnelles (recommandations)\r\nPour les op\u00E9rateurs : appliquer des mises \u00E0 jour, utiliser des r\u00E9solveurs qui impl\u00E9mentent des protections modernes, activer DNSSEC et monitoring, limiter l\u0027exposition des serveurs r\u00E9cursifs publics, r\u00E9duire la dur\u00E9e des caches pour les enregistrements sensibles. Pour les administrateurs d\u0027applications : surveiller certificats TLS et m\u00E9canismes d\u0027authentification suppl\u00E9mentaires (HSTS, pinning quand pertinent). Pour les utilisateurs : vigilance face aux URL, pr\u00E9f\u00E9rer services qui utilisent TLS \u002B bonnes pratiques de certificate transparency.\r\n\r\nConclusion et points cl\u00E9s \u00E0 retenir\r\nLe spoofing et le cache poisoning exploitent l\u0027absence d\u0027authentification des r\u00E9ponses DNS pour rediriger, intercepter ou bloquer du trafic. Les impacts couvrent confidentialit\u00E9, int\u00E9grit\u00E9 et disponibilit\u00E9. La d\u00E9fense efficace combine durcissement des r\u00E9solveurs, surveillance et adoption de technologies d\u0027authentification comme DNSSEC. La pr\u00E9vention et la d\u00E9tection rapides limitent la port\u00E9e des incidents.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Expliquez en une phrase la diff\u00E9rence essentielle entre \u0027spoofing DNS\u0027 et \u0027cache poisoning\u0027.",
              "Answer": "Le spoofing DNS d\u00E9signe l\u0027usurpation d\u0027identit\u00E9 dans une r\u00E9ponse DNS, tandis que le cache poisoning est l\u0027injection durable de r\u00E9ponses falsifi\u00E9es dans le cache d\u0027un r\u00E9solveur r\u00E9cursif.",
              "Explanation": "La diff\u00E9rence tient \u00E0 l\u0027objectif et \u00E0 la port\u00E9e : le spoofing peut \u00EAtre une r\u00E9ponse unique ou ponctuelle visant un client ou un r\u00E9solveur ; le cache poisoning cherche \u00E0 implanter des donn\u00E9es falsifi\u00E9es dans un cache pour qu\u0027elles servent de fa\u00E7on r\u00E9p\u00E9t\u00E9e \u00E0 plusieurs clients pendant le TTL."
            },
            {
              "Instruction": "Vous observez que tous les employ\u00E9s se plaignent de ne pas pouvoir acc\u00E9der au site portail.exemple.com, et que les r\u00E9solutions DNS renvoient une IP inhabituelle. Quel impact(s) sur la triade CIA (Confidentialit\u00E9, Int\u00E9grit\u00E9, Disponibilit\u00E9) sont les plus probables ? Citez et justifiez bri\u00E8vement.",
              "Answer": "Disponibilit\u00E9 et potentiellement Confidentialit\u00E9 et Int\u00E9grit\u00E9. La redirection vers une IP inhabituelle indique une possible compromission du service (disponibilit\u00E9 affect\u00E9e). Si la nouvelle destination est contr\u00F4l\u00E9e par un attaquant, elle peut aussi compromettre la confidentialit\u00E9 (vol d\u0027identifiants) et l\u0027int\u00E9grit\u00E9 (fourniture de contenu falsifi\u00E9).",
              "Explanation": "Le signal principal est une perte d\u0027acc\u00E8s (disponibilit\u00E9). La pr\u00E9sence d\u0027une IP mal connue accro\u00EEt le risque que des donn\u00E9es sensibles soient intercept\u00E9es ou alt\u00E9r\u00E9es, donc l\u0027impact peut se propager aux autres dimensions de la triade selon l\u0027intention de l\u0027attaquant."
            },
            {
              "Instruction": "Donnez trois signes op\u00E9rationnels (niveau r\u00E9solveur ou utilisateur) qui peuvent indiquer un empoisonnement du cache DNS.",
              "Answer": "1) R\u00E9solutions diff\u00E9rentes pour un m\u00EAme domaine selon diff\u00E9rents r\u00E9solveurs ; 2) Traffic soudain vers adresses IP g\u00E9ographiquement ou politiquement incoh\u00E9rentes pour un service donn\u00E9 ; 3) Certificats TLS inattendus ou erreurs de validation lors de l\u0027acc\u00E8s \u00E0 sites normalement s\u00E9curis\u00E9s.",
              "Explanation": "Des divergences de r\u00E9solution montrent que un r\u00E9solveur sert des donn\u00E9es diff\u00E9rentes (possible cache empoisonn\u00E9). Des destinations inattendues et des certificats anormaux sont des indices que le trafic a \u00E9t\u00E9 redirig\u00E9 vers un interm\u00E9diaire contr\u00F4l\u00E9 par l\u0027attaquant."
            },
            {
              "Instruction": "Associez (sans d\u00E9tailler d\u0027impl\u00E9mentation) les mesures suivantes \u00E0 la menace qu\u0027elles mitigent le mieux : (A) DNSSEC, (B) augmentation de l\u0027entropie des sources/ports, (C) surveillance et alerting DNS, (D) r\u00E9duction du TTL pour enregistrements critiques. Choisissez la meilleure correspondance pour : 1) emp\u00EAcher l\u0027injection de r\u00E9ponses falsifi\u00E9es au niveau des donn\u00E9es, 2) r\u00E9duire la fen\u00EAtre d\u0027exposition en cas d\u0027empoisonnement, 3) d\u00E9tecter rapidement un incident, 4) rendre la pr\u00E9diction de r\u00E9ponses plus difficile.",
              "Answer": "1) A (DNSSEC), 2) D (r\u00E9duction du TTL), 3) C (surveillance et alerting), 4) B (augmentation de l\u0027entropie des sources/ports).",
              "Explanation": "DNSSEC authentifie le contenu des enregistrements (donn\u00E9es), la r\u00E9duction du TTL limite la dur\u00E9e pendant laquelle des enregistrements falsifi\u00E9s restent en cache, la surveillance permet la d\u00E9tection rapide, et l\u0027augmentation de l\u0027entropie rend la falsification ou la pr\u00E9diction des r\u00E9ponses plus difficile pour l\u0027attaquant."
            },
            {
              "Instruction": "Sc\u00E9nario de haute altitude : sans d\u00E9crire comment l\u0027attaque est r\u00E9alis\u00E9e, pourquoi le d\u00E9ploiement partiel de DNSSEC (par ex. signer seulement certaines zones) laisse-t-il encore une fen\u00EAtre d\u0027opportunit\u00E9 pour des attaques de cache poisoning ?",
              "Answer": "Parce que les zones non sign\u00E9es restent vuln\u00E9rables et peuvent \u00EAtre utilis\u00E9es comme vecteurs pour rediriger ou propager des enregistrements falsifi\u00E9s ; en outre, des d\u00E9pendances entre zones (d\u00E9l\u00E9gu\u00E9es ou r\u00E9solutions inter-zones) peuvent permettre \u00E0 des enregistrements non sign\u00E9s d\u0027affecter la r\u00E9solution m\u00EAme pour des domaines sign\u00E9s si le chemin de confiance n\u0027est pas complet.",
              "Explanation": "DNSSEC prot\u00E8ge uniquement les zones sign\u00E9es et exige une cha\u00EEne de confiance continue pour \u00EAtre pleinement efficace. Un d\u00E9ploiement partiel laisse des points faibles exploit\u00E9s pour ins\u00E9rer des donn\u00E9es non authentifi\u00E9es, ce qui peut compromettre des r\u00E9solutions ou forcer les clients \u00E0 accepter des r\u00E9ponses non sign\u00E9es."
            }
          ]
        },
        {
          "Title": "Autres attaques et risques li\u00E9s au DNS",
          "Summary": "Pr\u00E9sentation d\u0027attaques compl\u00E9mentaires (MITM, NXDOMAIN spoofing, amplification DDoS, transfert de zone abusif) et de leur impact op\u00E9rationnel.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre les attaques compl\u00E9mentaires au DNS et leur logique (MITM, NXDOMAIN spoofing, amplification DDoS, transfert de zone abusif).",
            "Identifier les impacts op\u00E9rationnels (disponibilit\u00E9, int\u00E9grit\u00E9, confidentialit\u00E9, charge op\u00E9rationnelle) associ\u00E9s \u00E0 ces attaques.",
            "Savoir d\u00E9tecter les signes indicateurs d\u0027une compromission ou d\u0027une exploitation abusive du DNS.",
            "Conna\u00EEtre les mesures de mitigation et les bonnes pratiques pour r\u00E9duire le risque et limiter l\u0027impact.",
            "Savoir prioriser des actions op\u00E9rationnelles et techniques en cas d\u0027incident DNS."
          ],
          "Content": "Introduction g\u00E9n\u00E9rale\r\nLe DNS est un service critique expos\u00E9 \u00E0 plusieurs vecteurs d\u0027attaque au-del\u00E0 de la simple falsification de r\u00E9ponse. Ce chapitre pr\u00E9sente des attaques compl\u00E9mentaires (MITM, NXDOMAIN spoofing, amplification DDoS, transfert de zone abusif), explique leur fonctionnement, leurs cons\u00E9quences op\u00E9rationnelles et les approches de mitigation. L\u0027objectif est de fournir aux \u00E9quipes op\u00E9rations et s\u00E9curit\u00E9 des \u00E9l\u00E9ments pratiques pour pr\u00E9venir, d\u00E9tecter et r\u00E9pondre.\r\n\r\nAttaque MITM appliqu\u00E9e au DNS\r\nD\u00E9finition et m\u00E9canisme : une attaque Man-in-the-Middle (MITM) consiste \u00E0 intercepter et \u00E9ventuellement modifier des requ\u00EAtes/r\u00E9ponses DNS entre un client et un r\u00E9solveur ou entre r\u00E9solveur et serveur faisant autorit\u00E9. Techniques courantes : ARP spoofing sur un r\u00E9seau local, compromission d\u0027un serveur r\u00E9cursif, d\u00E9tournement de session via proxy, ou usage de r\u00E9seaux Wi\u2011Fi malveillants. Effets typiques : redirection d\u0027utilisateurs vers des sites frauduleux (perte d\u0027int\u00E9grit\u00E9), interception d\u0027identifiants (confidentialit\u00E9), ou blocage d\u0027acc\u00E8s l\u00E9gitimes (disponibilit\u00E9). Relation avec DNSSEC et DNS over TLS/HTTPS : DNSSEC prot\u00E8ge l\u0027int\u00E9grit\u00E9 des r\u00E9ponses sign\u00E9es par zone, tandis que DoT/DoH prot\u00E8ge la confidentialit\u00E9 et l\u0027authenticit\u00E9 du canal vers le r\u00E9solveur \u2014 ensemble ils limitent fortement la surface d\u0027une MITM. Limitations : DNSSEC n\u0027emp\u00EAche pas toutes les formes de MITM (p. ex. si l\u0027attaquant contr\u00F4le un r\u00E9solveur de confiance non v\u00E9rifiant) et DoH/DoT doivent \u00EAtre correctement d\u00E9ploy\u00E9s et contr\u00F4l\u00E9s.\r\n\r\nNXDOMAIN spoofing et NXDOMAIN hijacking\r\nDescription : NXDOMAIN spoofing consiste \u00E0 falsifier des r\u00E9ponses indiquant l\u0027inexistence d\u0027un nom (NXDOMAIN) ou \u00E0 remplacer les NXDOMAIN par des r\u00E9ponses dirigeant vers une page destin\u00E9e \u00E0 la publicit\u00E9 ou au phishing (pratique parfois utilis\u00E9e par des FAI ou des produits de redirection). M\u00E9canismes d\u0027exploitation : interception de requ\u00EAtes, alt\u00E9ration de cache de r\u00E9solveur, ou configuration intentionnelle d\u0027un r\u00E9solveur qui remplace les NXDOMAIN. Impacts op\u00E9rationnels : diagnostic alt\u00E9r\u00E9 (les utilisateurs re\u00E7oivent une page plut\u00F4t qu\u0027une erreur, ce qui masque les probl\u00E8mes), faux positifs/negatifs dans les contr\u00F4les automatis\u00E9s, augmentation du trafic vers des services ind\u00E9sirables, risque de phishing. Mitigations : configuration des r\u00E9solveurs pour respecter NXDOMAIN, validation via DNSSEC (la signature d\u0027un enregistrement SOA/ds prouve l\u0027autorit\u00E9), surveillance des taux de NXDOMAIN et v\u00E9rification du comportement du r\u00E9solveur via requ\u00EAtes de contr\u00F4le.\r\n\r\nAttaques par amplification / r\u00E9flexion (DDoS)\r\nPrincipe : un attaquant envoie de petites requ\u00EAtes UDP \u00E0 des serveurs DNS ouverts (r\u00E9cursifs ou autoritatifs avec r\u00E9cursion activ\u00E9e) avec l\u0027adresse source usurp\u00E9e de la victime. Le serveur r\u00E9pond par une r\u00E9ponse beaucoup plus volumineuse vers la victime (r\u00E9flexion) \u2014 l\u0027\u00E9cart taille/r\u00E9ponse aggrave la charge (amplification). Vecteurs historiques : requ\u00EAtes de type ANY (g\u00E9n\u00E8rent de grandes r\u00E9ponses), DNSSEC (les r\u00E9ponses sign\u00E9es sont plus grandes), ou enregistrements TXT/large RRSets. Impact op\u00E9rationnel : saturations de bande passante, indisponibilit\u00E9 des services en frontale, co\u00FBt op\u00E9rationnel important pour mitigation et filtrage. Mesures de pr\u00E9vention : d\u00E9sactiver r\u00E9cursion sur serveurs publics, limiter les r\u00E9ponses aux clients autoris\u00E9s, impl\u00E9menter Response Rate Limiting (RRL), appliquer BCP 38 (anti-spoofing r\u00E9seau) pour emp\u00EAcher l\u0027usurpation d\u0027adresses source, filtrage au niveau des fournisseurs transit/peering. Mesures de r\u00E9ponse : blackholing s\u00E9lectif, ACL dynamiques, collaboration avec upstream pour filtrage, mise en \u0153uvre de scrubbing services.\r\n\r\nTransfert de zone abusif (AXFR/IXFR)\r\nDescription : un transfert de zone (AXFR/IXFR) permet de r\u00E9cup\u00E9rer l\u0027ensemble des enregistrements d\u0027une zone DNS. Si mal configur\u00E9, un serveur autoritatif peut autoriser des transferts \u00E0 n\u0027importe qui, exposant la structure de la zone, adresses internes, sous-domaines non publi\u00E9s, et potentiellement des enregistrements sensibles. Risques op\u00E9rationnels : fuite d\u0027informations, aide \u00E0 la cartographie pour des attaques cibl\u00E9es, compromission d\u0027infrastructure interne bas\u00E9e sur des renseignements divulgu\u00E9s. Mitigations : restreindre les transferts de zone par adresse IP et / ou par TSIG (cl\u00E9s partag\u00E9es), n\u0027autoriser que les serveurs esclaves connus, surveiller les demandes AXFR/IXFR inhabituelles et journaliser les transferts complets, pratiquer le principe du moindre privil\u00E8ge sur les informations publi\u00E9es.\r\n\r\nImpacts op\u00E9rationnels transverses\r\nDisponibilit\u00E9 : attaques DDoS ou mise hors service de r\u00E9solveurs peuvent rendre inaccessibles de nombreux services d\u00E9pendants du DNS. Int\u00E9grit\u00E9 : MITM et alt\u00E9ration de cache m\u00E8nent \u00E0 des d\u00E9tournements et fraude. Confidentialit\u00E9 : transfert de zone abusif ou interception expose des informations sensibles. Charge op\u00E9rationnelle : d\u00E9tection, investigation, coordination avec upstream/registraires, et d\u00E9ploiement de contre\u2011mesures consomment temps et ressources. Conformit\u00E9 et r\u00E9putation : exfiltration d\u0027informations ou usages frauduleux peuvent entra\u00EEner des incidents de conformit\u00E9 et perte de confiance des utilisateurs.\r\n\r\nD\u00E9tection et surveillance\r\nSignes \u00E0 surveiller : soudaines augmentations de requ\u00EAtes (surtout pour certains types), taux de NXDOMAIN anormal, requ\u00EAtes AXFR provenant d\u0027adresses \u00E9trang\u00E8res, r\u00E9ponses incoh\u00E9rentes entre r\u00E9solveurs, logs de refus RRL fr\u00E9quents. Outils et approches : collecte centralis\u00E9e des logs (serveurs r\u00E9cursifs et autoritatifs), corr\u00E9lation avec flux r\u00E9seau (NetFlow), syst\u00E8mes de d\u00E9tection d\u0027anomalies bas\u00E9s sur seuils et apprentissage, tests r\u00E9guliers de conformit\u00E9 du r\u00E9solveur (par ex. tests de r\u00E9ponse NXDOMAIN). Proc\u00E9dures : d\u00E9finir playbooks d\u0027incident DNS, garder contacts op\u00E9rationnels avec upstream ISP et registrar, et pratiquer des exercices de crise.\r\n\r\nMesures de mitigation et bonnes pratiques\r\nPr\u00E9vention : appliquer DNSSEC pour l\u0027int\u00E9grit\u00E9 c\u00F4t\u00E9 autorit\u00E9 et r\u00E9solveur, d\u00E9ployer DoT/DoH contr\u00F4l\u00E9 pour prot\u00E9ger les clients, d\u00E9sactiver la r\u00E9cursion sur serveurs publics, restreindre AXFR par TSIG et ACL, impl\u00E9menter RRL, suivre BCP 38. Configuration : logs complets, segmentation des r\u00E9solveurs (interne vs externe), limiter taille des r\u00E9ponses inutiles (minimiser RRSets volumineux). Exploitation : patcher r\u00E9guli\u00E8rement le logiciel DNS, g\u00E9rer les acc\u00E8s et cl\u00E9s TSIG, mettre en place supervision et alerting. R\u00E9action : avoir proc\u00E9dures claires pour contacter upstream, activer filtrage, basculer sur r\u00E9solveurs de secours, et analyser les logs post-incident pour corriger la configuration.\r\n\r\nSynth\u00E8se et priorit\u00E9s op\u00E9rationnelles\r\nPrioriser actions selon risque et exposition : 1) emp\u00EAcher l\u0027usurpation r\u00E9seau (BCP 38) et filtrer ruptures d\u0027usurpation ; 2) restreindre r\u00E9cursion et transferts de zone ; 3) activer DNSSEC pour les zones critiques ; 4) d\u00E9ployer RRL et contr\u00F4ler DoT/DoH ; 5) monitorer et journaliser. Maintenir une posture it\u00E9rative : tester les configurations, faire des exercices d\u0027incident et revoir r\u00E9guli\u00E8rement les r\u00E8gles d\u0027acc\u00E8s.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Vous \u00EAtes administrateur DNS d\u0027un domaine public. Vous d\u00E9couvrez dans les logs qu\u0027un serveur inconnu a demand\u00E9 un transfert AXFR complet. Quelle est la mesure corrective imm\u00E9diate \u00E0 prendre et quelle mesure \u00E0 moyen terme pour \u00E9viter la r\u00E9currence ?",
              "Answer": "Imm\u00E9diatement : bloquer l\u0027adresse source et v\u00E9rifier si un transfert a eu lieu en analysant les logs. \u00C0 moyen terme : restreindre les transferts de zone via ACLs/TSIG et auditer la liste des serveurs esclaves autoris\u00E9s.",
              "Explanation": "Bloquer l\u0027adresse stoppe l\u0027exfiltration en cours et permet d\u0027\u00E9valuer l\u0027\u00E9tendue. La pr\u00E9vention durable consiste \u00E0 n\u0027autoriser les AXFR qu\u0027aux serveurs connus (ACL r\u00E9seau) et \u00E0 utiliser TSIG pour authentifier les transferts, r\u00E9duisant le risque d\u0027acc\u00E8s non autoris\u00E9."
            },
            {
              "Instruction": "Vous observez une hausse massive du trafic UDP vers vos serveurs DNS autoritatifs et r\u00E9cursifs accompagn\u00E9e d\u0027une utilisation \u00E9lev\u00E9e de bande passante sur votre liaison. Quels diagnostics et actions de mitigation mettez-vous en oeuvre en priorit\u00E9 ?",
              "Answer": "Diagnostics : identifier mod\u00E8les de requ\u00EAtes (type, rate, source), v\u00E9rifier si les requ\u00EAtes utilisent des types amplifiant (ANY, TXT, DNSSEC), et corr\u00E9ler avec flux r\u00E9seau. Mitigations : activer RRL, filtrer/blackholer trafic abusif avec upstream, d\u00E9sactiver r\u00E9cursion publique si activ\u00E9e, et contacter le fournisseur d\u0027acc\u00E8s pour scrubbing si n\u00E9cessaire.",
              "Explanation": "L\u0027analyse des types de requ\u00EAtes permet de confirmer une attaque par r\u00E9flexion/amplification. RRL r\u00E9duit la capacit\u00E9 d\u0027amplification c\u00F4t\u00E9 serveur, la suppression de r\u00E9cursion publique \u00E9limine une surface d\u0027abus, et le filtrage upstream arr\u00EAte le trafic volum\u00E9trique au niveau r\u00E9seau."
            },
            {
              "Instruction": "Un utilisateur se plaint d\u0027\u00EAtre redirig\u00E9 vers une page de publicit\u00E9 lorsqu\u0027il recherche un sous-domaine qui n\u0027existe pas. Comment distinguer un probl\u00E8me de r\u00E9solveur (NXDOMAIN hijacking) d\u0027un r\u00E9el dysfonctionnement de zone, et quelle action corrective proposez-vous ?",
              "Answer": "Test : interroger plusieurs r\u00E9solveurs publics connus (par ex. 1.1.1.1, 8.8.8.8) et le serveur autoritatif directement pour v\u00E9rifier la r\u00E9ponse NXDOMAIN. Si le serveur autoritatif renvoie NXDOMAIN mais un r\u00E9solveur interm\u00E9diaire redirige, c\u0027est du hijacking. Action corrective : configurer ou remplacer le r\u00E9solveur fautif, informer l\u0027ISP si le r\u00E9solveur est fourni par lui, et d\u00E9ployer DNSSEC si applicable pour d\u00E9tecter les alt\u00E9rations.",
              "Explanation": "V\u00E9rifier directement aupr\u00E8s de l\u0027autorit\u00E9 \u00E9limine les doutes sur la zone elle-m\u00EAme. NXDOMAIN hijacking vient souvent de r\u00E9solveurs commerciaux ou FAI qui modifient les r\u00E9ponses \u2014 corriger le r\u00E9solveur ou forcer l\u0027utilisation d\u0027un r\u00E9solveur contr\u00F4l\u00E9 r\u00E9sout le probl\u00E8me. DNSSEC apporte une couche de d\u00E9tection d\u0027alt\u00E9ration des r\u00E9ponses sign\u00E9es."
            },
            {
              "Instruction": "Quel r\u00F4le joue DNSSEC face aux attaques MITM sur le DNS et quelles limites faut-il garder \u00E0 l\u0027esprit ?",
              "Answer": "R\u00F4le : DNSSEC assure l\u0027int\u00E9grit\u00E9 et l\u0027authenticit\u00E9 des donn\u00E9es DNS sign\u00E9es, emp\u00EAchant qu\u0027un attaquant modifie silencieusement les enregistrements sans que la signature soit invalide. Limites : DNSSEC ne prot\u00E8ge pas le canal (il ne chiffre pas), ne prot\u00E8ge pas un client si celui-ci fait confiance \u00E0 un r\u00E9solveur compromis qui ignore la validation, et ne couvre pas la disponibilit\u00E9 (DDoS).",
              "Explanation": "DNSSEC rend toute alt\u00E9ration des r\u00E9ponses d\u00E9tectable par un r\u00E9solveur validant. Toutefois, si le r\u00E9solveur ne valide pas ou si l\u0027attaquant contr\u00F4le le r\u00E9solveur, la protection est contourn\u00E9e. De plus, DNSSEC augmente la taille des r\u00E9ponses et peut compliquer la mitigation des attaques par amplification si l\u0027on ne prend pas de mesures compl\u00E9mentaires."
            }
          ]
        },
        {
          "Title": "Principes fondamentaux de DNSSEC",
          "Summary": "Introduction au mod\u00E8le de confiance de DNSSEC : signatures RRSIG, cl\u00E9s DNSKEY, enregistrements DS, cha\u00EEne de confiance et distinction KSK/ZSK.",
          "EstimatedMinutes": 45,
          "LearningObjectives": [
            "Comprendre le r\u00F4le et le format des signatures RRSIG dans DNSSEC.",
            "Identifier et expliquer les enregistrements DNSKEY et leur usage dans la validation des RRset.",
            "Savoir ce qu\u0027est un enregistrement DS et comment il relie deux zones pour \u00E9tablir la cha\u00EEne de confiance.",
            "D\u00E9crire la cha\u00EEne de confiance DNSSEC et le principe de validation \u00E0 partir d\u0027un trust anchor.",
            "Distinguer KSK (Key Signing Key) et ZSK (Zone Signing Key) : r\u00F4les, cycle de vie et bonnes pratiques op\u00E9rationnelles."
          ],
          "Content": "Introduction au mod\u00E8le de confiance de DNSSEC\r\nDNSSEC ajoute l\u0027authenticit\u00E9 et l\u0027int\u00E9grit\u00E9 aux r\u00E9ponses DNS via des signatures cryptographiques. Plut\u00F4t que de chiffrer le contenu, DNSSEC signe les ensembles d\u0027enregistrements (RRsets) afin que les validateurs puissent v\u00E9rifier que les donn\u00E9es proviennent bien du titulaire de la zone et n\u0027ont pas \u00E9t\u00E9 modifi\u00E9es en transit. La validation s\u0027appuie sur une cha\u00EEne de confiance partant d\u0027une \u0022trust anchor\u0022 (par exemple la cl\u00E9 racine) et descendant zone par zone \u00E0 travers des enregistrements DS.\r\n\r\nSignatures RRSIG\r\nUn enregistrement RRSIG contient la signature cryptographique appliqu\u00E9e \u00E0 un RRset (un ensemble d\u0027enregistrements identiques, m\u00EAme nom et type). Il inclut, entre autres, l\u0027algorithme, l\u0027identifiant de la cl\u00E9, la p\u00E9riode de validit\u00E9 et la signature proprement dite. Pour valider un RRset, un r\u00E9solveur r\u00E9cup\u00E8re le RRSIG correspondant, obtient la cl\u00E9 publique (DNSKEY) associ\u00E9e et v\u00E9rifie la signature sur les donn\u00E9es du RRset. Si la signature est valide et dans la p\u00E9riode de validit\u00E9, l\u0027RRset est consid\u00E9r\u00E9 fiable.\r\n\r\nEnregistrements DNSKEY\r\nL\u0027enregistrement DNSKEY contient la cl\u00E9 publique utilis\u00E9e pour v\u00E9rifier les signatures RRSIG. Chaque DNSKEY a un flag indiquant s\u0027il est une KSK (flag de type \u0027SEP\u0027 \u2014 Secure Entry Point \u2014 souvent 257) ou une ZSK (souvent 256). La zone publie un ou plusieurs DNSKEY; une de ces cl\u00E9s KSK/ZSK sera utilis\u00E9e pour valider les RRSIGs. Les DNSKEY eux-m\u00EAmes doivent \u00EAtre sign\u00E9s par la KSK (g\u00E9n\u00E9ralement), ce qui produit un RRSIG sur l\u0027ensemble DNSKEY afin que la cl\u00E9 publique soit authentifi\u00E9e \u00E0 l\u0027int\u00E9rieur de la zone.\r\n\r\nEnregistrements DS (Delegation Signer)\r\nLe record DS est plac\u00E9 dans la zone parente et contient un hash (empreinte) d\u0027une cl\u00E9 publique DNSKEY de la zone enfant. Le DS cr\u00E9e la jonction entre la zone parente et la zone enfant : en signant son propre contenu (RRsets) et en publiant un DS dans la parente, la parente affirme qu\u0027elle d\u00E9l\u00E8gue et fait confiance \u00E0 la cl\u00E9 enfant correspondante. Lors de la validation, un r\u00E9solveur compare le DS obtenu depuis la parente avec le hash du DNSKEY r\u00E9cup\u00E9r\u00E9 depuis l\u0027enfant : s\u0027ils correspondent et que la cha\u00EEne parente est digne de confiance, l\u0027enfant est valid\u00E9e.\r\n\r\nCha\u00EEne de confiance et processus de validation\r\nLa validation DNSSEC se fait en remontant la cha\u00EEne de confiance depuis une trust anchor (p. ex. la cl\u00E9 publique du \u0027.\u0027 publi\u00E9e comme point d\u0027ancrage) :\n1) Le r\u00E9solveur connait la trust anchor (cl\u00E9 publique fiable). \n2) Il r\u00E9cup\u00E8re depuis la zone parente le DS de la zone enfant et v\u00E9rifie que la signature des enregistrements DNSKEY de la parente est valide avec la cl\u00E9 connue. \n3) Il r\u00E9cup\u00E8re le DNSKEY de la zone enfant et compare son empreinte avec le DS de la parente. \n4) Si la correspondance est ok, il peut utiliser le DNSKEY enfant pour v\u00E9rifier les RRSIGs sur les RRsets de l\u0027enfant. \nCe processus descend jusqu\u0027\u00E0 la zone cible ; chaque \u00E9tape n\u00E9cessite que les enregistrements DS et DNSKEY/RRSIG soient coh\u00E9rents et valides.\r\n\r\nDistinction KSK vs ZSK et bonnes pratiques\r\nKSK (Key Signing Key) : r\u00F4le principal = signer l\u0027ensemble DNSKEY (ou fournir point d\u0027entr\u00E9e de confiance). Elle est conserv\u00E9e avec un niveau de s\u00E9curit\u00E9 plus \u00E9lev\u00E9, rotation moins fr\u00E9quente et parfois stock\u00E9e off-line ou dans un module HSM. ZSK (Zone Signing Key) : r\u00F4le principal = signer les autres RRsets de la zone (A, MX, TXT, etc.). Elle est chang\u00E9e plus fr\u00E9quemment pour limiter l\u0027exposition et faciliter la gestion des signatures. Bonnes pratiques courantes :\n- Utiliser une KSK plus longue/robuste et la prot\u00E9ger fortement.\n- Roter ZSK r\u00E9guli\u00E8rement et KSK plus rarement.\n- Publier des DNSKEY sign\u00E9s et mettre \u00E0 jour un enregistrement DS dans la zone parente lors du changement de KSK (proc\u00E9dure de double signature ou double publication selon la strat\u00E9gie) pour \u00E9viter la rupture de la cha\u00EEne de confiance.\n- Tester les changements sur une fen\u00EAtre de mont\u00E9e en charge et pr\u00E9voir la propagation des DS DNSKEY avant d\u00E9sactivation.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "On r\u00E9cup\u00E8re une r\u00E9ponse DNS contenant un RRset \u0027example.com. A 93.184.216.34\u0027 accompagn\u00E9 d\u0027un RRSIG pour ce RRset. D\u00E9crivez les \u00E9tapes que le r\u00E9solveur effectue pour valider cet A record.",
              "Answer": "Le r\u00E9solveur r\u00E9cup\u00E8re le RRSIG, identifie l\u0027ID de cl\u00E9 et l\u0027algorithme, r\u00E9cup\u00E8re le DNSKEY correspondant (depuis la zone example.com), v\u00E9rifie la RRSIG en appliquant la cl\u00E9 publique DNSKEY au contenu du RRset et v\u00E9rifie la p\u00E9riode de validit\u00E9. Pour s\u0027assurer que le DNSKEY est digne de confiance, il compare l\u0027empreinte du DNSKEY au DS publi\u00E9 dans la zone parente (p. ex. com) ; si le DS correspond et que la parent\u00E9 est elle-m\u00EAme valid\u00E9e via la cha\u00EEne jusqu\u0027\u00E0 la trust anchor, la signature est consid\u00E9r\u00E9e valide et l\u0027A record est accept\u00E9e.",
              "Explanation": "Validation RRSIG requires both cryptographic verification of the signature against the DNSKEY and verification that the DNSKEY itself is authenticated by a DS in the parent zone forming a chain to a trust anchor."
            },
            {
              "Instruction": "Quelle diff\u00E9rence op\u00E9rationnelle y a-t-il entre la rotation d\u0027une ZSK et la rotation d\u0027une KSK ? Que faut-il faire de plus lors d\u0027un changement de KSK ?",
              "Answer": "La rotation d\u0027une ZSK implique de publier la nouvelle cl\u00E9 DNSKEY et d\u0027utiliser les deux cl\u00E9s pour signer pendant une p\u00E9riode de transition, puis retirer l\u0027ancienne. La rotation d\u0027une KSK n\u00E9cessite en plus de mettre \u00E0 jour le DS dans la zone parente (ou de coordonner avec l\u0027op\u00E9rateur de la zone parente) car le DS contient l\u0027empreinte de la KSK ; il faut donc publier la nouvelle KSK, faire signer et valider les DNSKEY, obtenir/mettre \u00E0 jour le DS c\u00F4t\u00E9 parent, puis retirer l\u0027ancienne KSK une fois la propagation termin\u00E9e.",
              "Explanation": "La KSK agit comme point d\u0027ancrage de confiance via le DS publi\u00E9 dans la zone parente ; changer la KSK sans mettre \u00E0 jour le DS casse la cha\u00EEne de confiance. La ZSK affecte seulement la signature des RRsets dans la m\u00EAme zone et n\u0027implique pas forc\u00E9ment de modifications dans la zone parente."
            },
            {
              "Instruction": "Vous voyez un enregistrement DS dans la zone parente qui ne correspond \u00E0 aucune DNSKEY retourn\u00E9e par la zone enfant. Quelle conclusion tirer et quelles actions le r\u00E9solveur prend-il ?",
              "Answer": "Si le DS dans la parente ne correspond \u00E0 aucune DNSKEY de l\u0027enfant, le r\u00E9solveur consid\u00E8re la d\u00E9l\u00E9gation comme bris\u00E9e pour DNSSEC : il ne peut pas \u00E9tablir la cha\u00EEne de confiance vers l\u0027enfant. Selon la politique de validation et le mode du r\u00E9solveur, la r\u00E9ponse peut \u00EAtre trait\u00E9e comme \u00AB bogus \u00BB (invalid) pour les enregistrements sign\u00E9s, ou la r\u00E9solution peut retomber en mode non-validant si configur\u00E9e ainsi. L\u0027administrateur de la zone devrait v\u00E9rifier la correspondance des cl\u00E9s et corriger le DS ou publier la DNSKEY correcte.",
              "Explanation": "Un mismatch DS/DNSKEY signifie qu\u0027il n\u0027existe pas de preuve cryptographique que la zone enfant est li\u00E9e \u00E0 ce que la parente annonce ; c\u0027est une rupture de la cha\u00EEne de confiance et doit \u00EAtre corrig\u00E9e c\u00F4t\u00E9 parent ou enfant."
            },
            {
              "Instruction": "Expliquez pourquoi les RRSIG ont des p\u00E9riodes de validit\u00E9 et que se passe-t-il si un RRSIG est hors p\u00E9riode.",
              "Answer": "Les RRSIG incluent une fen\u00EAtre de validit\u00E9 (debut/fin) pour limiter la dur\u00E9e durant laquelle une signature est accept\u00E9e, r\u00E9duisant ainsi l\u0027impact d\u0027une cl\u00E9 compromise et for\u00E7ant des renouvellements r\u00E9guliers des signatures. Si un RRSIG est hors p\u00E9riode, la signature est consid\u00E9r\u00E9e invalide et le RRset ne pourra pas \u00EAtre valid\u00E9 ; en g\u00E9n\u00E9ral le r\u00E9solveur marque la donn\u00E9e comme \u0027bogus\u0027 (invalide) pour DNSSEC.",
              "Explanation": "La p\u00E9riode de validit\u00E9 impose une rotation des signatures et une n\u00E9cessit\u00E9 de signer \u00E0 nouveau les RRsets ; accepter des signatures p\u00E9rim\u00E9es ouvrirait la porte \u00E0 des attaques de relecture ou \u00E0 l\u0027utilisation de signatures produites par une cl\u00E9 compromise longtemps auparavant."
            }
          ]
        },
        {
          "Title": "Comment DNSSEC prot\u00E8ge contre le spoofing et le cache poisoning",
          "Summary": "Description du processus de validation DNSSEC, r\u00F4le des validateurs et des trust anchors, et m\u00E9canismes d\u0027authentification des r\u00E9ponses (y compris NSEC/NSEC3 pour la n\u00E9gation authentifi\u00E9e).",
          "EstimatedMinutes": 40,
          "LearningObjectives": [
            "Expliquer le r\u00F4le fondamental de DNSSEC dans la protection contre le spoofing et le cache poisoning",
            "D\u00E9crire les \u00E9l\u00E9ments cryptographiques de DNSSEC (DNSKEY, RRSIG, DS) et leur fonction dans la validation",
            "D\u00E9crire pas \u00E0 pas le processus de validation d\u0027une r\u00E9ponse DNS sign\u00E9e",
            "Comprendre le r\u00F4le des validateurs r\u00E9cursifs et des trust anchors dans la cha\u00EEne de confiance",
            "Expliquer comment DNSSEC fournit une n\u00E9gation authentifi\u00E9e (NSEC / NSEC3) et la diff\u00E9rence entre ces m\u00E9canismes",
            "Identifier les limites op\u00E9rationnelles et les sc\u00E9narios o\u00F9 DNSSEC doit \u00EAtre compl\u00E9t\u00E9 par d\u0027autres protections"
          ],
          "Content": "Contexte : pourquoi DNSSEC ?\r\nLe DNS classique ne garantit pas l\u0027authenticit\u00E9 des r\u00E9ponses : un attaquant peut injecter des r\u00E9ponses falsifi\u00E9es (spoofing) ou empoisonner les caches des r\u00E9solveurs (cache poisoning). DNSSEC ajoute de la cryptographie au DNS pour permettre aux r\u00E9solveurs d\u0027authentifier que les donn\u00E9es proviennent bien de la zone signataire et qu\u0027elles n\u0027ont pas \u00E9t\u00E9 alt\u00E9r\u00E9es pendant le transport.\r\n\r\nBriques de base de DNSSEC\r\nDNSKEY : la cl\u00E9 publique publi\u00E9e dans la zone et sign\u00E9e par la zone elle\u2011m\u00EAme. RRSIG : la signature cryptographique d\u0027un jeu d\u0027enregistrements (RRset) cr\u00E9\u00E9e avec la cl\u00E9 priv\u00E9e correspondante \u00E0 une DNSKEY. DS (Delegation Signer) : enregistrement dans la zone parente contenant un condensat (digest) de la DNSKEY du sous\u2011domaine, liant la cl\u00E9 du fils \u00E0 la cha\u00EEne de confiance du parent. Ces \u00E9l\u00E9ments forment la base pour v\u00E9rifier l\u0027int\u00E9grit\u00E9 et l\u0027authenticit\u00E9 des r\u00E9ponses DNS.\r\n\r\nCha\u00EEne de confiance et trust anchors\r\nLa validation DNSSEC repose sur une cha\u00EEne de confiance qui commence par une \u0027trust anchor\u0027 : une cl\u00E9 publique de r\u00E9f\u00E9rence consid\u00E9r\u00E9e comme fiable par le validateur. Le cas typique est la cl\u00E9 publique du root (ou un autre point d\u0027ancrage configur\u00E9 manuellement). Le validateur utilise la trust anchor pour v\u00E9rifier la DNSKEY du parent (ex.: root), puis la DS descendante pour valider la DNSKEY du domaine enfant, et ainsi de suite jusqu\u0027\u00E0 la zone demand\u00E9e. Si \u00E0 n\u0027importe quel niveau la signature ou le lien DS/DNSKEY est invalide, la validation \u00E9choue.\r\n\r\nProcessus de validation DNSSEC (\u00E9tapes)\r\n1) Le r\u00E9solveur r\u00E9cursif obtient une r\u00E9ponse (RRset) et les RRSIG associ\u00E9s. 2) Il r\u00E9cup\u00E8re la DNSKEY correspondante pour cette zone (si n\u00E9cessaire) et v\u00E9rifie que la RRSIG d\u00E9crypt\u00E9e avec la cl\u00E9 publique DNSKEY couvre et authentifie le RRset. 3) Pour s\u0027assurer que la DNSKEY elle\u2011m\u00EAme est l\u00E9gitime, le r\u00E9solveur v\u00E9rifie l\u0027existence d\u0027un enregistrement DS dans la zone parente et confirme que le digest du DNSKEY correspond au DS. 4) Le r\u00E9solveur remonte ainsi la cha\u00EEne (parent \u2192 enfant) jusqu\u0027\u00E0 une trust anchor configur\u00E9e localement. 5) Si toutes les v\u00E9rifications cryptographiques r\u00E9ussissent, la r\u00E9ponse est consid\u00E9r\u00E9e comme authentique ; sinon elle est rejet\u00E9e ou marqu\u00E9e comme ind\u00E9termin\u00E9e selon la politique.\r\n\r\nR\u00F4le des validateurs r\u00E9cursifs\r\nLe validateur est le composant du r\u00E9solveur qui effectue les op\u00E9rations cryptographiques de v\u00E9rification. Il d\u00E9cide si une r\u00E9ponse doit \u00EAtre accept\u00E9e, rejet\u00E9e ou trait\u00E9e comme non s\u00E9curis\u00E9e. Les validateurs maintiennent la ou les trust anchors (automatiquement via RFCs pour le root ou manuellement pour d\u0027autres), g\u00E8rent la r\u00E9cup\u00E9ration des DNSKEY et DS, effectuent la v\u00E9rification des signatures (RRSIG) et appliquent la politique de \u0027secure/ bogus/ insecure\u0027 pour les r\u00E9ponses.\r\n\r\nAuthentification des r\u00E9ponses sign\u00E9es (RRSIG / DS)\r\nRRSIG contient la signature sur un RRset : elle prouve que le propri\u00E9taire de la cl\u00E9 priv\u00E9e correspondante affirme l\u0027exactitude du RRset. La DNSKEY publique permet de v\u00E9rifier la RRSIG. Pour prouver que cette DNSKEY appartient bien \u00E0 la zone et s\u0027ins\u00E8re dans la hi\u00E9rarchie, on utilise le DS dans la zone parente : le DS contient un hash de la DNSKEY et est sign\u00E9 par la zone parente. L\u0027authenticit\u00E9 globale r\u00E9sulte donc de la v\u00E9rification des signatures de chaque niveau et de la correspondance DS\u2192DNSKEY jusqu\u0027\u00E0 la trust anchor.\r\n\r\nN\u00E9gation authentifi\u00E9e : NSEC et NSEC3\r\nPour prouver qu\u2019un nom ou un type d\u2019enregistrement n\u0027existe pas, DNSSEC fournit des preuves sign\u00E9es : NSEC et NSEC3. NSEC renvoie le nom existant suivant (ordering lexicographique) et prouve qu\u0027il n\u0027y a rien entre les deux noms ; cela fournit une preuve de non\u2011existence sign\u00E9e. NSEC3 remplit le m\u00EAme r\u00F4le mais en utilisant des noms hach\u00E9s (proofs over hashed owner names) pour emp\u00EAcher le \u0027zone walking\u0027 (\u00E9num\u00E9ration compl\u00E8te des noms d\u0027une zone). NSEC3 ajoute \u00E9galement un sel et un nombre d\u0027it\u00E9rations pour renforcer le hachage. Dans tous les cas, la preuve est sign\u00E9e (RRSIG) et un attaquant ne peut pas inventer une preuve de non\u2011existence valide sans poss\u00E9der la cl\u00E9 priv\u00E9e.\r\n\r\nComment DNSSEC pr\u00E9vient le spoofing et le cache poisoning\r\nUn attaquant qui injecte des r\u00E9ponses falsifi\u00E9es ne peut pas produire de RRSIG valides sans la cl\u00E9 priv\u00E9e du propri\u00E9taire de la zone. Un r\u00E9solveur valide va v\u00E9rifier la signature et rejeter les r\u00E9ponses invalides, emp\u00EAchant ainsi l\u0027acceptation de donn\u00E9es empoisonn\u00E9es. Pour les r\u00E9ponses n\u00E9gatives, NSEC/NSEC3 emp\u00EAchent la fabrication de fausses NXDOMAIN ou d\u0027assertions d\u0027absence de type. Ainsi, la possibilit\u00E9 d\u0027empoisonner un cache r\u00E9cursif est fortement r\u00E9duite lorsque la validation DNSSEC est activ\u00E9e et exig\u00E9e.\r\n\r\nLimites et consid\u00E9rations op\u00E9rationnelles\r\nDNSSEC n\u0027assure pas la confidentialit\u00E9 (pas de chiffrement des donn\u00E9es) et ne prot\u00E8ge pas contre les attaques o\u00F9 la signature est retir\u00E9e si le r\u00E9solveur n\u0027exige pas DNSSEC (downgrade/stripping si une partie malveillante supprime les signatures sur le chemin). La taille des r\u00E9ponses augmente (RRSIG, DNSKEY) et peut d\u00E9clencher l\u0027utilisation de TCP ou d\u0027EDNS0 ; il faut planifier MTU/icmps et fragmentation. La gestion des cl\u00E9s (rollover) et des trust anchors n\u00E9cessite une op\u00E9ration soigneuse. Enfin, le d\u00E9ploiement incomplet (zones non sign\u00E9es) limite l\u0027efficacit\u00E9 globale.\r\n\r\nBonnes pratiques et recommandations\r\nActiver la validation DNSSEC sur les r\u00E9solveurs r\u00E9cursifs, maintenir \u00E0 jour les trust anchors (p.ex. root KSK), surveiller la taille des r\u00E9ponses et la configuration EDNS0, planifier les rollover de cl\u00E9s (ZSK/KSK) et tester les signatures. Compl\u00E9ter DNSSEC par d\u0027autres protections (TLS, HTTPS, DANE, mesure de l\u0027int\u00E9grit\u00E9 des r\u00E9ponses) selon les besoins.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "\u00C9num\u00E9rez, dans l\u0027ordre logique de v\u00E9rification, les \u00E9tapes minimales qu\u0027un validateur r\u00E9alise pour accepter comme authentique un RRset re\u00E7u.",
              "Answer": "1) R\u00E9cup\u00E9rer le RRset et son RRSIG. 2) Obtenir la DNSKEY de la zone et v\u00E9rifier que la RRSIG correspond \u00E0 cette DNSKEY. 3) V\u00E9rifier que la DNSKEY est li\u00E9e \u00E0 la zone parente via le DS (hash correspondant). 4) Remonter la cha\u00EEne jusqu\u0027\u00E0 une trust anchor valide. 5) Si toutes les v\u00E9rifications r\u00E9ussissent, accepter le RRset.",
              "Explanation": "La validation combine v\u00E9rification de signature (RRSIG contre DNSKEY) et v\u00E9rification de la cha\u00EEne de confiance (DS liant la DNSKEY au parent, jusqu\u0027\u00E0 la trust anchor). Sans ces \u00E9tapes dans l\u0027ordre, on ne peut pas garantir l\u0027authenticit\u00E9 du RRset."
            },
            {
              "Instruction": "Quel est le r\u00F4le d\u0027une trust anchor et que se passe-t-il si elle est compromise ou mal configur\u00E9e ?",
              "Answer": "La trust anchor est la cl\u00E9 publique initiale consid\u00E9r\u00E9e comme fiable par le validateur (p.ex. la cl\u00E9 du root). Elle sert de point de d\u00E9part pour v\u00E9rifier la cha\u00EEne de confiance. Si elle est compromise, toutes les validations bas\u00E9es sur elle deviennent peu fiables (faux positifs d\u0027authentification). Si elle est mal configur\u00E9e (absente ou erron\u00E9e), le validateur ne pourra pas valider les zones d\u00E9pendant de cette ancre et traitera potentiellement les r\u00E9ponses comme non s\u00E9curis\u00E9es ou les rejettera.",
              "Explanation": "La confiance DNSSEC est ancr\u00E9e dans la trust anchor : elle est la racine de l\u0027arbre de v\u00E9rification. Toute erreur ou compromission \u00E0 ce niveau impacte l\u0027ensemble des zones qui s\u0027appuient sur cette ancre, d\u0027o\u00F9 l\u0027importance d\u0027une gestion prudente et d\u0027un m\u00E9canisme de rollover bien contr\u00F4l\u00E9."
            },
            {
              "Instruction": "Expliquez la diff\u00E9rence entre NSEC et NSEC3 et pourquoi NSEC3 a \u00E9t\u00E9 introduit.",
              "Answer": "NSEC prouve la non\u2011existence en renvoyant le nom suivant dans l\u0027ordre lexicographique, ce qui permet de v\u00E9rifier qu\u0027il n\u0027y a pas de noms entre les deux. Cela permet toutefois de lister (zone walking) tous les noms d\u0027une zone. NSEC3 fournit la m\u00EAme preuve mais sur des noms hach\u00E9s ; les preuves sont donc des intervalles sur des noms hach\u00E9s, emp\u00EAchant l\u0027\u00E9num\u00E9ration facile des noms. NSEC3 a \u00E9t\u00E9 introduit pour emp\u00EAcher la zone walking tout en conservant la n\u00E9gation authentifi\u00E9e.",
              "Explanation": "Le but principal d\u0027NSEC3 est de limiter la capacit\u00E9 d\u0027un attaquant ou d\u0027un scanner \u00E0 collecter l\u0027ensemble des noms d\u0027une zone sign\u00E9e. Le hachage, \u00E9ventuellement sal\u00E9 et it\u00E9r\u00E9, rend l\u0027inversion des hachages et l\u0027\u00E9num\u00E9ration plus difficiles, au prix d\u0027une complexit\u00E9 et d\u0027un co\u00FBt de calcul suppl\u00E9mentaires."
            }
          ]
        },
        {
          "Title": "B\u00E9n\u00E9fices, limites et enjeux op\u00E9rationnels du d\u00E9ploiement",
          "Summary": "Analyse des avantages (int\u00E9grit\u00E9 et confiance) et des d\u00E9fis (gestion des cl\u00E9s, complexit\u00E9, fragmentation UDP/TCP, r\u00E9trocompatibilit\u00E9, politique de renouvellement), ainsi que des bonnes pratiques.",
          "EstimatedMinutes": 45,
          "LearningObjectives": [
            "Comprendre les b\u00E9n\u00E9fices principaux de DNSSEC : int\u00E9grit\u00E9, authenticit\u00E9 des donn\u00E9es et capacit\u00E9 d\u0027authentification des r\u00E9ponses n\u00E9gatives.",
            "Identifier les limites techniques et op\u00E9rationnelles du d\u00E9ploiement de DNSSEC (gestion des cl\u00E9s, complexit\u00E9, fragmentation UDP/TCP, r\u00E9trocompatibilit\u00E9, politique de renouvellement).",
            "Conna\u00EEtre les impacts sur l\u0027infrastructure DNS (taille des r\u00E9ponses, charge, besoins en stockage et en s\u00E9curit\u00E9 des cl\u00E9s).",
            "Appliquer des bonnes pratiques op\u00E9rationnelles pour planifier, d\u00E9ployer et maintenir DNSSEC de mani\u00E8re robuste et r\u00E9versible.",
            "Savoir diagnostiquer et att\u00E9nuer des incidents li\u00E9s \u00E0 DNSSEC (erreurs de signature, r\u00E9solveurs incompatibles, probl\u00E8mes de fragmentation)."
          ],
          "Content": "R\u00E9sum\u00E9 et contexte\r\nDNSSEC ajoute des signatures cryptographiques aux enregistrements DNS pour garantir que les r\u00E9ponses proviennent r\u00E9ellement de la zone autoritaire et n\u0027ont pas \u00E9t\u00E9 alt\u00E9r\u00E9es en transit. Ce module aborde les b\u00E9n\u00E9fices concrets et, surtout, les limites et enjeux op\u00E9rationnels \u00E0 consid\u00E9rer avant et pendant un d\u00E9ploiement.\r\n\r\nB\u00E9n\u00E9fice 1 \u2014 Int\u00E9grit\u00E9 des donn\u00E9es\r\nLa principale valeur ajout\u00E9e de DNSSEC est l\u0027int\u00E9grit\u00E9 : les enregistrements sign\u00E9s sont v\u00E9rifiables par des validateurs DNS. Une signature valide confirme que le contenu n\u0027a pas \u00E9t\u00E9 modifi\u00E9 entre l\u0027\u00E9metteur autoritaire et le r\u00E9solveur. Cela prot\u00E8ge contre la falsification de r\u00E9ponses (spoofing) et la redirection malveillante.\r\n\r\nB\u00E9n\u00E9fice 2 \u2014 Confiance et cha\u00EEne de d\u00E9l\u00E9gation\r\nDNSSEC permet de cr\u00E9er une cha\u00EEne de confiance depuis la racine jusqu\u0027\u00E0 la zone sign\u00E9e via les enregistrements DS. Cette authentification de l\u0027origine renforce des usages comme l\u0027anti-phishing, la validation de certificats li\u00E9s au nom de domaine et des services d\u00E9pendants d\u0027un DNS fiable.\r\n\r\nB\u00E9n\u00E9fice 3 \u2014 Authentification des r\u00E9ponses n\u00E9gatives\r\nDNSSEC fournit des preuves cryptographiques d\u0027absence (NSEC/NSEC3) : un r\u00E9solveur peut \u00EAtre s\u00FBr qu\u0027un enregistrement ou un nom d\u0027h\u00F4te n\u0027existe pas, ce qui r\u00E9duit une classe d\u0027attaques qui exploitent des r\u00E9ponses falsifi\u00E9es indiquant qu\u0027un service n\u0027existe pas.\r\n\r\nLimite majeure \u2014 Gestion des cl\u00E9s\r\nLa gestion des cl\u00E9s (KSK/ZSK) est au c\u0153ur de DNSSEC et demande des processus formalis\u00E9s : g\u00E9n\u00E9ration s\u00E9curis\u00E9e, stockage (souvent HSM), rotations planifi\u00E9es, proc\u00E9dures de sauvegarde et de r\u00E9cup\u00E9ration, politique de r\u00E9vocation et Pratiques de contr\u00F4le d\u0027acc\u00E8s. Une erreur dans la gestion des cl\u00E9s peut rendre une zone inaccessible (p. ex. signatures invalides) ou compromettre la cha\u00EEne de confiance.\r\n\r\nLimite \u2014 Complexit\u00E9 op\u00E9rationnelle\r\nDNSSEC introduit des \u00E9tapes suppl\u00E9mentaires dans le cycle de vie des enregistrements et des zones : cr\u00E9ation de signatures, surveillance de l\u0027expiration, coordination avec l\u0027op\u00E9rateur parent pour le DS, tests avant mise en production et proc\u00E9dures de sortie. Les \u00E9quipes doivent adapter leurs processus et automatiser autant que possible pour r\u00E9duire les erreurs humaines.\r\n\r\nLimite \u2014 Taille des r\u00E9ponses et fragmentation (UDP/TCP)\r\nLes RR sign\u00E9s augmentent la taille des r\u00E9ponses DNS. Sans EDNS0 ou avec des chemins r\u00E9seau limit\u00E9s, cela entra\u00EEne des r\u00E9ponses fragment\u00E9es en UDP ou des basculements vers TCP. La fragmentation UDP est fragile et peut \u00EAtre bloqu\u00E9e par des \u00E9quipements r\u00E9seau, provoquant des \u00E9checs de r\u00E9solution. Le support fiable de EDNS0/UDP et de TCP c\u00F4t\u00E9 r\u00E9solveurs et pare-feu est essentiel.\r\n\r\nLimite \u2014 R\u00E9trocompatibilit\u00E9 et d\u00E9ploiement progressif\r\nTous les r\u00E9solveurs sur Internet ne valident pas DNSSEC ; certains sont incapables de traiter correctement les grandes r\u00E9ponses ou les basculements TCP. Le d\u00E9ploiement n\u00E9cessite donc des tests progressifs, une surveillance des r\u00E9solveurs clients et des m\u00E9canismes de retour arri\u00E8re (un-signing ou retrait du DS) en cas d\u0027incident majeur.\r\n\r\nLimite \u2014 Politique de renouvellement et rollovers\r\nLa fr\u00E9quence et la m\u00E9thode de rotation des cl\u00E9s (rollover) influencent la s\u00E9curit\u00E9 et la r\u00E9silience. Les rollovers KSK (DS mis au parent) sont d\u00E9licats : ils n\u00E9cessitent coordination, publication pr\u00E9alable et gestion de la p\u00E9riode de v\u00E9rit\u00E9 multiple. Des rollovers mal planifi\u00E9s peuvent casser la validation pour une large base d\u0027utilisateurs.\r\n\r\nEnjeux de supervision et d\u0027incident\r\nLes indicateurs \u00E0 surveiller incluent taux d\u0027\u00E9checs de validation, temps de r\u00E9ponse, taux de fallback TCP, erreurs de signatures expir\u00E9es, \u00E9checs de publication DS et incoh\u00E9rences entre serveurs. Des proc\u00E9dures d\u0027alerte et playbooks sont n\u00E9cessaires pour restaurer rapidement la r\u00E9solution (p. ex. retrait du DS, re-signature, activation d\u0027une cl\u00E9 de secours).\r\n\r\nBonnes pratiques op\u00E9rationnelles \u2014 Gouvernance et processus\r\nD\u00E9finir une politique claire (niveaux de cl\u00E9s, p\u00E9riodicit\u00E9 de rotations, gestion des incidents) et documenter les proc\u00E9dures de bout en bout. D\u00E9signer des r\u00F4les (op\u00E9rations, s\u00E9curit\u00E9, propri\u00E9taire de domaine), r\u00E9aliser des revues r\u00E9guli\u00E8res et des exercices de rollover pour valider les processus.\r\n\r\nBonnes pratiques techniques \u2014 Automatisation et s\u00E9curit\u00E9 des cl\u00E9s\r\nAutomatiser la g\u00E9n\u00E9ration, la signature, la rotation et la publication des cl\u00E9s via des outils fiables. Utiliser des modules HSM pour prot\u00E9ger les cl\u00E9s priv\u00E9es, maintenir des sauvegardes chiffr\u00E9es hors-ligne et limiter les acc\u00E8s humains. Tester les rollovers sur environnements de staging avant production.\r\n\r\nBonnes pratiques r\u00E9seau \u2014 EDNS0, MTU et TCP\r\nV\u00E9rifier la prise en charge d\u0027EDNS0 et ajuster la taille de l\u0027UDP buffer (EDNS0 UDP payload) en coh\u00E9rence avec le chemin r\u00E9seau. S\u0027assurer que les pare-feu et NAT laissent passer TCP vers le port 53 et n\u0027interf\u00E8rent pas avec la fragmentation UDP. Surveiller et mesurer la proportion de r\u00E9ponses \u00E9chec par fragmentation.\r\n\r\nD\u00E9ploiement progressif et validation\r\nCommencer par signer des zones non critiques, monitorer l\u0027impact, puis monter en charge. Publier le DS seulement apr\u00E8s v\u00E9rification que la zone est sign\u00E9e correctement et que les r\u00E9solveurs cibl\u00E9s acceptent la configuration. Pr\u00E9voir une fen\u00EAtre de test et une strat\u00E9gie de retour arri\u00E8re document\u00E9e.\r\n\r\nChecklist de mise en production rapide\r\nPoints essentiels avant publication du DS : signatures valides et non expir\u00E9es sur Authoritative, coh\u00E9rence entre serveurs, sauvegarde des cl\u00E9s et proc\u00E9dures de r\u00E9cup\u00E9ration, tests depuis r\u00E9solveurs publics, v\u00E9rification EDNS0 et TCP, plan de communication et calendrier de rollover.\r\n\r\nConclusion synth\u00E9tique\r\nDNSSEC apporte une garantie cryptographique pr\u00E9cieuse pour l\u0027int\u00E9grit\u00E9 et la confiance dans le DNS, mais son d\u00E9ploiement n\u0027est pas neutre : il exige des \u00E9volutions de processus, des investissements en s\u00E9curit\u00E9 des cl\u00E9s, une attention au r\u00E9seau (taille des r\u00E9ponses, fragmentation) et une supervision renforc\u00E9e. Une approche progressive, test\u00E9e et automatis\u00E9e minimise les risques.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Vous planifiez de signer une zone de taille moyenne qui contient de nombreux enregistrements TXT et TLSA. Quels sont les trois risques op\u00E9rationnels imm\u00E9diats que vous devez v\u00E9rifier avant de publier le DS au parent ?",
              "Answer": "1) Augmentation significative de la taille des r\u00E9ponses entra\u00EEnant fragmentation UDP ou fallback TCP ; 2) Validit\u00E9 et disponibilit\u00E9 des signatures sur tous les serveurs autoritaires (synchronisation) ; 3) Gestion et s\u00E9curisation des cl\u00E9s priv\u00E9es (stockage, sauvegarde, proc\u00E9dure de rollover).",
              "Explanation": "Les enregistrements TXT et TLSA sont verbeux et augmentent la charge de RRset sign\u00E9, ce qui provoque parfois fragmentation ou TCP. Il faut s\u0027assurer que toutes les copies Authoritative disposent des m\u00EAmes signatures et que les processus de cl\u00E9 sont en place pour \u00E9viter une interruption li\u00E9e \u00E0 une cl\u00E9 compromise ou mal g\u00E9r\u00E9e."
            },
            {
              "Instruction": "Vous devez d\u00E9finir une fr\u00E9quence de rollover pour la ZSK et la KSK. Quelle strat\u00E9gie recommand\u00E9e proposez-vous et pourquoi ?",
              "Answer": "Recommander des rollovers fr\u00E9quents pour la ZSK (p. ex. tous les 1\u20133 mois) et plus rares pour la KSK (p. ex. tous les 1\u20133 ans), avec automation, publication pr\u00E9alable et tests. La ZSK prot\u00E8ge les enregistrements ; la KSK prot\u00E8ge la DS et n\u00E9cessite coordination avec le parent, donc rar\u00E9fier et planifier finement.",
              "Explanation": "La ZSK peut \u00EAtre roul\u00E9e plus souvent car l\u0027impact de sa rotation est local \u00E0 la zone et moins contraignant. La KSK implique le parent via le DS et pr\u00E9sente un risque plus \u00E9lev\u00E9 en cas d\u0027erreur ; la rotation doit donc \u00EAtre planifi\u00E9e, test\u00E9e et accompagn\u00E9e d\u0027une fen\u00EAtre de chevauchement pour \u00E9viter la rupture de la cha\u00EEne de confiance."
            },
            {
              "Instruction": "Un domaine sign\u00E9 voit soudainement augmenter les plaintes d\u0027inaccessibilit\u00E9 venant d\u0027utilisateurs dont les r\u00E9solveurs sont anciens. Quelle est la proc\u00E9dure de diagnostic et d\u0027action rapide ?",
              "Answer": "Diagnostiquer en v\u00E9rifiant : a) erreurs de validation depuis divers resolvers publics ; b) si les signatures sont valides et non expir\u00E9es ; c) si le DS publi\u00E9 au parent correspond au KSK. Action rapide : si la validation \u00E9choue \u00E0 grande \u00E9chelle, envisager temporairement le retrait du DS (d\u00E9validation de la cha\u00EEne) ou corriger les signatures/cl\u00E9s, puis republier apr\u00E8s v\u00E9rification.",
              "Explanation": "Commencer par mesurer l\u0027ampleur du probl\u00E8me depuis multiples vantage points. Les causes typiques sont signatures expir\u00E9es, DS mal pubi\u00E9 ou r\u00E9solveurs incapables de g\u00E9rer TCP/EDNS0. Le retrait du DS restaure la r\u00E9trocompatibilit\u00E9 au prix de perte de validation, mais peut \u00EAtre n\u00E9cessaire pour r\u00E9tablir l\u0027acc\u00E8s pendant la correction."
            },
            {
              "Instruction": "Proposez une configuration minimale recommand\u00E9e pour s\u00E9curiser les cl\u00E9s priv\u00E9es utilis\u00E9es avec DNSSEC.",
              "Answer": "Utiliser un HSM pour la KSK, stockage chiffr\u00E9 pour la ZSK si HSM non disponible, gestion d\u0027acc\u00E8s restreint et journalisation, sauvegardes chiffr\u00E9es hors-ligne, proc\u00E9dures document\u00E9es pour g\u00E9n\u00E9ration/rotation et tests de r\u00E9cup\u00E9ration r\u00E9guliers.",
              "Explanation": "Les cl\u00E9s priv\u00E9es sont le point critique : leur compromission annule la s\u00E9curit\u00E9 promise par DNSSEC. Les HSM offrent isolation et op\u00E9rations sign\u00E9es. Les sauvegardes et proc\u00E9dures garantissent la capacit\u00E9 de r\u00E9cup\u00E9rer en cas de p\u00E9ril (panne, compromission) sans casser la zone."
            }
          ]
        },
        {
          "Title": "D\u00E9monstration pratique et ressources pour aller plus loin",
          "Summary": "Atelier propos\u00E9 : signer une zone, publier DS, configurer un validateur et diagnostiquer des erreurs ; listes de ressources, outils et lectures recommand\u00E9es.",
          "EstimatedMinutes": 120,
          "LearningObjectives": [
            "Comprendre et ex\u00E9cuter les \u00E9tapes pratiques pour signer une zone DNS avec DNSSEC",
            "Publier l\u0027enregistrement DS appropri\u00E9 chez le parent (registry/registrar) pour \u00E9tablir la cha\u00EEne de confiance",
            "Configurer un r\u00E9solveur validant (validator) pour tester la validation DNSSEC d\u0027une zone",
            "Diagnostiquer les erreurs courantes de DNSSEC et corriger les probl\u00E8mes de cha\u00EEne de confiance",
            "Conna\u00EEtre les outils, ressources et lectures recommand\u00E9es pour approfondir DNSSEC"
          ],
          "Content": "Introduction \u00E0 l\u0027atelier\r\nCet atelier vise \u00E0 vous faire pratiquer les op\u00E9rations essentielles autour de DNSSEC : signer une zone, publier la DS chez le parent, configurer un validateur pour tester la zone et diagnostiquer les erreurs potentielles. Les sections suivantes d\u00E9taillent pas \u00E0 pas les t\u00E2ches, donnent des commandes d\u0027exemple et pointent vers des outils de diagnostic et de lecture.\r\n\r\nVue d\u0027ensemble de l\u0027atelier propos\u00E9\r\n\u00C9tapes principales : 1) g\u00E9n\u00E9rer les cl\u00E9s DNSSEC (KSK/ZSK) et signer la zone ; 2) extraire et publier l\u0027enregistrement DS vers le parent (registrar/registry) ; 3) configurer un r\u00E9solveur validant (ex. Unbound) ou un outil local pour v\u00E9rifier la validation ; 4) diagnostiquer et corriger les erreurs si la validation \u00E9choue. Pr\u00E9voyez un environnement de test (serveur DNS autoritatif et acc\u00E8s pour modifier l\u0027enregistrement DS au parent) ou des zones de test fournies par certains registrars.\r\n\r\nSigner une zone (exemples avec BIND)\r\n\u00C9tapes g\u00E9n\u00E9rales :\n1) G\u00E9n\u00E9rer les cl\u00E9s : dnssec-keygen -a RSASHA256 -b 2048 -n ZONE example.com\n2) Inclure les cl\u00E9s dans le fichier de zone (les fichiers .key) ou utiliser l\u0027option d\u0027inclusion automatique selon votre serveur.\n3) Signer la zone : dnssec-signzone -A -3 $(head -c 1000 /dev/urandom | sha1sum | cut -d\u0027 \u0027 -f1) -N increment -o example.com -t example.com.zone\nR\u00E9sultat : un fichier sign\u00E9 (ex. example.com.zone.signed) contenant RRSIG et les enregistrements DNSKEY. V\u00E9rifiez avec dig : dig @localhost example.com DNSKEY \u002Bdnssec \u002Bshort ou dig @127.0.0.1 example.com A \u002Bdnssec pour voir RRSIG.\r\n\r\nPublier l\u0027enregistrement DS chez le parent\r\nR\u00E9cup\u00E9rez l\u0027enregistrement DS depuis la cl\u00E9 KSK sign\u00E9e :\n- Avec BIND : dnssec-dsfromkey Kexample.com.\u002B008\u002B12345.key\nLe r\u00E9sultat est une ligne DS (digest type, key tag, algorithm, digest). Publiez ce DS via le panneau de gestion du registrar ou via l\u0027API du registry. Si vous avez un registrar qui supporte CDS/CDNSKEY, vous pouvez aussi publier CDS/CDNSKEY dans votre zone afin d\u0027automatiser la publication du DS au parent ; sinon, fournissez manuellement le DS au registrar.\nApr\u00E8s publication, attendez la propagation TTL et v\u00E9rifiez la pr\u00E9sence du DS avec : dig \u002Bshort example.com. DS @a.gtld-servers.net (ou utilisez dig \u002Btrace pour suivre).\r\n\r\nConfigurer un r\u00E9solveur validant\r\nExemple avec Unbound (outil l\u00E9ger de validation) :\n1) Installer unbound.\n2) Activer la validation dans /etc/unbound/unbound.conf :\n   server:\n     val-permissive-mode: no\n     auto-trust-anchor-file: \u0022/var/lib/unbound/root.key\u0022\n3) Initialiser/mettre \u00E0 jour l\u0027ancre racine : unbound-anchor -a /var/lib/unbound/root.key\n4) D\u00E9marrer Unbound et tester : dig @127.0.0.1 example.com A \u002Bdnssec\nR\u00E9sultats attendus : si la zone est valid\u00E9e, le drapeau AD (Authenticated Data) ou la r\u00E9ponse valide indiquera que la cha\u00EEne de confiance est intacte. Pour une v\u00E9rification stricte, utilisez delv (de l\u0027\u00E9quipe DNS) : delv @127.0.0.1 example.com \u002Bdnssec\r\n\r\nDiagnostiquer des erreurs courantes\r\nOutils utiles : dig, delv, drill, dnspython pour scripts, DNSViz (visualisation), Zonemaster, zlint, l\u0027interface du registrar pour logs.\nErreurs et diagnostics typiques :\n- Absence de DS chez le parent : la cha\u00EEne s\u0027arr\u00EAte au parent -\u003E v\u00E9rifier dans le panneau du registrar.\n- DS et DNSKEY mismatch : comparez le DS publi\u00E9 avec dnssec-dsfromkey sur la KSK. Si mismatch, r\u00E9g\u00E9n\u00E9rez DS ou publiez la bonne cl\u00E9.\n- Cl\u00E9s expir\u00E9es ou signatures RRSIG expir\u00E9es : v\u00E9rifier les timestamps et la politique de rollover.\n- Probl\u00E8mes de TTL/de synchronisation entre serveurs autoritatifs : assurez-vous que la zone sign\u00E9e est celle r\u00E9ellement servie par tous les NS.\nCommandes utiles :\n- dig \u002Bdnssec example.com @ns1.example.net\n- delv example.com NS\n- drill -D example.com\n- dnsviz.net pour une interface graphique de diagnostic\nApproche : reproduire l\u0027\u00E9chec localement contre votre r\u00E9solveur, examiner les RRSIG/DNSKEY/DS et v\u00E9rifier la correspondance et la p\u00E9riode de validit\u00E9.\r\n\r\nOutils pratiques et automatisation\r\nPrincipaux outils mentionn\u00E9s : dnssec-keygen/dnssec-signzone (BIND), OpenSSL pour la g\u00E9n\u00E9ration de nombres al\u00E9atoires, OpenDNSSEC (gestionnaire de cl\u00E9s et automatisation du signing), Unbound (r\u00E9solveur validant), delv/drill/dig (diagnostic), DNSViz/Zonemaster (analyses), zlint et dynamic tools pour v\u00E9rifier les pratiques recommand\u00E9es.\nBonnes pratiques : automatiser le rollover des cl\u00E9s (scripts ou OpenDNSSEC), garder une proc\u00E9dure \u00E9crite pour la publication du DS et le rollback, tester les op\u00E9rations hors heures de production, utiliser des environnements sandbox si possible.\r\n\r\nLectures et ressources recommand\u00E9es\r\nRessources officielles et guides :\n- RFC cl\u00E9s : RFC 4033/4034/4035 (base DNSSEC), RFC 5011 (mise \u00E0 jour automatique des trust anchors)\n- Guides pratiques : documentation BIND (dnssec-signzone), guides Unbound, manuel OpenDNSSEC\n- Outils en ligne : DNSViz (https://dnsviz.net), Zonemaster (https://zonemaster.net)\n- Articles et blogs : guides pas \u00E0 pas des registrars, posts de l\u0027IETF et d\u0027organisations TLD sur les bonnes pratiques\n- Recommandation : lire la documentation du registrar/registry utilis\u00E9 (format DS, support CDS/CDNSKEY, d\u00E9lais de propagation).\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "G\u00E9n\u00E9rez une paire de cl\u00E9s KSK et ZSK pour la zone example.test avec BIND puis signez la zone. D\u00E9crivez les commandes principales \u00E0 utiliser et le r\u00E9sultat attendu.",
              "Answer": "Commandes typiques :\n1) dnssec-keygen -a RSASHA256 -b 2048 -n ZONE example.test  (g\u00E9n\u00E8re ZSK)\n2) dnssec-keygen -a RSASHA256 -b 3072 -n ZONE -f KSK example.test  (g\u00E9n\u00E8re KSK)\n3) Inclure les fichiers .key dans le fichier de zone ou laisser dnssec-signzone les r\u00E9cup\u00E9rer.\n4) dnssec-signzone -A -3 $(head -c 1000 /dev/urandom | sha1sum | cut -d\u0027 \u0027 -f1) -N increment -o example.test -t example.test.zone\nR\u00E9sultat attendu : cr\u00E9ation d\u0027un fichier example.test.zone.signed contenant RRSIG pour chaque jeu d\u0027enregistrements et un enregistrement DNSKEY pour la zone.",
              "Explanation": "dnssec-keygen cr\u00E9e des paires de cl\u00E9s; on marque l\u0027une comme KSK (Key Signing Key) et l\u0027autre comme ZSK (Zone Signing Key). dnssec-signzone produit le fichier de zone sign\u00E9 (.signed) contenant RRSIG et les DNSKEY. V\u00E9rifiez les RRSIG via dig \u002Bdnssec."
            },
            {
              "Instruction": "\u00C0 partir de la KSK g\u00E9n\u00E9r\u00E9e \u00E0 l\u0027exercice pr\u00E9c\u00E9dent, extrayez la ligne DS \u00E0 transmettre au registrar. Quelle commande utiliser et quel format attendre ?",
              "Answer": "Commande : dnssec-dsfromkey Kexample.test.\u002B008\u002B\u003Ckeytag\u003E.key\nSortie : une ligne DS du type \u0022example.test. IN DS \u003Ckeytag\u003E \u003Calg\u003E \u003Cdigesttype\u003E \u003Cdigest\u003E\u0022. Exemple : example.test. 3600 IN DS 12345 8 2 E3B0C44298FC1C149AFBF4C8996FB924... (hex digest).",
              "Explanation": "dnssec-dsfromkey prend le fichier .key (contenant la cl\u00E9 publique) et calcule le DS (key tag, algorithm, digest type, digest) qu\u0027il faut communiquer au parent. Le registrar attend g\u00E9n\u00E9ralement les valeurs key tag, algorithme et digest (hex)."
            },
            {
              "Instruction": "Vous avez publi\u00E9 le DS chez le registrar mais la r\u00E9solution depuis un r\u00E9solveur validant renvoie SERVFAIL. Donnez une proc\u00E9dure de diagnostic pour identifier la cause.",
              "Answer": "Proc\u00E9dure de diagnostic :\n1) V\u00E9rifier la pr\u00E9sence du DS chez le parent : dig example.test DS \u002Bshort @a.gtld-servers.net\n2) V\u00E9rifier la DNSKEY servie par les serveurs autoritatifs : dig @ns1.example.test example.test DNSKEY \u002Bdnssec\n3) Comparer le DS publi\u00E9 et le DNSKEY (ou r\u00E9g\u00E9n\u00E9rer le DS avec dnssec-dsfromkey et comparer)\n4) V\u00E9rifier les RRSIG pour expiration : dig example.test SOA \u002Bdnssec / dig example.test A \u002Bdnssec et regarder les dates dans RRSIG\n5) Tester la cha\u00EEne avec delv/drill/dnsviz pour pointer la rupture (mismatch DS/DNSKEY, signatures expir\u00E9es, serveurs non synchronis\u00E9s)\n6) V\u00E9rifier que tous les serveurs NS servent la zone sign\u00E9e et actualis\u00E9e (m\u00EAme contenu) puis resigner si n\u00E9cessaire.\n7) Si tout semble correct c\u00F4t\u00E9 zone, v\u00E9rifier le TTL/propagation du DS chez le registrar et attendre la propagation.\nR\u00E9sultat attendu : identification de la cause (DS absent/mismatch, RRSIG expir\u00E9e, NS incoh\u00E9rents).",
              "Explanation": "SERVFAIL c\u00F4t\u00E9 r\u00E9solveur validant indique g\u00E9n\u00E9ralement un \u00E9chec de validation ou une erreur de r\u00E9solution. En suivant les \u00E9tapes on peut isoler si l\u0027erreur vient du parent (DS), des cl\u00E9s/signatures (mismatch ou expir\u00E9es) ou d\u0027une incoh\u00E9rence entre serveurs autoritatifs."
            },
            {
              "Instruction": "Configurez un r\u00E9solveur Unbound local pour valider example.test et tester la r\u00E9ponse. Quels param\u00E8tres cl\u00E9s modifier et quelle commande de test utiliser ?",
              "Answer": "Param\u00E8tres cl\u00E9s dans /etc/unbound/unbound.conf :\nserver:\n  verbosity: 1\n  do-not-query-localhost: no\n  auto-trust-anchor-file: \u0022/var/lib/unbound/root.key\u0022\nInitialiser l\u0027ancre racine : unbound-anchor -a /var/lib/unbound/root.key\nD\u00E9marrer Unbound puis tester : dig @127.0.0.1 example.test A \u002Bdnssec\nOn peut aussi utiliser delv : delv @127.0.0.1 example.test \u002Bdnssec\nR\u00E9sultat attendu : si la zone est correctement sign\u00E9e et DS pr\u00E9sent, la r\u00E9ponse affichera les enregistrements avec RRSIG et la validation r\u00E9ussie (AD flag dans certaines configurations ou sortie de delv indiquant VALID).",
              "Explanation": "Unbound g\u00E8re la validation DNSSEC via l\u0027ancre racine et v\u00E9rifie la cha\u00EEne de confiance jusqu\u0027\u00E0 la zone. auto-trust-anchor-file pointe vers le fichier contenant l\u0027ancre racine; unbound-anchor initialise/actualise cette ancre. Les outils dig/delv interrogent le r\u00E9solveur local et montrent si la r\u00E9ponse est valid\u00E9e."
            }
          ]
        }
      ]
    },
    {
      "Title": "Fondamentaux DNS/DNSSEC et outils",
      "Description": "Rappels DNS (zones, enregistrements), concepts DNSSEC (RRSIG, DNSKEY, DS, NSEC/NSEC3) et prise en main des outils de diagnostic (dig, delv, drill).",
      "EstimatedHours": 1,
      "Lessons": [
        {
          "Title": "Introduction et objectifs du module",
          "Summary": "Pr\u00E9sentation des objectifs p\u00E9dagogiques, du p\u00E9rim\u00E8tre (DNS et DNSSEC) et du d\u00E9roul\u00E9 du module avec les comp\u00E9tences vis\u00E9es.",
          "EstimatedMinutes": 30,
          "LearningObjectives": [
            "Comprendre le r\u00F4le et le fonctionnement de base du DNS (r\u00E9solution de noms, enregistrements principaux, architecture hi\u00E9rarchique).",
            "Identifier les menaces et limites du DNS non s\u00E9curis\u00E9 et expliquer pourquoi DNSSEC a \u00E9t\u00E9 con\u00E7u.",
            "Comprendre les principes fondamentaux de DNSSEC (signatures, cl\u00E9s publiques/priv\u00E9es, validation de cha\u00EEne de confiance).",
            "Conna\u00EEtre le p\u00E9rim\u00E8tre d\u0027apprentissage du module : concepts, bonnes pratiques et outils op\u00E9rationnels pour administrer et d\u00E9panner DNS/DNSSEC.",
            "Conna\u00EEtre le d\u00E9roul\u00E9 p\u00E9dagogique du module et les comp\u00E9tences vis\u00E9es \u00E0 l\u0027issue de chaque s\u00E9quence.",
            "Savoir quels outils seront utilis\u00E9s et quelles comp\u00E9tences pratiques seront d\u00E9velopp\u00E9es (ex. requ\u00EAtes DNS, inspection de signatures DNSSEC, gestion de cl\u00E9s)."
          ],
          "Content": "1. Pr\u00E9sentation et contexte\r\nCette le\u00E7on d\u0027introduction situe le module \u00AB Fondamentaux DNS/DNSSEC et outils \u00BB. Elle explique pourquoi le DNS est un service critique d\u0027infrastructure et rappelle son r\u00F4le central pour la r\u00E9solution de noms en adresses IP et la d\u00E9couverte de services. On pose \u00E9galement le contexte op\u00E9rationnel : administrations syst\u00E8me et r\u00E9seau, ing\u00E9nierie s\u00E9curit\u00E9, et besoins en diagnostic et en durcissement.\r\n\r\n2. Objectifs p\u00E9dagogiques du module\r\nLes objectifs p\u00E9dagogiques sont de fournir aux apprenants les bases th\u00E9oriques et pratiques n\u00E9cessaires pour administrer et s\u00E9curiser des zones DNS, comprendre le m\u00E9canisme DNSSEC et utiliser des outils courants pour diagnostiquer et valider des configurations. \u00C0 l\u0027issue du module, l\u0027apprenant doit pouvoir effectuer des requ\u00EAtes DNS, interpr\u00E9ter les enregistrements, rep\u00E9rer des anomalies et v\u00E9rifier la signature DNSSEC d\u0027une zone.\r\n\r\n3. P\u00E9rim\u00E8tre : ce que couvre \u2014 et ne couvre pas \u2014 le module\r\nCe module couvre : les concepts DNS fondamentaux (r\u00E9solution r\u00E9cursive vs it\u00E9rative, enregistrements A/AAAA/CNAME/MX/NS/TXT, zonage, d\u00E9l\u00E9gation), les principes essentiels de DNSSEC (RRSIG, DNSKEY, DS, cha\u00EEne de confiance), et l\u0027usage d\u0027outils CLI et graphiques pour l\u0027analyse et la v\u00E9rification. Il n\u0027entre pas dans les d\u00E9tails avanc\u00E9s tels que la mise \u00E0 l\u0027\u00E9chelle d\u0027infrastructures anycast \u00E0 grande \u00E9chelle, l\u0027automatisation compl\u00E8te de pipelines CI/CD pour DNS, ni l\u0027impl\u00E9mentation profonde d\u0027algorithmes cryptographiques.\r\n\r\n4. D\u00E9roul\u00E9 p\u00E9dagogique du module\r\nLe module est structur\u00E9 en s\u00E9quences : (A) notions de base DNS et pratique de requ\u00EAtes ; (B) administration de zones et pratiques de gestion (fichiers de zone, transferts, TTL) ; (C) concepts DNSSEC et processus de signature/d\u00E9ploiement ; (D) ateliers pratiques avec outils (dig/rsakey/validators, Wireshark pour traces DNS) ; (E) \u00E9tudes de cas et exercices de d\u00E9pannage. Chaque s\u00E9quence associe th\u00E9orie concise, d\u00E9monstration et exercice pratique.\r\n\r\n5. Comp\u00E9tences vis\u00E9es par s\u00E9quence\r\nA: Savoir identifier et interroger les enregistrements DNS et interpr\u00E9ter leurs r\u00E9ponses. B: Savoir lire et modifier un fichier de zone, comprendre la d\u00E9l\u00E9gation et les transferts de zone. C: Savoir expliquer le fonctionnement de DNSSEC, cr\u00E9er et g\u00E9rer des cl\u00E9s, signer une zone et v\u00E9rifier des RRSIG/DS. D: Savoir utiliser les outils de diagnostic (dig, drill, delv, validators) pour d\u00E9tecter erreurs et attaques simples. E: Savoir appliquer une proc\u00E9dure de d\u00E9pannage et r\u00E9diger un rapport succinct des anomalies d\u00E9tect\u00E9es.\r\n\r\n6. M\u00E9thodes p\u00E9dagogiques et pr\u00E9requis\r\nM\u00E9thode mixte : cours magistral court, d\u00E9monstrations live, ateliers pratiques et \u00E9tudes de cas. Pr\u00E9requis recommand\u00E9s : notions r\u00E9seau IP, familiarit\u00E9 basique avec la ligne de commande, compr\u00E9hension \u00E9l\u00E9mentaire des cl\u00E9s publiques/priv\u00E9es.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 En une phrase, r\u00E9sumez l\u0027objectif principal du module.",
              "Answer": "Permettre aux participants d\u0027acqu\u00E9rir les connaissances et comp\u00E9tences pratiques n\u00E9cessaires pour administrer, diagnostiquer et s\u00E9curiser des zones DNS en appliquant DNSSEC et en utilisant les outils adapt\u00E9s.",
              "Explanation": "La r\u00E9ponse attendue synth\u00E9tise l\u0027intention p\u00E9dagogique : combiner connaissance th\u00E9orique et savoir-faire op\u00E9rationnel autour du DNS et de DNSSEC."
            },
            {
              "Instruction": "Exercice 2 \u2014 Vrai ou Faux : 1) Le DNSSEC remplace enti\u00E8rement le DNS. 2) Un enregistrement DS est utilis\u00E9 dans la d\u00E9l\u00E9gation pour attester d\u0027une cl\u00E9 DNSKEY de la zone enfant.",
              "Answer": "1) Faux. 2) Vrai.",
              "Explanation": "DNSSEC n\u0027est pas un remplacement du DNS mais une extension de s\u00E9curit\u00E9 qui ajoute des signatures et un m\u00E9canisme de validation. L\u0027enregistrement DS (Delegation Signer) plac\u00E9 dans la zone parente pointe vers une cl\u00E9 de la zone enfant et permet d\u0027\u00E9tablir la cha\u00EEne de confiance."
            },
            {
              "Instruction": "Exercice 3 \u2014 Associez comp\u00E9tence et activit\u00E9 pratique : A) Interpr\u00E9ter une r\u00E9ponse DNS ; B) V\u00E9rifier une signature DNSSEC ; C) Diagnostiquer un \u00E9chec de r\u00E9solution d\u00FB \u00E0 une d\u00E9l\u00E9gation incorrecte. Activit\u00E9s : 1) Examiner les enregistrements NS et DS d\u0027une zone ; 2) Utiliser dig \u002Bdnssec ou un validator pour v\u00E9rifier RRSIG ; 3) Lire un paquet DNS captur\u00E9 et analyser le code d\u0027erreur.",
              "Answer": "A-3, B-2, C-1",
              "Explanation": "Interpr\u00E9ter une r\u00E9ponse DNS correspond souvent \u00E0 l\u0027analyse de paquets et des codes d\u0027erreur (3). V\u00E9rifier une signature DNSSEC se fait avec des outils qui affichent RRSIG/DNSKEY (2). Diagnostiquer une d\u00E9l\u00E9gation fautive n\u00E9cessite d\u0027examiner NS/DS et la configuration de d\u00E9l\u00E9gation (1)."
            }
          ]
        },
        {
          "Title": "Rappels : architecture et acteurs du DNS",
          "Summary": "Vue d\u0027ensemble du syst\u00E8me DNS : r\u00E9solveurs, serveurs r\u00E9cursifs, serveurs autoritatifs, zones et d\u00E9l\u00E9gation.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre le r\u00F4le global du DNS dans la r\u00E9solution de noms en adresses IP",
            "Identifier les diff\u00E9rents acteurs : stub resolver (r\u00E9solveur client), serveurs r\u00E9cursifs, serveurs autoritatifs",
            "Distinguer zones, enregistrements et fronti\u00E8res de d\u00E9l\u00E9gation",
            "Expliquer le processus de r\u00E9solution it\u00E9rative et r\u00E9cursive",
            "Comprendre l\u0027impact de la d\u00E9l\u00E9gation et du glue (enregistrements coll\u00E9s)",
            "Prendre conscience des implications de mise en cache et du TTL sur la r\u00E9solution"
          ],
          "Content": "Vue d\u0027ensemble du syst\u00E8me DNS\r\nLe DNS (Domain Name System) est un syst\u00E8me distribu\u00E9 qui mappe des noms de domaine lisibles par l\u0027humain en adresses IP et autres ressources. Il est con\u00E7u pour \u00EAtre scalable et tol\u00E9rant aux pannes. Les composants principaux coop\u00E8rent : les clients (r\u00E9solveurs stub) initient des requ\u00EAtes, les serveurs r\u00E9cursifs effectuent le travail de recherche sur Internet, et les serveurs autoritatifs d\u00E9tiennent la r\u00E9ponse d\u00E9finitive pour les zones dont ils ont la responsabilit\u00E9. La r\u00E9solution peut \u00EAtre r\u00E9cursive (un serveur fait tout le travail et retourne la r\u00E9ponse au client) ou it\u00E9rative (le client ou un r\u00E9solveur interroge plusieurs serveurs successivement).\r\n\r\nR\u00E9solveur client (stub resolver)\r\nLe stub resolver est la partie du logiciel r\u00E9seau sur la machine cliente (OS ou application) qui formule une requ\u00EAte DNS. Il envoie normalement la requ\u00EAte \u00E0 un serveur r\u00E9cursif configur\u00E9 (fournisseur d\u0027acc\u00E8s, entreprise, service public). Le stub resolver est l\u00E9ger : il envoie la requ\u00EAte et attend une r\u00E9ponse, il n\u0027effectue en g\u00E9n\u00E9ral pas la r\u00E9solution it\u00E9rative compl\u00E8te lui-m\u00EAme.\r\n\r\nServeurs r\u00E9cursifs (r\u00E9solveurs r\u00E9cursifs)\r\nLe serveur r\u00E9cursif accepte les requ\u00EAtes des clients et prend la responsabilit\u00E9 de trouver une r\u00E9ponse compl\u00E8te. Pour cela, il peut interroger d\u0027autres serveurs DNS (root, TLD, serveurs autoritatifs) de fa\u00E7on it\u00E9rative, ou utiliser sa cache. Les serveurs r\u00E9cursifs optimisent les performances (par cache, pr\u00E9fetching), appliquent parfois des politiques (filtrage, r\u00E9ponse non autoris\u00E9e), et peuvent enregistrer des m\u00E9triques. Ils sont souvent fournis par l\u0027ISP, l\u0027entreprise, ou des services publics/priv\u00E9s (ex. 8.8.8.8).\r\n\r\nServeurs autoritatifs\r\nLes serveurs autoritatifs d\u00E9livrent la r\u00E9ponse d\u00E9finitive pour une zone DNS donn\u00E9e. Une zone est un espace de noms pour lequel un administrateur a autorit\u00E9 (par ex. example.com). Les serveurs autoritatifs r\u00E9pondent avec les enregistrements (A, AAAA, MX, NS, SOA, etc.) pour la zone, et ils sont r\u00E9f\u00E9renc\u00E9s par des enregistrements NS au niveau de la zone parente. Un serveur autoritatif peut \u00EAtre primaire (source de v\u00E9rit\u00E9) ou secondaire (r\u00E9pliqu\u00E9 via AXFR/IXFR).\r\n\r\nZones DNS et enregistrements\r\nUne zone DNS est une portion hi\u00E9rarchique de l\u0027espace de noms (ex. example.com). Elle contient des enregistrements de ressources (RRSets) : A/AAAA pour adresses, MX pour mail, CNAME pour alias, NS pour d\u00E9l\u00E9gation, SOA pour les m\u00E9tadonn\u00E9es de zone, etc. Le SOA contient des informations de gestion (num\u00E9ro de s\u00E9rie, refresh, retry, expire, TTL par d\u00E9faut). Les enregistrements d\u00E9finissent la configuration et la r\u00E9ponse apport\u00E9e aux requ\u00EAtes DNS.\r\n\r\nD\u00E9l\u00E9gation et glue records\r\nLa d\u00E9l\u00E9gation se produit quand une zone parent (ex. com) confie la responsabilit\u00E9 d\u0027une sous-zone (ex. example.com) \u00E0 des serveurs nomm\u00E9s par des enregistrements NS. Les enregistrements NS dans la zone parente indiquent quels serveurs autoritatifs contacter. Si les serveurs de noms d\u00E9l\u00E9gu\u00E9s sont dans la zone fille (ex. ns1.example.com), il faut fournir des \u0027glue records\u0027 (enregistrements A/AAAA coll\u00E9s) dans la zone parente pour rompre le cercle de d\u00E9pendance et permettre de localiser les serveurs NS. Sans glue, le r\u00E9solveur ne pourrait pas trouver l\u0027adresse IP du serveur NS pour d\u00E9marrer la r\u00E9solution.\r\n\r\nFlux de r\u00E9solution pas \u00E0 pas (exemple)\r\nExemple : un client cherche www.example.com. 1) Le client envoie la requ\u00EAte au serveur r\u00E9cursif configur\u00E9. 2) Si le r\u00E9cursif n\u0027a pas la r\u00E9ponse en cache, il interroge un serveur racine pour obtenir l\u0027autorit\u00E9 du TLD (.com). 3) Le r\u00E9cursif interroge le serveur TLD pour obtenir les NS de example.com (et \u00E9ventuellement glue). 4) Il contacte ensuite un des serveurs autoritatifs pour example.com pour obtenir l\u0027enregistrement A/AAAA de www. 5) Le serveur autoritatif renvoie la r\u00E9ponse, le r\u00E9cursif la met en cache en respectant les TTL, puis renvoie la r\u00E9ponse au client.\r\n\r\nCaching et TTL\r\nLe caching est crucial pour la performance du DNS : les serveurs r\u00E9cursifs stockent les r\u00E9ponses pendant la dur\u00E9e indiqu\u00E9e par le TTL des enregistrements. Un TTL \u00E9lev\u00E9 r\u00E9duit la latence et la charge, mais ralentit la propagation des changements. Un TTL faible facilite la mise \u00E0 jour rapide mais augmente la charge sur les serveurs autoritatifs. Le cache peut contenir la r\u00E9ponse finale ou des informations partielles (d\u00E9l\u00E9gation NS, glue).\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Dans le sc\u00E9nario suivant, identifiez l\u0027acteur pour chaque r\u00F4le : un utilisateur sur son poste demande la page web, l\u0027ISP fournit 8.8.8.8 comme r\u00E9solveur, et le domaine example.com a des serveurs ns1.example.com (A=192.0.2.53) et ns2.example.com. Qui est le stub resolver, le serveur r\u00E9cursif et le serveur autoritatif ?",
              "Answer": "Stub resolver : le logiciel DNS sur le poste de l\u0027utilisateur. Serveur r\u00E9cursif : le r\u00E9solveur fourni par l\u0027ISP (8.8.8.8 dans l\u0027exemple). Serveur(s) autoritatif(s) : ns1.example.com et ns2.example.com.",
              "Explanation": "Le stub resolver est toujours c\u00F4t\u00E9 client et envoie la requ\u00EAte au r\u00E9solveur configur\u00E9. Le r\u00E9solveur externe (8.8.8.8) effectue la r\u00E9solution r\u00E9cursive. Les serveurs nomm\u00E9s dans la zone example.com sont responsables (autoritatifs) des enregistrements de cette zone."
            },
            {
              "Instruction": "Tracez succinctement les requ\u00EAtes DNS effectu\u00E9es quand le r\u00E9solveur r\u00E9cursif ne poss\u00E8de aucune entr\u00E9e en cache et doit r\u00E9soudre www.example.com.",
              "Answer": "1) Requ\u00EAte au serveur racine pour .com. 2) Requ\u00EAte au serveur TLD .com pour obtenir les NS d\u0027example.com (et glue si n\u00E9cessaire). 3) Requ\u00EAte \u00E0 l\u0027un des serveurs autoritatifs d\u0027example.com pour obtenir l\u0027A/AAAA de www.example.com. 4) R\u00E9ponse au r\u00E9solveur, mise en cache, puis r\u00E9ponse au client.",
              "Explanation": "Le r\u00E9solveur suit la cha\u00EEne hi\u00E9rarchique : racines \u2192 TLD \u2192 autoritatifs. \u00C0 chaque \u00E9tape il obtient des d\u00E9l\u00E9gations NS qui le guident vers l\u0027autorit\u00E9 finale qui fournit l\u0027enregistrement demand\u00E9."
            },
            {
              "Instruction": "Expliquez pourquoi des \u0027glue records\u0027 sont n\u00E9cessaires quand les serveurs NS d\u0027une zone sont eux-m\u00EAmes dans cette zone (par ex. ns1.example.com pour example.com).",
              "Answer": "Les glue records fournissent l\u0027adresse IP des serveurs NS dans la zone parente pour \u00E9viter une d\u00E9pendance circulaire. Sans glue, pour trouver ns1.example.com il faudrait d\u00E9j\u00E0 interroger ns1.example.com, ce qui est impossible.",
              "Explanation": "La r\u00E9solution it\u00E9rative repose sur la capacit\u00E9 \u00E0 localiser le serveur NS indiqu\u00E9 par la zone parente. Si ce NS est d\u00E9fini dans la zone fille, le r\u00E9solveur n\u0027a pas encore d\u0027information pour la zone fille : la zone parente inclut donc des enregistrements A/AAAA coll\u00E9s (glue) afin de permettre d\u0027atteindre le serveur autoritatif et poursuivre la r\u00E9solution."
            },
            {
              "Instruction": "Quelle est l\u0027impact d\u0027un TTL tr\u00E8s court sur les enregistrements d\u0027une zone (avantages et inconv\u00E9nients) ?",
              "Answer": "Avantages : les changements d\u0027enregistrements se propagent rapidement, utile pour basculements fr\u00E9quents. Inconv\u00E9nients : augmente la charge sur les serveurs autoritatifs et r\u00E9duit l\u0027efficacit\u00E9 du cache, ce qui peut augmenter la latence et la consommation de bande passante.",
              "Explanation": "Le TTL contr\u00F4le combien de temps une r\u00E9ponse est conserv\u00E9e en cache. Un TTL court force le r\u00E9solveur r\u00E9cursif \u00E0 re-valider/puller les donn\u00E9es plus souvent, am\u00E9liorant la r\u00E9activit\u00E9 aux changements au prix d\u0027une charge accrue."
            }
          ]
        },
        {
          "Title": "Zones DNS et fichiers de zone",
          "Summary": "Format des fichiers de zone, SOA, TTL, et bonnes pratiques de structuration d\u0027une zone DNS.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre la structure et le format d\u0027un fichier de zone DNS",
            "Identifier et expliquer les diff\u00E9rents types d\u0027enregistrements courants (A, AAAA, CNAME, MX, NS, TXT, PTR, SRV)",
            "Ma\u00EEtriser l\u0027enregistrement SOA et la signification de chacun de ses champs",
            "Savoir comment fonctionnent les TTL (valeurs par zone, par enregistrement, et cache n\u00E9gatif)",
            "Appliquer des bonnes pratiques pour structurer, versionner et maintenir une zone DNS en production"
          ],
          "Content": "Introduction et r\u00F4le d\u0027une zone DNS\r\nUne zone DNS est l\u0027unit\u00E9 administrative d\u0027un espace de noms DNS. Elle contient l\u0027ensemble des enregistrements (resource records) pour un domaine ou une portion d\u0027un domaine (par exemple example.com ou 2.0.192.in-addr.arpa). Un fichier de zone est la repr\u00E9sentation textuelle d\u0027une zone, utilis\u00E9e par un serveur DNS ma\u00EEtre pour charger les enregistrements et r\u00E9pondre aux requ\u00EAtes ou autoriser des transferts de zone vers des esclaves.\r\n\r\nFormat g\u00E9n\u00E9ral d\u0027un fichier de zone\r\nUn fichier de zone est une s\u00E9quence de lignes textuelles. Chaque ligne contient typiquement: un nom d\u0027h\u00F4te (ou un \u0027@\u0027 pour le nom de la zone), un TTL (optionnel), une classe (g\u00E9n\u00E9ralement IN), un type d\u0027enregistrement et les donn\u00E9es du type. Les directives commencent par un \u0027$\u0027 (par ex. $ORIGIN, $TTL, $INCLUDE, $GENERATE). Les commentaires commencent par \u0027;\u0027 et s\u0027\u00E9tendent jusqu\u0027\u00E0 la fin de la ligne. Les espaces et tabulations s\u00E9parent les champs; les cha\u00EEnes contenant des espaces doivent \u00EAtre entre guillemets.\nDirectives utiles:\n- $ORIGIN: fixe le suffixe ajout\u00E9 aux noms relatifs (par ex. example.com.).\n- $TTL: d\u00E9finit un TTL par d\u00E9faut pour les enregistrements qui n\u0027ont pas de TTL explicite.\n- $INCLUDE / $GENERATE: inclure ou g\u00E9n\u00E9rer des blocs d\u0027enregistrements.\nLes noms relatifs sont compl\u00E9t\u00E9s avec $ORIGIN; un nom se terminant par un \u0027.\u0027 est consid\u00E9r\u00E9 comme absolu.\r\n\r\nEnregistrements courants et leur syntaxe\r\nEnregistrements fr\u00E9quemment utilis\u00E9s:\n- SOA (Start of Authority): doit appara\u00EEtre une seule fois au d\u00E9but de la zone et d\u00E9crit la zone (voir section d\u00E9di\u00E9e).\n- NS: indique les serveurs de noms autoritaires pour la zone (d\u00E9signe des noms, pas d\u0027adresses IP directement).\n- A / AAAA: mappings d\u0027un nom vers une adresse IPv4 / IPv6.\n- CNAME: alias d\u0027un nom vers un autre nom (ne doit pas coexister avec d\u0027autres enregistrements pour le m\u00EAme nom, sauf DNSSEC-related records).\n- MX: mail exchange, pointe vers un nom h\u00F4te qui doit avoir un enregistrement A/AAAA.\n- TXT: texte libre, souvent utilis\u00E9 pour SPF, DKIM, v\u00E9rifications.\n- PTR: inverse mapping (adresse IP -\u003E nom), utilis\u00E9 dans les zones inverses (in-addr.arpa / ip6.arpa).\n- SRV: sp\u00E9cifie des services (protocole, priorit\u00E9, poids, port, cible).\nExemples de lignes:\n@    3600  IN  SOA ns1.example.com. hostmaster.example.com. ( 2025101901 3600 900 1209600 3600 )\nwww  3600  IN  A    192.0.2.10\nmail 3600  IN  MX  10 mail.example.com.\r\n\r\nD\u00E9tail de l\u0027enregistrement SOA\r\nLe SOA (Start of Authority) contient des m\u00E9tadonn\u00E9es essentielles pour la zone. Il a la forme:\n\u003Cname\u003E [TTL] [class] SOA \u003Cmname\u003E \u003Crname\u003E ( serial refresh retry expire minimum )\nChamps importants:\n- mname: nom du serveur ma\u00EEtre pour la zone (serveur primaire).\n- rname: adresse email du responsable de la zone, mais \u00E9crite avec un \u0027.\u0027 \u00E0 la place du \u0027@\u0027 (ex. hostmaster.example.com. correspond \u00E0 hostmaster@example.com).\n- serial: num\u00E9ro de version de la zone, utilis\u00E9 par les esclaves pour d\u00E9tecter les mises \u00E0 jour. Doit \u00EAtre incr\u00E9ment\u00E9 \u00E0 chaque modification.\n- refresh: intervalle (en s) apr\u00E8s lequel un esclave interroge le ma\u00EEtre pour v\u00E9rifier le serial.\n- retry: intervalle (en s) \u00E0 attendre avant de retenter si le refresh \u00E9choue.\n- expire: dur\u00E9e (en s) apr\u00E8s laquelle la zone sur un esclave est consid\u00E9r\u00E9e obsol\u00E8te s\u0027il n\u0027a pas pu joindre le ma\u00EEtre.\n- minimum: historiquement TTL minimum et utilis\u00E9 pour le cache n\u00E9gatif (RFC2308 a pr\u00E9cis\u00E9 l\u0027usage: ce champ est le TTL par d\u00E9faut pour les enregistrements n\u00E9gatifs).\nBonnes pratiques pour le serial: utiliser un format facile \u00E0 incr\u00E9menter automatiquement, typiquement YYYYMMDDnn (ex. 2025101901). Eviter de remettre \u00E0 z\u00E9ro un serial plus r\u00E9cent pour ne pas casser la synchronisation.\r\n\r\nTTL : principes, valeurs et cache n\u00E9gatif\r\nTTL (Time To Live) indique combien de temps un enregistrement peut \u00EAtre mis en cache par les r\u00E9solveurs interm\u00E9diaires. On trouve trois niveaux de TTL:\n- TTL sur un enregistrement: valeur explicite dans la ligne d\u0027enregistrement (prioritaire).\n- $TTL (directive): valeur par d\u00E9faut pour tous les enregistrements sans TTL explicite.\n- Minimum/negative TTL (champ SOA /-minimum): dur\u00E9e durant laquelle une r\u00E9ponse n\u00E9gative (NXDOMAIN / NODATA) peut \u00EAtre mise en cache.\nConseils:\n- Utiliser des TTL longs (heures/jours) pour les enregistrements stables (NS, A d\u0027hosts stables) pour r\u00E9duire la charge.\n- Utiliser des TTL courts (quelques minutes) pour des services fr\u00E9quents de basculement ou pour permettre des changements rapides, en sachant que de trop courts TTL augmentent la charge et la latence.\n- Lors d\u0027un changement planifi\u00E9, baisser le TTL plusieurs heures/jours avant, faire le changement, puis remonter le TTL.\n- Le gestionnaire doit distinguer le TTL de cache et le d\u00E9lai de propagation administrative: m\u00EAme si le TTL expire, les caches et r\u00E9solveurs peuvent se comporter diff\u00E9remment; les enregistrements historiques peuvent persister.\r\n\r\nErreurs courantes et points d\u0027attention\r\nErreurs fr\u00E9quentes:\n- CNAME coexistant avec d\u0027autres enregistrements pour le m\u00EAme nom (interdit).\n- Oublier le \u0027.\u0027 final sur les noms absolus, ce qui peut provoquer une concat\u00E9nation involontaire avec $ORIGIN.\n- Avoir un enregistrement MX pointant vers un CNAME (interdit dans la pratique; MX doit pointer vers un nom canonique avec A/AAAA).\n- Ne pas incr\u00E9menter correctement le serial (les esclaves ne d\u00E9tecteront pas les changements).\n- Mettre des TTL trop courts sans raison, ce qui surcharge le serveur.\n- Delegation incorrecte: NS d\u0027une zone enfant doivent \u00EAtre d\u00E9clar\u00E9s dans la zone parente avec glue records (A/AAAA) si les serveurs sont dans la zone enfant.\nV\u00E9rifications syst\u00E8me: utiliser des outils comme named-checkzone, named-checkconf (BIND), dig, host, ou des validateurs en ligne pour d\u00E9tecter la syntaxe et les incoh\u00E9rences.\r\n\r\nBonnes pratiques de structuration et maintenance d\u0027une zone\r\nOrganisation et maintenance:\n- S\u00E9parer les enregistrements par fonction (NS et SOA en t\u00EAte, puis enregistrements critiques: A/AAAA, MX, puis aliases et TXT).\n- Documenter chaque modification (changelog externe ou commentaire dans le fichier de zone) et utiliser un syst\u00E8me de gestion de versions (git) pour les fichiers de zone.\n- Standardiser le format du serial (YYYYMMDDnn) pour faciliter les scripts d\u0027automatisation.\n- Minimiser la longueur des fichiers de zone et \u00E9viter les duplications: utiliser $INCLUDE pour factoriser.\n- Pr\u00E9parer des proc\u00E9dures de mise \u00E0 jour: baisser le TTL avant un changement critique, effectuer la modification, v\u00E9rifier via dig, puis augmenter le TTL.\n- S\u00E9curiser les transferts de zone (AXFR/IXFR): limiter aux serveurs esclaves autoris\u00E9s, utiliser TSIG pour authentifier les transferts.\n- D\u00E9ployer des serveurs DNS redondants sur des fournisseurs et r\u00E9seaux diff\u00E9rents et v\u00E9rifier la coh\u00E9rence des donn\u00E9es.\n- Tester la r\u00E9solution depuis l\u0027ext\u00E9rieur (r\u00E9solveurs publics) pour v\u00E9rifier la propagation et la configuration des d\u00E9l\u00E9gations.\n- Pour DNSSEC: signer la zone et g\u00E9rer la rotation des cl\u00E9s avec prudence; mettre \u00E0 jour le DS chez le parent lors d\u0027un changement de cl\u00E9 KSK.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Dans la ligne SOA suivante, identifiez chaque champ et donnez sa signification:\n@ 3600 IN SOA ns1.example.com. hostmaster.example.com. ( 2025101901 7200 3600 1209600 3600 )",
              "Answer": "mname = ns1.example.com. (serveur ma\u00EEtre)\nrname = hostmaster.example.com. (adresse email hostmaster@example.com)\nserial = 2025101901 (num\u00E9ro de version de la zone)\nrefresh = 7200 (seconds; intervalle pour que les esclaves v\u00E9rifient le ma\u00EEtre)\nretry = 3600 (seconds; d\u00E9lai avant nouvelle tentative si le refresh \u00E9choue)\nexpire = 1209600 (seconds; d\u00E9lai apr\u00E8s lequel la zone est consid\u00E9r\u00E9e p\u00E9rim\u00E9e sur un esclave)\nminimum = 3600 (seconds; TTL pour cache n\u00E9gatif / valeur minimum historique)",
              "Explanation": "Le SOA suit la syntaxe standard. mname et rname donnent respectivement le ma\u00EEtre et le contact. Les valeurs num\u00E9riques sont en secondes et gouvernent le comportement de rafra\u00EEchissement et d\u0027expiration sur les serveurs esclaves; le serial sert \u00E0 d\u00E9tecter les changements."
            },
            {
              "Instruction": "\u00C9crivez un fichier de zone minimal pour example.com. incluant: SOA, deux NS (ns1/ns2.example.com), un A pour host \u0027www\u0027 (192.0.2.10), un enregistrement MX pointant vers mail.example.com. et un A pour mail (192.0.2.20). Utilisez $ORIGIN et $TTL et un serial au format YYYYMMDD02 pour aujourd\u0027hui (supposons date 2025-10-19).",
              "Answer": "$ORIGIN example.com.\n$TTL 3600\n@    IN SOA  ns1.example.com. hostmaster.example.com. (\n        2025101902 ; serial\n        7200       ; refresh\n        3600       ; retry\n        1209600    ; expire\n        3600       ; minimum\n)\n\n@    IN NS   ns1.example.com.\n@    IN NS   ns2.example.com.\n\nns1  IN A    192.0.2.1\nns2  IN A    192.0.2.2\n\nwww  IN A    192.0.2.10\nmail IN A    192.0.2.20\n@    IN MX   10 mail.example.com.",
              "Explanation": "Le fichier commence par $ORIGIN et $TTL pour d\u00E9finir le suffixe et le TTL par d\u00E9faut. Le SOA contient un serial 2025101902 (format YYYYMMDDnn). Deux NS sont d\u00E9clar\u00E9s pour la d\u00E9l\u00E9gation; si ns1/ns2 r\u00E9sident dans la m\u00EAme zone, il faut fournir des enregistrements A (glue) dans la zone parente si n\u00E9cessaire. MX pointe vers mail.example.com. qui a son A propre."
            },
            {
              "Instruction": "Si un fichier de zone contient la directive $TTL 3600 mais qu\u0027une entr\u00E9e \u2018api IN A 198.51.100.5 7200\u2019 est pr\u00E9sente, quel TTL sera utilis\u00E9 pour \u0027api\u0027 par les r\u00E9solveurs ?",
              "Answer": "Le TTL 7200 d\u00E9fini sur l\u0027enregistrement \u0027api\u0027 est celui qui sera utilis\u00E9. Les valeurs explicites sur un enregistrement priment sur $TTL.",
              "Explanation": "$TTL fixe seulement la valeur par d\u00E9faut. Tout enregistrement avec un TTL explicite remplace cette valeur. Les r\u00E9solveurs mettront en cache l\u0027enregistrement \u0027api\u0027 pendant 7200 secondes."
            },
            {
              "Instruction": "Trouvez l\u0027erreur dans le morceau de zone suivant et expliquez pourquoi c\u0027est probl\u00E9matique:\n@ IN MX 10 mail.example.com.\nmail IN CNAME mailhost.example.com.\nmail IN A 192.0.2.20",
              "Answer": "Erreur: \u0027mail\u0027 a \u00E0 la fois un CNAME et un A record (et est utilis\u00E9 comme cible MX). Un nom ne doit pas avoir un CNAME et d\u0027autres enregistrements simultan\u00E9ment. De plus, un MX ne devrait pas pointer vers un CNAME.",
              "Explanation": "Un enregistrement CNAME indique que le nom est un alias complet et ne peut coexister avec d\u0027autres enregistrements (A, MX, etc.). Si MX pointe vers un nom qui est un CNAME, cela viole la pratique attendue et peut provoquer des \u00E9checs de livraison de mail ou des comportements non conformes. La correction consiste \u00E0 utiliser soit un A pour \u0027mail\u0027, soit faire en sorte que l\u0027enregistrement MX pointe directement vers un nom canonique qui poss\u00E8de un A/AAAA."
            }
          ]
        },
        {
          "Title": "Types d\u0027enregistrements DNS courants",
          "Summary": "Examen des enregistrements A/AAAA, CNAME, MX, TXT, NS, PTR et SRV et de leurs usages pratiques.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre la fonction et la syntaxe des enregistrements A et AAAA et savoir quand les utiliser",
            "Savoir diff\u00E9rencier CNAME et enregistrements directs, et conna\u00EEtre leurs limitations",
            "Interpr\u00E9ter les enregistrements MX et leur r\u00F4le dans la livraison d\u0027e\u2011mails (priorit\u00E9s, d\u00E9pendances)",
            "Identifier les usages courants des enregistrements TXT (SPF, DKIM, DMARC, informations diverses)",
            "Conna\u00EEtre le r\u00F4le des enregistrements NS pour la d\u00E9l\u00E9gation de zones et des enregistrements PTR pour la r\u00E9solution inverse",
            "Comprendre la structure d\u0027un enregistrement SRV et ses cas d\u0027utilisation (services SIP, XMPP, etc.)",
            "Appliquer les bonnes pratiques (TTL, conflits, s\u00E9curit\u00E9, interactions avec proxys/CDN) et diagnostiquer les erreurs fr\u00E9quentes"
          ],
          "Content": "Introduction : r\u00F4le des enregistrements DNS\r\nLe DNS associe des noms de domaine \u00E0 des informations vari\u00E9es via des enregistrements. Chaque type d\u0027enregistrement a une s\u00E9mantique pr\u00E9cise et des usages pratiques diff\u00E9rents (adresses IP, alias, serveurs de mail, m\u00E9tadonn\u00E9es, d\u00E9l\u00E9gation de zones, services). Une bonne ma\u00EEtrise \u00E9vite erreurs de configuration et pannes.\r\n\r\nA et AAAA \u2013 adresses IPv4 et IPv6\r\nA mappe un nom d\u0027h\u00F4te \u00E0 une adresse IPv4 (ex. example.com. 3600 IN A 198.51.100.42). AAAA fait de m\u00EAme pour IPv6 (ex. host.example.com. 3600 IN AAAA 2001:db8::1). Usages pratiques : pointer un h\u00F4te vers l\u0027adresse de la machine/VM/Load Balancer. Points importants : TTL contr\u00F4le la dur\u00E9e du cache ; un nom peut avoir plusieurs A/AAAA pour la redondance/round-robin ; les enregistrements d\u0027adresse doivent correspondre \u00E0 l\u0027adresse r\u00E9ellement affect\u00E9e au service (ou au proxy/CDN si proxifi\u00E9).\r\n\r\nCNAME \u2013 alias canonical\r\nCNAME cr\u00E9e un alias d\u0027un nom vers un autre nom canonique (ex. www.example.com. 3600 IN CNAME example.com.). Usage : simplifier la gestion d\u0027alias et d\u00E9l\u00E9guer la cible des enregistrements d\u0027un sous\u2011domaine. Limitations et bonnes pratiques : un enregistrement CNAME ne peut coexister avec d\u0027autres enregistrements du m\u00EAme nom (pas d\u0027A/MX/TXT sur le m\u00EAme nom) ; ne pas utiliser pour l\u0027apex (nom nu du domaine) car l\u0027apex n\u00E9cessite souvent NS/MX/TXT ; r\u00E9solution r\u00E9cursive : le nom cible doit \u00EAtre r\u00E9solu ensuite vers A/AAAA.\r\n\r\nMX \u2013 enregistrements de messagerie\r\nMX (Mail eXchanger) indique les serveurs acceptant le courrier pour un domaine (ex. example.com. 3600 IN MX 10 mx1.mail.example.com.). Chaque MX a une priorit\u00E9 (valeur num\u00E9rique plus petite = priorit\u00E9 plus haute). Bonnes pratiques : les cibles MX doivent id\u00E9alement \u00EAtre des noms avec A/AAAA (\u00E9viter pointer un MX vers un CNAME) ; pr\u00E9voir plusieurs MX avec des priorit\u00E9s distinctes pour redondance ; configurer correctement PTR et reverse DNS pour l\u0027envoi d\u0027e\u2011mail afin d\u0027\u00E9viter le rejet par les anti\u2011spam.\r\n\r\nTXT \u2013 texte libre, SPF, DKIM, DMARC\r\nTXT contient des donn\u00E9es textuelles associ\u00E9es \u00E0 un nom. Usages courants : SPF (v=spf1 ...), enregistrements DKIM (s\u00E9lecteurs avec cl\u00E9 publique), DMARC (_dmarc.example.com), v\u00E9rifications de propri\u00E9t\u00E9 (Google, ACME), m\u00E9tadonn\u00E9es diverses. Remarques : certains fournisseurs limitent la longueur d\u0027un champ TXT \u2014 des cha\u00EEnes peuvent \u00EAtre concat\u00E9n\u00E9es ; attention \u00E0 l\u0027ordre et \u00E0 la syntaxe des m\u00E9canismes SPF pour \u00E9viter des refus d\u0027exp\u00E9dition.\r\n\r\nNS \u2013 d\u00E9l\u00E9gation et serveurs faisant autorit\u00E9\r\nNS indique quels serveurs DNS sont autoritaires pour une zone (ex. example.com. 172800 IN NS ns1.example.net.). Pour d\u00E9l\u00E9guer un sous\u2011domaine, on cr\u00E9e des NS dans la zone parente et des enregistrements correspondants chez le registrar si n\u00E9cessaire. Bonnes pratiques : garder la coh\u00E9rence entre la d\u00E9l\u00E9gation et les serveurs configur\u00E9s ; fournir glue records (A/AAAA) si les serveurs NS sont dans la zone d\u00E9l\u00E9gu\u00E9e pour \u00E9viter une boucle de d\u00E9pendance.\r\n\r\nPTR \u2013 r\u00E9solution inverse (IP \u2192 nom)\r\nPTR mappe une adresse IP invers\u00E9e \u00E0 un nom d\u0027h\u00F4te (ex. 42.100.51.198.in-addr.arpa. 86400 IN PTR mail.example.com.). Usage principal : reverse DNS pour authentification des serveurs sortants (mail), diagnostics r\u00E9seau. Remarque : le PTR est g\u00E9n\u00E9ralement contr\u00F4l\u00E9 par le propri\u00E9taire du bloc IP (ISP, h\u00E9bergeur), pas par le propri\u00E9taire du domaine, donc coordination n\u00E9cessaire pour l\u0027envoi d\u0027e\u2011mail fiable.\r\n\r\nSRV \u2013 d\u00E9couverte de services\r\nSRV sp\u00E9cifie des serveurs fournissant un service particulier avec priorit\u00E9, poids et port (ex. _sip._tcp.example.com. 3600 IN SRV 10 60 5060 sip1.example.com.). Structure : priority weight port target. Usages : SIP, XMPP, LDAP, Kerberos, etc. Bonnes pratiques : fournir plusieurs SRV pour redondance ; s\u0027assurer que les targets ont des A/AAAA ; comprendre que SRV vaut pour le service/protocole indiqu\u00E9 et non pour tout trafic HTTP/SMTP.\r\n\r\nAstuces pratiques, pi\u00E8ges courants et diagnostic\r\nPi\u00E8ges fr\u00E9quents : placer un CNAME \u00E0 l\u0027apex ; pointer un MX vers un CNAME ; oublier les glue records pour les NS dans la m\u00EAme zone ; conflit d\u0027enregistrements (CNAME vs autres types) ; TTL trop long lors de changements fr\u00E9quents. Outils de diagnostic : dig/nslookup/host pour requ\u00EAtes sp\u00E9cifiques (A, AAAA, MX, TXT, SRV, PTR) ; traceroute et v\u00E9rification reverse pour e\u2011mail. S\u00E9curit\u00E9 : utiliser DNSSEC pour garantir l\u0027int\u00E9grit\u00E9 des r\u00E9ponses ; limiter les TTL pour migrations planifi\u00E9es ; valider SPF/DKIM/DMARC pour la d\u00E9livrabilit\u00E9 des e\u2011mails.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Interpr\u00E9tez ces enregistrements :\n1) host.example.com. 3600 IN A 198.51.100.25\n2) host.example.com. 3600 IN AAAA 2001:db8::25\nQue signifient-ils et comment le client choisira\u2011t\u2011il l\u0027adresse \u00E0 utiliser ?",
              "Answer": "Le nom host.example.com a \u00E0 la fois une adresse IPv4 (A) et IPv6 (AAAA). Un client compatible IPv6 pr\u00E9f\u00E9rera g\u00E9n\u00E9ralement AAAA si la connectivit\u00E9 IPv6 est disponible; sinon il utilisera A. Le syst\u00E8me r\u00E9sout les deux et la pile r\u00E9seau s\u00E9lectionne selon la politique du syst\u00E8me (Happy Eyeballs, pr\u00E9f\u00E9rer IPv6 si fonctionnel).",
              "Explanation": "A donne IPv4, AAAA donne IPv6. Les clients et biblioth\u00E8ques de r\u00E9solution choisissent selon disponibilit\u00E9 et politiques (ex. RFC 8305 Happy Eyeballs) : ils testent souvent IPv6 puis IPv4 pour r\u00E9duire latence en environnements mixtes."
            },
            {
              "Instruction": "Pourquoi ne faut-il pas cr\u00E9er un CNAME pour le domaine apex (ex. example.com) ? Quelle erreur commune cela provoque ?",
              "Answer": "Un CNAME au niveau de l\u0027apex entre en conflit avec d\u0027autres enregistrements n\u00E9cessaires (NS, SOA, MX, TXT, etc.). Les RFC interdisent la coexistence d\u0027un CNAME avec d\u0027autres enregistrements pour le m\u00EAme nom, donc mettre un CNAME \u00E0 l\u0027apex casse la zone et emp\u00EAche l\u0027ajout d\u0027enregistrements critiques comme MX.",
              "Explanation": "Le domaine racine d\u0027une zone n\u00E9cessite des enregistrements SOA/NS et souvent MX/TXT. Un CNAME signifierait que tous les enregistrements additionnels ne pourraient exister, ce qui rendrait la zone invalide ou provoquerait un comportement erratique chez les r\u00E9solveurs et serveurs DNS."
            },
            {
              "Instruction": "On a ces deux enregistrements pour example.com :\nexample.com. IN MX 10 mx1.example.com.\nexample.com. IN MX 20 mx2.example.com.\nSi mx1 est hors service, que fait un serveur exp\u00E9diteur de mail ?",
              "Answer": "Le serveur exp\u00E9diteur tentera d\u0027abord mx1 (priorit\u00E9 10). S\u0027il \u00E9choue (timeout/connexion refus\u00E9e), il tentera mx2 (priorit\u00E9 20). Les priorit\u00E9s plus faibles sont essay\u00E9es avant les plus \u00E9lev\u00E9es ; si plusieurs enregistrements ont la m\u00EAme priorit\u00E9, le poids peut \u00EAtre utilis\u00E9 (non applicable ici) ou l\u0027ordre est indiff\u00E9rent.",
              "Explanation": "Le protocole SMTP consulte les MX tri\u00E9s par priorit\u00E9 num\u00E9rique (plus petit = prioritaire). Les serveurs doivent retenter les serveurs de priorit\u00E9 sup\u00E9rieure ensuite. Il est conseill\u00E9 d\u0027avoir plusieurs MX pour r\u00E9silience."
            },
            {
              "Instruction": "Formez un enregistrement SRV pour indiquer que le service _sip._tcp.example.com est fourni par sip1.example.com sur le port 5060 avec priorit\u00E9 5 et poids 50.",
              "Answer": "_sip._tcp.example.com. 3600 IN SRV 5 50 5060 sip1.example.com.",
              "Explanation": "Format SRV : _service._proto.name TTL IN SRV priority weight port target. Priority = 5 (plus bas = pr\u00E9f\u00E9r\u00E9), weight = 50 pour \u00E9quilibrage entre m\u00EAmes priorit\u00E9s, port = 5060, target = nom du serveur avec A/AAAA."
            },
            {
              "Instruction": "Un administrateur d\u0027un serveur de messagerie se plaint que ses e\u2011mails sont marqu\u00E9s comme spam. On lui demande de v\u00E9rifier la r\u00E9solution inverse (PTR). Que doit\u2011il v\u00E9rifier et pourquoi ?",
              "Answer": "Il doit v\u00E9rifier que l\u0027adresse IP publique de son serveur mail poss\u00E8de un PTR pointant vers le nom d\u0027h\u00F4te utilis\u00E9 par le serveur (ex. 42.100.51.198.in-addr.arpa PTR mail.example.com.) et que ce nom d\u0027h\u00F4te r\u00E9sout en A/AAAA vers la m\u00EAme IP. Si ce n\u0027est pas le cas, il doit demander au fournisseur IP de configurer le PTR. Une correspondance coh\u00E9rente am\u00E9liore la r\u00E9putation et \u00E9vite le rejet par les filtres anti\u2011spam.",
              "Explanation": "De nombreux filtres anti\u2011spam exigent une correspondance forward/backward (PTR -\u003E hostname et hostname -\u003E IP) et v\u00E9rifient l\u0027existence d\u0027un PTR. Comme le PTR est contr\u00F4l\u00E9 par le propri\u00E9taire du bloc IP (ISP), le propri\u00E9taire du domaine doit coordonner la configuration avec l\u0027ISP."
            }
          ]
        },
        {
          "Title": "Processus de r\u00E9solution DNS",
          "Summary": "D\u00E9tail des r\u00E9solutions r\u00E9cursives vs it\u00E9ratives, cache, mise en cha\u00EEne des serveurs racine -\u003E TLD -\u003E autoritatif.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre les r\u00F4les des serveurs racine, des serveurs TLD et des serveurs DNS autoritatifs dans une r\u00E9solution de nom",
            "Diff\u00E9rencier r\u00E9solution r\u00E9cursive et r\u00E9solution it\u00E9rative et savoir quand chacune est utilis\u00E9e",
            "Expliquer le fonctionnement du cache DNS et l\u0027impact du TTL sur la r\u00E9solution",
            "Suivre pas \u00E0 pas la mise en cha\u00EEne des serveurs (root -\u003E TLD -\u003E autoritatif) lors d\u0027une requ\u00EAte DNS",
            "Interpr\u00E9ter les flags essentiels d\u0027un message DNS (RD, RA, AA, RCODE) et les r\u00E9ponses de type referral",
            "Identifier les points o\u00F9 la s\u00E9curit\u00E9 (p.ex. DNSSEC) intervient dans le processus de r\u00E9solution"
          ],
          "Content": "Introduction au processus de r\u00E9solution DNS\r\nLe DNS (Domain Name System) traduit des noms lisibles par l\u0027homme (ex. example.com) en adresses IP. La r\u00E9solution consiste \u00E0 obtenir l\u0027enregistrement demand\u00E9 \u00E0 partir d\u0027une hi\u00E9rarchie de serveurs: serveurs racine, serveurs TLD (top-level domain), et serveurs autoritatifs pour le domaine. Deux modes principaux existent pour obtenir la r\u00E9ponse: r\u00E9cursif et it\u00E9ratif. Comprendre ces modes et la mise en cha\u00EEne des serveurs est essentiel pour diagnostiquer des probl\u00E8mes et optimiser la performance.\r\n\r\nConcepts cl\u00E9s et acteurs\r\nActeurs: r\u00E9solveur stub (typiquement le client ou l\u0027OS), r\u00E9solveur r\u00E9cursif (fourni par l\u0027ISP ou public comme 1.1.1.1), serveurs racine (.), serveurs TLD (.com, .fr, etc.), serveurs autoritatifs pour le domaine (g\u00E9r\u00E9s par le registrar ou l\u0027h\u00E9bergeur). Concepts: question (query), r\u00E9ponse (answer), referral (renvoi vers d\u0027autres serveurs), cache (m\u00E9morisation des r\u00E9ponses), TTL (time-to-live), flags: RD (recursion desired), RA (recursion available), AA (authoritative answer).\r\n\r\nR\u00E9solution r\u00E9cursive vs it\u00E9rative \u2014 d\u00E9finitions\r\nR\u00E9solution r\u00E9cursive: le client demande au r\u00E9solveur r\u00E9cursif d\u0027obtenir la r\u00E9ponse compl\u00E8te. Le r\u00E9solveur prend en charge toutes les \u00E9tapes (interroger root, TLD, autoritatif) et retourne le r\u00E9sultat final au client. Le client attend la r\u00E9ponse finale. R\u00E9solution it\u00E9rative: le client interroge s\u00E9quentiellement diff\u00E9rents serveurs; chaque serveur peut r\u00E9pondre directement s\u0027il conna\u00EEt la r\u00E9ponse ou renvoyer une liste de serveurs plus proches (referral). Un client it\u00E9ratif suit ces renvois jusqu\u0027\u00E0 obtenir la r\u00E9ponse finale.\r\n\r\nQui fait quoi dans la pratique\r\nDans la plupart des cas clients (navigateurs, OS), on utilise un r\u00E9solveur r\u00E9cursif fourni par l\u0027ISP ou un service public: le client envoie une requ\u00EAte avec RD=1 au r\u00E9solveur r\u00E9cursif. Le r\u00E9solveur, agissant en tant que client pour la hi\u00E9rarchie, effectue des requ\u00EAtes it\u00E9ratives vers les root puis TLD puis autoritatifs (avec RD=0) pour construire la r\u00E9ponse compl\u00E8te. Les serveurs racine et TLD renvoient souvent des referrals (liste d\u0027adresses de serveurs plus bas dans la hi\u00E9rarchie).\r\n\r\nMise en cha\u00EEne: root -\u003E TLD -\u003E serveur autoritatif (pas \u00E0 pas)\r\n1) Le r\u00E9solveur r\u00E9cursif demande au serveur racine l\u0027enregistrement A de host.example.com. 2) Le serveur racine ne conna\u00EEt pas la r\u00E9ponse mais r\u00E9pond par un referral: adresses des serveurs TLD responsables de .com. 3) Le r\u00E9solveur interroge un serveur TLD .com pour host.example.com. 4) Le serveur TLD renvoie un referral vers les serveurs autoritatifs pour example.com (ou renvoie la d\u00E9l\u00E9gation NS). 5) Le r\u00E9solveur interroge l\u0027un des serveurs autoritatifs pour example.com; celui-ci renvoie la r\u00E9ponse finale (ex. enregistrement A) avec AA=1. 6) Le r\u00E9solveur stocke la r\u00E9ponse en cache (selon le TTL) et renvoie la r\u00E9ponse finale au client.\r\n\r\nCache DNS et TTL\r\nLe cache est tenu principalement par le r\u00E9solveur r\u00E9cursif et parfois par le client. Une r\u00E9ponse DNS a un TTL qui indique combien de temps elle peut \u00EAtre conserv\u00E9e en cache. Lorsque le r\u00E9solveur a une entr\u00E9e valide en cache, il retourne la r\u00E9ponse sans parcourir la hi\u00E9rarchie, ce qui r\u00E9duit la latence et la charge. Le TTL peut \u00EAtre r\u00E9duit pour permettre des changements rapides (mais augmente la charge) ou augment\u00E9 pour diminuer les requ\u00EAtes r\u00E9p\u00E9t\u00E9es.\r\n\r\nR\u00E9ponses types: answer, authority, additional, referrals\r\nLa section answer contient les enregistrements demand\u00E9s. La section authority contient les enregistrements NS (d\u00E9l\u00E9guant la zone). La section additional contient souvent des enregistrements A/AAAA pour les NS list\u00E9s (glue records) afin d\u0027aider \u00E0 la r\u00E9solution. Un serveur qui ne d\u00E9tient pas l\u0027enregistrement mais sait qui peut le fournir renvoie un referral: il place les NS dans authority et \u00E9ventuellement des adresses IP de ces NS dans additional (glue).\r\n\r\nDrapeaux et codes d\u0027\u00E9tat importants\r\nRD (Recursion Desired): demand\u00E9 par le client pour une recherche r\u00E9cursive. RA (Recursion Available): le r\u00E9solveur indique s\u0027il peut effectuer la r\u00E9cursion. AA (Authoritative Answer): l\u0027\u00E9metteur de la r\u00E9ponse est autoritatif pour la zone. RCODE: code d\u0027erreur (NOERROR, NXDOMAIN, SERVFAIL...). Comprendre ces champs aide \u00E0 diagnostiquer pourquoi une requ\u00EAte a \u00E9chou\u00E9 (p.ex. NXDOMAIN signifie que le nom n\u0027existe pas).\r\n\r\nExemple de trace simple\r\nHypoth\u00E8se: client -\u003E r\u00E9solveur r\u00E9cursif demande A pour www.example.com avec RD=1. 1) R\u00E9solveur consulte son cache; si absent, il envoie une requ\u00EAte (RD=0) au root. 2) Root r\u00E9pond: referral vers .com. 3) R\u00E9solveur interroge un serveur .com; il r\u00E9pond: referral vers ns1.example.com et ns2.example.com et peut inclure glue records. 4) R\u00E9solveur interroge ns1.example.com; ce serveur est autoritatif et renvoie l\u0027enregistrement A pour www.example.com. 5) R\u00E9solveur renvoie la r\u00E9ponse au client (avec RA=1 indiquant qu\u0027il a effectu\u00E9 la r\u00E9cursion).\r\n\r\nPoints d\u0027optimisation et caches interm\u00E9diaires\r\nOutre le r\u00E9solveur r\u00E9cursif, d\u0027autres caches peuvent exister: cache de l\u0027OS, cache du navigateur, cache des CDN, caches des r\u00E9solveurs publics. Les r\u00E9solveurs r\u00E9cursifs utilisent souvent des pr\u00E9fetching et negative caching (cacher NXDOMAIN pour un TTL donn\u00E9). La coh\u00E9rence des changements DNS d\u00E9pend du TTL; le propri\u00E9taire de la zone doit \u00E9quilibrer rapidit\u00E9 de propagation et charge induite.\r\n\r\nS\u00E9curit\u00E9 et DNSSEC (vue d\u0027ensemble)\r\nDNSSEC ajoute une couche d\u0027authentification: les enregistrements sont sign\u00E9s. Lors d\u0027une r\u00E9solution compl\u00E8te, le r\u00E9solveur peut v\u00E9rifier les signatures en remontant la cha\u00EEne de confiance depuis une cl\u00E9 racine connue. DNSSEC prot\u00E8ge contre des falsifications (spoofing) en permettant au r\u00E9solveur de s\u0027assurer que les r\u00E9ponses proviennent bien de la zone autoris\u00E9e. Les \u00E9tapes de r\u00E9solution restent similaires, mais des enregistrements DNSKEY, RRSIG et DS sont r\u00E9cup\u00E9r\u00E9s et v\u00E9rifi\u00E9s.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "D\u00E9cris la diff\u00E9rence principale entre une r\u00E9solution r\u00E9cursive et une r\u00E9solution it\u00E9rative en une phrase chacune.",
              "Answer": "R\u00E9solution r\u00E9cursive: le client demande au r\u00E9solveur de fournir la r\u00E9ponse finale; le r\u00E9solveur fait tout le travail. R\u00E9solution it\u00E9rative: le client interroge successivement plusieurs serveurs, suivant les referrals jusqu\u0027\u00E0 obtenir la r\u00E9ponse.",
              "Explanation": "La diff\u00E9rence cl\u00E9 est qui effectue la cha\u00EEne de requ\u00EAtes: dans la r\u00E9cursive, le r\u00E9solveur centralise le travail; dans l\u0027it\u00E9rative, le client suit les renvois."
            },
            {
              "Instruction": "Dans une r\u00E9solution typique o\u00F9 le r\u00E9solveur n\u0027a rien en cache, liste l\u0027ordre des serveurs interrog\u00E9s pour r\u00E9soudre www.example.com.",
              "Answer": "1) Serveur racine -\u003E 2) Serveur TLD (.com) -\u003E 3) Serveur(s) autoritatifs pour example.com -\u003E r\u00E9ponse finale.",
              "Explanation": "Le r\u00E9solveur commence par la racine qui donne la d\u00E9l\u00E9gation vers le TLD; le TLD d\u00E9l\u00E8gue vers les serveurs autoritatifs de la zone cible qui contiennent l\u0027enregistrement demand\u00E9."
            },
            {
              "Instruction": "Si un serveur TLD renvoie uniquement des enregistrements NS sans adresses IP, que doit faire le r\u00E9solveur pour contacter ces NS ?",
              "Answer": "Le r\u00E9solveur doit r\u00E9soudre les noms d\u0027h\u00F4te des serveurs NS (faire des requ\u00EAtes suppl\u00E9mentaires pour obtenir leurs adresses A/AAAA), sauf si des glue records (adresses) sont fournis dans la section additional.",
              "Explanation": "Les NS sont des noms, pas des adresses; pour interroger un NS, il faut conna\u00EEtre son IP. Les glue records fournis par la zone sup\u00E9rieure \u00E9vitent des boucles de d\u00E9pendance et \u00E9conomisent ces r\u00E9solutions suppl\u00E9mentaires."
            },
            {
              "Instruction": "Quel est l\u0027effet du TTL sur le comportement du r\u00E9solveur et sur la charge du r\u00E9seau ?",
              "Answer": "TTL \u00E9lev\u00E9: r\u00E9ponses gard\u00E9es longtemps en cache, moins de requ\u00EAtes r\u00E9p\u00E9t\u00E9es (moins de charge), mais plus lente propagation des changements. TTL faible: mises \u00E0 jour se propagent rapidement, mais augmentation des requ\u00EAtes et de la charge r\u00E9seau.",
              "Explanation": "Le TTL contr\u00F4le la dur\u00E9e de mise en cache: une valeur courte force les r\u00E9solveurs \u00E0 revalider fr\u00E9quemment, tandis qu\u0027une valeur longue r\u00E9duit le nombre de requ\u00EAtes vers la hi\u00E9rarchie DNS."
            },
            {
              "Instruction": "En regardant un message DNS, quels drapeaux indiquent qu\u0027une r\u00E9ponse est autoritative et que le serveur a effectu\u00E9 la r\u00E9cursion pour obtenir la r\u00E9ponse ?",
              "Answer": "AA=1 indique que la r\u00E9ponse provient d\u0027un serveur autoritatif; RA=1 dans la r\u00E9ponse du r\u00E9solveur indique qu\u0027il supporte la r\u00E9cursion et, si le client avait RD=1, le r\u00E9solveur a effectu\u00E9 la r\u00E9cursion pour fournir la r\u00E9ponse.",
              "Explanation": "AA est positionn\u00E9 par les serveurs autoritatifs. RA indique la capacit\u00E9 du r\u00E9solveur \u00E0 faire de la r\u00E9cursion. Le client voit la r\u00E9ponse finale du r\u00E9solveur, souvent avec RA=1 et sans AA si la r\u00E9ponse vient du cache r\u00E9cursif (AA peut \u00EAtre 0 si le r\u00E9solveur ne transmet pas ce flag)."
            }
          ]
        },
        {
          "Title": "Introduction \u00E0 DNSSEC : enjeux et concepts",
          "Summary": "Pourquoi DNSSEC existe, menaces qu\u0027il adresse, principes de signature, int\u00E9grit\u00E9 et authentification des r\u00E9ponses DNS.",
          "EstimatedMinutes": 75,
          "LearningObjectives": [
            "Comprendre pourquoi DNSSEC a \u00E9t\u00E9 con\u00E7u et quels probl\u00E8mes il cherche \u00E0 r\u00E9soudre",
            "Identifier les menaces sp\u00E9cifiques contre lesquelles DNSSEC prot\u00E8ge (ex. usurpation, empoisonnement de cache)",
            "Expliquer les principes cryptographiques de base utilis\u00E9s par DNSSEC : signatures, cl\u00E9s et algorithmes",
            "D\u00E9crire comment DNSSEC assure l\u0027int\u00E9grit\u00E9 et l\u0027authenticit\u00E9 des r\u00E9ponses DNS (RRSIG, DNSKEY, cha\u00EEne de confiance)",
            "Conna\u00EEtre les m\u00E9canismes de preuve d\u0027absence (NSEC / NSEC3) et leurs compromis",
            "Reconna\u00EEtre les limites de DNSSEC (pas de confidentialit\u00E9, complexit\u00E9 op\u00E9rationnelle) et les bonnes pratiques de d\u00E9ploiement"
          ],
          "Content": "Contexte\u00A0: r\u00F4le du DNS et vuln\u00E9rabilit\u00E9s historiques\r\nLe DNS traduit des noms lisibles (ex. example.com) en adresses IP. Con\u00E7u \u00E0 une \u00E9poque o\u00F9 la s\u00E9curit\u00E9 active n\u0027\u00E9tait pas prioritaire, il expose des donn\u00E9es critiques pour le routage et la s\u00E9curit\u00E9. Des attaques historiques (empoisonnement de cache, usurpation de r\u00E9ponses) ont montr\u00E9 que, sans garanties cryptographiques, un attaquant peut fournir de fausses informations DNS et rediriger le trafic vers des serveurs malveillants.\r\n\r\nPourquoi DNSSEC existe\r\nDNSSEC a \u00E9t\u00E9 cr\u00E9\u00E9 pour ajouter des garanties d\u0027authenticit\u00E9 et d\u0027int\u00E9grit\u00E9 aux r\u00E9ponses DNS sans modifier fondamentalement le protocole DNS. L\u0027objectif principal est d\u0027emp\u00EAcher la falsification des enregistrements DNS \u2014 assurer que la r\u00E9ponse re\u00E7ue provient bien du propri\u00E9taire l\u00E9gitime de la zone et que le contenu n\u0027a pas \u00E9t\u00E9 alt\u00E9r\u00E9 en transit.\r\n\r\nMenaces adress\u00E9es par DNSSEC\r\nDNSSEC cible principalement\u00A0: l\u0027empoisonnement de cache (cache poisoning), la falsification de r\u00E9ponses DNS (spoofing), et certains types d\u0027attaques de l\u0027homme du milieu (MITM) qui remplaceraient des r\u00E9ponses DNS. Il ne prot\u00E8ge pas la confidentialit\u00E9 des requ\u00EAtes ni l\u0027ex\u00E9cution de code c\u00F4t\u00E9 client. Il r\u00E9duit le risque de redirections malveillantes et d\u0027usurpation d\u0027identit\u00E9 au niveau r\u00E9solution DNS.\r\n\r\nPrincipes de base : signatures et cl\u00E9s\r\nDNSSEC repose sur des signatures num\u00E9riques attach\u00E9es aux ensembles d\u0027enregistrements (\u00AB resource record sets \u00BB, RRset). Les enregistrements RRSIG contiennent la signature d\u0027un RRset. Les cl\u00E9s publiques sont publi\u00E9es via des enregistrements DNSKEY. La validation consiste \u00E0 v\u00E9rifier la signature RRSIG avec la cl\u00E9 DNSKEY correspondante.\r\n\r\nCha\u00EEne de confiance (chain of trust) et ancre de confiance\r\nPour pouvoir faire confiance \u00E0 une cl\u00E9, DNSSEC construit une cha\u00EEne de confiance depuis une ancre de confiance pr\u00E9alablement approuv\u00E9e (ex. la cl\u00E9 de la zone racine). Chaque zone signe la cl\u00E9 publique de sa sous-zone via un enregistrement DS (Delegation Signer) publi\u00E9 dans la zone parent, formant ainsi une cha\u00EEne qui relie la zone racine \u00E0 la zone sign\u00E9e. Un validateur commence avec une ancre de confiance et remonte la cha\u00EEne en v\u00E9rifiant DS \u2192 DNSKEY \u2192 RRSIG.\r\n\r\nS\u00E9paration des r\u00F4les cl\u00E9s : ZSK et KSK, rollover\r\nDeux types de cl\u00E9s sont couramment utilis\u00E9s\u00A0: KSK (Key Signing Key) qui signe uniquement les enregistrements DNSKEY, et ZSK (Zone Signing Key) qui signe les RRset de la zone. Cette s\u00E9paration r\u00E9duit les risques lors des rollovers de cl\u00E9s. Le rollover (changement de cl\u00E9) est un processus critique qui doit pr\u00E9server la continuit\u00E9 de la cha\u00EEne de confiance (publication de la nouvelle cl\u00E9, signature appropri\u00E9e, mise \u00E0 jour du DS chez le parent).\r\n\r\nPreuve d\u0027absence : NSEC et NSEC3\r\nQuand une r\u00E9ponse affirme qu\u0027un nom ou un type n\u0027existe pas, DNSSEC doit aussi prouver cette absence. NSEC fournit des enregistrements liant deux noms existants pour prouver qu\u0027un nom donn\u00E9 est absent, mais divulgue la liste des noms. NSEC3 utilise une fonction de hachage pour limiter la divulgation des noms, au prix d\u0027une complexit\u00E9 et d\u0027un co\u00FBt de calcul plus \u00E9lev\u00E9.\r\n\r\nValidation et comportement des validateurs\r\nUn r\u00E9solveur qui valide DNSSEC (validator) v\u00E9rifie signatures et cha\u00EEne de confiance. Si la validation r\u00E9ussit, la r\u00E9ponse est marqu\u00E9e s\u00E9curis\u00E9e. Si la validation \u00E9choue (signature invalide, cha\u00EEne rompue), la r\u00E9ponse est rejet\u00E9e ou consid\u00E9r\u00E9e comme bogus. Il existe aussi des r\u00E9ponses ind\u00E9termin\u00E9es si l\u0027information pour valider manque (ex. absence d\u0027ancre).\r\n\r\nLimitations et points d\u0027attention\r\nDNSSEC n\u0027apporte pas de confidentialit\u00E9 (les requ\u00EAtes et r\u00E9ponses restent en clair) ni protection contre des attaques au niveau applicatif. Le d\u00E9ploiement augmente la taille des r\u00E9ponses DNS (RRSIG, DNSKEY\u2026), potentiellement provoquant de la fragmentation UDP et des besoins en TCP. La gestion des cl\u00E9s (rollover) et la coordination avec la zone parent (DS) sont des aspects op\u00E9rationnels critiques.\r\n\r\nOutils et bonnes pratiques (br\u00E8ve)\r\nOutils utiles\u00A0: dig \u002Bdnssec, delv, unbound-control, OpenDNSSEC, BIND/Unbound/Knot pour signer et valider; services de monitoring de validation; proc\u00E9dures de rollover document\u00E9es; sauvegarde des cl\u00E9s et plan de restauration; tests en environnement contr\u00F4l\u00E9 avant publication. Toujours publier le DS au niveau parent avec prudence et pr\u00E9parer les fen\u00EAtres de TTL compatibles lors des rollovers.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Explique en une phrase pourquoi l\u0027empoisonnement de cache DNS est dangereux et comment DNSSEC att\u00E9nue ce risque.",
              "Answer": "L\u0027empoisonnement de cache permet \u00E0 un attaquant d\u0027ins\u00E9rer de fausses r\u00E9ponses DNS et de rediriger les utilisateurs; DNSSEC att\u00E9nue ce risque en exigeant des signatures num\u00E9riques v\u00E9rifiables qui garantissent l\u0027authenticit\u00E9 et l\u0027int\u00E9grit\u00E9 des r\u00E9ponses.",
              "Explanation": "Une r\u00E9ponse falsifi\u00E9e sans signature valide \u00E9chouera la v\u00E9rification du validateur DNSSEC. Ainsi, m\u00EAme si un attaquant injecte une entr\u00E9e dans un cache, un r\u00E9solveur valide la rejettera si la signature est absente ou invalide."
            },
            {
              "Instruction": "On trouve un enregistrement RRSIG attach\u00E9 \u00E0 un RRset. Que contient typiquement un RRSIG et quel r\u00F4le joue-t-il dans la validation ?",
              "Answer": "Un RRSIG contient la signature num\u00E9rique du RRset, l\u0027algorithme utilis\u00E9, l\u0027identifiant de la cl\u00E9 signante, les dates de validit\u00E9 et d\u0027expiration, et d\u0027autres m\u00E9tadonn\u00E9es; il permet au validateur de v\u00E9rifier que le RRset n\u0027a pas \u00E9t\u00E9 alt\u00E9r\u00E9 en utilisant la cl\u00E9 publique correspondante (DNSKEY).",
              "Explanation": "Le validateur localise la DNSKEY correspondant \u00E0 l\u0027identifiant pr\u00E9sent dans le RRSIG, v\u00E9rifie que la cl\u00E9 est de confiance via la cha\u00EEne DS/parent ou ancre, puis d\u00E9chiffre la signature pour confirmer que le contenu du RRset est intact et authentique."
            },
            {
              "Instruction": "D\u00E9crivez bri\u00E8vement la cha\u00EEne de confiance depuis la zone racine jusqu\u0027\u00E0 example.com. Quels enregistrements sont impliqu\u00E9s ?",
              "Answer": "La cha\u00EEne commence par l\u0027ancre de confiance (cl\u00E9 publique de la racine), la racine publie un enregistrement DS pour .com qui lie la cl\u00E9 KSK de .com; .com publie un DS pour example.com; example.com publie ses DNSKEY et signe ses RRsets (RRSIG). Le validateur suit DS \u2192 DNSKEY \u2192 RRSIG pour chaque niveau.",
              "Explanation": "Chaque d\u00E9l\u00E9gation utilise DS dans la zone parent pour prouver l\u0027authenticit\u00E9 de la cl\u00E9 enfant. Le validateur v\u00E9rifie successivement chaque niveau: racine \u2192 .com \u2192 example.com. Si un lien DS manque, la cha\u00EEne de confiance est interrompue."
            },
            {
              "Instruction": "Quelles sont les diff\u00E9rences principales entre NSEC et NSEC3 ? Donnez un cas d\u0027usage o\u00F9 NSEC3 est pr\u00E9f\u00E9r\u00E9.",
              "Answer": "NSEC r\u00E9v\u00E8le explicitement les noms existants en formant une cha\u00EEne, ce qui peut exposer la liste des sous-domaines; NSEC3 utilise des hachages pour r\u00E9duire la divulgation des noms mais augmente la complexit\u00E9. NSEC3 est pr\u00E9f\u00E9r\u00E9 pour les zones o\u00F9 l\u0027on veut limiter l\u0027\u00E9num\u00E9ration des sous-domaines par tiers (prot\u00E9ger la confidentialit\u00E9 des noms).",
              "Explanation": "NSEC permet une \u00E9num\u00E9ration facile des enregistrements d\u0027une zone (zone walking). NSEC3 att\u00E9nue ce probl\u00E8me en stockant des versions hach\u00E9es des noms, rendant l\u0027\u00E9num\u00E9ration directe plus co\u00FBteuse, ce qui est utile pour des zones sensibles ou larges."
            }
          ]
        },
        {
          "Title": "Enregistrements DNSSEC : DNSKEY, RRSIG et DS",
          "Summary": "R\u00F4le et format des enregistrements DNSKEY, signatures RRSIG et chaines de confiance via les enregistrements DS.",
          "EstimatedMinutes": 75,
          "LearningObjectives": [
            "Comprendre le r\u00F4le et la place des enregistrements DNSKEY dans DNSSEC",
            "Savoir interpr\u00E9ter le format et les champs d\u0027un enregistrement DNSKEY (flags, protocol, algorithm, cl\u00E9 publique)",
            "Comprendre ce qu\u0027est une signature RRSIG, ses champs et comment elle prot\u00E8ge un RRset",
            "Savoir expliquer la cha\u00EEne de confiance entre zones via l\u0027enregistrement DS",
            "Savoir cr\u00E9er et v\u00E9rifier la correspondance entre un enregistrement DNSKEY et un enregistrement DS (empreinte)",
            "Conna\u00EEtre les principes de base du rollover de cl\u00E9s (ZSK/KSK) et des bonnes pratiques op\u00E9rationnelles",
            "Savoir utiliser des outils et suivre les \u00E9tapes de validation d\u0027une signature DNSSEC"
          ],
          "Content": "Introduction : pourquoi DNSSEC et r\u00F4le des enregistrements\r\nDNSSEC ajoute l\u0027int\u00E9grit\u00E9 et l\u0027authenticit\u00E9 aux r\u00E9ponses DNS en signant les ensembles d\u0027enregistrements (RRset). Trois types d\u0027enregistrements sont centraux pour la mise en \u0153uvre et la cha\u00EEne de confiance : DNSKEY (les cl\u00E9s publiques de la zone), RRSIG (les signatures num\u00E9riques couvrant les RRset) et DS (les empreintes que le parent publie pour faire confiance \u00E0 la cl\u00E9 de la zone enfant).\r\n\r\nDNSKEY : r\u00F4le et principes\r\nLe DNSKEY contient la cl\u00E9 publique d\u0027une zone utilis\u00E9e pour v\u00E9rifier les signatures RRSIG. Une zone peut publier plusieurs DNSKEYs selon les usages (ex. s\u00E9paration KSK/KZK ou ZSK). Le DNSKEY est publi\u00E9 dans la zone elle-m\u00EAme et est au c\u0153ur de l\u0027\u00E9tablissement de la fiert\u00E9 d\u0027une zone. Sans DNSKEY valide, on ne peut pas v\u00E9rifier les RRSIG produits par la zone.\r\n\r\nFormat d\u0027un enregistrement DNSKEY\r\nChamps importants d\u0027un DNSKEY :\n- flags (16 bits) : indique le r\u00F4le de la cl\u00E9 (par ex. 256 = ZSK, 257 = KSK si le bit de KSK est d\u00E9fini). Le bit 0x0001 (SEP) signale la Key Signing Key (KSK) si pr\u00E9sent.\n- protocol (8 bits) : fix\u00E9 \u00E0 3 pour DNSSEC selon la RFC.\n- algorithm (8 bits) : identifie l\u0027algorithme de chiffrement utilis\u00E9 (ex. RSA/SHA-256 = 8, ECDSA = 13, Ed25519 = 15, etc.).\n- public key (base64) : la cl\u00E9 publique encod\u00E9e.\nExemple succinct : \u0022example.com. IN DNSKEY 257 3 8 AwEAA...\u0022\r\n\r\nKSK vs ZSK : r\u00F4les et bonnes pratiques\r\nZSK (Zone Signing Key) : utilis\u00E9e pour signer les RRset de la zone (produit les RRSIG sur les records). ZSKs sont g\u00E9n\u00E9ralement plus courtes et renouvel\u00E9es plus fr\u00E9quemment.\nKSK (Key Signing Key) : signe uniquement le RRset contenant les DNSKEY (c\u2019est\u2011\u00E0\u2011dire signe les cl\u00E9s de la zone). La KSK est l\u2019objet du lien avec le parent via l\u2019enregistrement DS. La KSK est chang\u00E9e moins fr\u00E9quemment et est souvent g\u00E9r\u00E9e avec plus de pr\u00E9cautions (HSM, processus manuel).\r\n\r\nRRSIG : r\u00F4le et format\r\nRRSIG contient la signature couvrant un RRset complet. Un RRset = tous les enregistrements d\u0027un m\u00EAme nom, type et classe. Champs importants de RRSIG :\n- type-covered : type d\u0027enregistrement sign\u00E9 (A, AAAA, MX, DNSKEY...)\n- algorithm : algorithme utilis\u00E9\n- labels : nombre d\u0027\u00E9tiquettes (pour \u00E9viter certaines attaques par substitution)\n- original TTL : TTL original utilis\u00E9 lors de la signature\n- signature expiration / inception : p\u00E9riode de validit\u00E9 de la signature\n- key tag : identifiant court de la cl\u00E9 DNSKEY utilis\u00E9e\n- signer name : nom de la zone qui a produit la signature\n- signature : la signature elle\u2011m\u00EAme (base64)\nPour valider un RRset, le r\u00E9solveur r\u00E9cup\u00E8re le DNSKEY correspondant (par key tag et algorithme), reconstitue la version canonique du RRset et v\u00E9rifie la signature RRSIG.\r\n\r\nDS : cha\u00EEnon entre parent et enfant\r\nL\u0027enregistrement DS (Delegation Signer) est plac\u00E9 dans la zone parente pour indiquer quel DNSKEY de la zone enfant doit \u00EAtre approuv\u00E9. Le DS contient :\n- key tag : identifiant court de la DNSKEY enfant\n- algorithm : m\u00EAme algorithme que la DNSKEY\n- digest type : algorithme de hachage utilis\u00E9 pour l\u2019empreinte (ex. SHA-1, SHA-256, SHA-384)\n- digest : l\u0027empreinte (hash) de la cl\u00E9 publique (g\u00E9n\u00E9ralement du champ public key ou de la repr\u00E9sentation wire-format de la DNSKEY)\nLorsqu\u0027un r\u00E9solveur valide la d\u00E9l\u00E9gation, il r\u00E9cup\u00E8re le DNSKEY de la zone enfant, calcule le digest selon le digest type et compare au DS publi\u00E9 par le parent. Si \u00E7a correspond, la confiance se propage (cha\u00EEne de confiance intacte).\r\n\r\nComment est calcul\u00E9 le digest (DS) depuis un DNSKEY\r\nLa cr\u00E9ation d\u0027un DS suit ces \u00E9tapes g\u00E9n\u00E9rales :\n1) Convertir l\u0027enregistrement DNSKEY dans son format \u0027wire\u0027 canonique (ordre et encodage d\u00E9finis par RFC). 2) Calculer le hach\u00E9 avec l\u0027algorithme choisi (ex. SHA-256). 3) Encoder le r\u00E9sultat en hexad\u00E9cimal pour le placer dans le champ digest du DS. On peut aussi g\u00E9n\u00E9rer un key tag \u00E0 partir du DNSKEY (m\u00E9thode d\u00E9crite dans RFC 4034) qui identifie la cl\u00E9 sans stocker la cl\u00E9 enti\u00E8re.\r\n\r\nValidation d\u0027une r\u00E9ponse : \u00E9tapes pratiques\r\n\u00C9tapes pour valider un RRset sign\u00E9 :\n1) Le r\u00E9solveur obtient l\u0027ensemble d\u0027enregistrements (RRset) et son RRSIG.\n2) Il r\u00E9cup\u00E8re la ou les DNSKEYs publi\u00E9es par la zone et identifie celle(s) correspondant au key tag et \u00E0 l\u0027algorithme.\n3) Reconstitue la forme canonique du RRset (ordres, normalisations) et v\u00E9rifie la signature RRSIG \u00E0 l\u0027aide de la DNSKEY.\n4) Pour \u00E9tablir la confiance globale, il v\u00E9rifie la cha\u00EEne parent-\u003Eenfant : le parent doit poss\u00E9der un DS qui correspond \u00E0 une DNSKEY de l\u0027enfant. Cette v\u00E9rification se propage jusqu\u0027\u00E0 une cl\u00E9 racine de confiance (root trust anchor).\nSi toutes les v\u00E9rifications r\u00E9ussissent, l\u0027enregistrement est \u0022secure\u0022 ; sinon, il est consid\u00E9r\u00E9 comme \u0022bogus\u0022 ou inconnu selon le r\u00E9sultat.\r\n\r\nRollover de cl\u00E9s (KSK/ZSK) et pi\u00E8ges courants\r\nRollover ZSK : proc\u00E9d\u00E9 courant, consiste \u00E0 g\u00E9n\u00E9rer une nouvelle ZSK, publier le DNSKEY, signer avec la nouvelle ZSK puis retirer l\u0027ancienne apr\u00E8s p\u00E9riode de validation.\nRollover KSK : plus sensible car affecte la liaison parent/child. M\u00E9thode recommand\u00E9e : publication de la nouvelle KSK dans la zone enfant, publication du DS correspondant au parent (si policy support\u00E9e) puis retrait de l\u0027ancienne apr\u00E8s propagation. Les erreurs courantes : oublier de publier le DS au parent, retirer la cl\u00E9 active trop t\u00F4t, mauvaise gestion des dates d\u0027expiration des signatures entra\u00EEnant des \u00E9checs de validation.\r\n\r\nOutils et v\u00E9rification pratique\r\nOutils courants :\n- dig \u002Bdnssec pour r\u00E9cup\u00E9rer DNSKEY/RRSIG/DS\n- drill/ldns/dnspython/dnssec-tools pour cr\u00E9ation et v\u00E9rification des enregistrements\n- outils de gestion de clefs des registrars pour publier le DS\nProc\u00E9dure rapide avec dig : r\u00E9cup\u00E9rer DNSKEY et RRSIG de la zone, puis v\u00E9rifier localement avec ldns-verify ou avec un r\u00E9solveur qui fait la validation (unbound, BIND avec validation activ\u00E9e).\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 : Interpr\u00E9ter un enregistrement DNSKEY\nVoici un enregistrement : \u0022example.com. IN DNSKEY 257 3 8 AwEAAc...\u0022. Que signifient les trois premiers chiffres (257, 3, 8) ?",
              "Answer": "257 = flags (indique que c\u0027est une KSK si le bit SEP est pr\u00E9sent), 3 = protocol (valeur fixe pour DNSSEC), 8 = algorithm (RSA/SHA-256).",
              "Explanation": "Le champ flags est un entier 16 bits : 257 correspond typiquement \u00E0 l\u0027indication que la cl\u00E9 est une KSK (bit 0x0100 = SEP). Le champ protocol doit \u00EAtre 3 par sp\u00E9cification RFC pour DNSSEC et l\u0027algorithme 8 correspond \u00E0 RSA avec SHA-256 selon les num\u00E9ros d\u0027algorithmes IANA."
            },
            {
              "Instruction": "Exercice 2 : Que couvre une RRSIG ?\nSi vous voyez une RRSIG avec type-covered = A, \u00E0 quoi s\u0027applique cette signature et comment est-elle utilis\u00E9e ?",
              "Answer": "Elle couvre l\u0027ensemble (RRset) des enregistrements de type A pour le nom indiqu\u00E9 ; la signature permet de v\u00E9rifier l\u0027int\u00E9grit\u00E9 et l\u0027authenticit\u00E9 de tous les enregistrements A du RRset en question.",
              "Explanation": "RRSIG signe un RRset complet (m\u00EAme nom, m\u00EAme type). Pour valider, on prend tous les enregistrements A du nom, on reconstitue leur repr\u00E9sentation canonique, puis on v\u00E9rifie la signature \u00E0 l\u0027aide de la DNSKEY correspondante. Si la signature \u00E9choue, le RRset est consid\u00E9r\u00E9 comme non valide."
            },
            {
              "Instruction": "Exercice 3 : Correspondance DS/DNSKEY\nOn vous donne :\n- Un DNSKEY (K) avec key tag 12345, algorithm 8.\n- Un DS publi\u00E9 par le parent avec key tag 12345, algorithm 8, digest type SHA-256 et digest D.\nD\u00E9crivez la proc\u00E9dure pour d\u00E9cider si le DS correspond r\u00E9ellement au DNSKEY K.",
              "Answer": "Calculer le digest SHA-256 sur la repr\u00E9sentation wire canonique du DNSKEY K, puis comparer le r\u00E9sultat hexad\u00E9cimal \u00E0 D. Si identiques et si le key tag et l\u0027algorithme concordent, alors le DS correspond \u00E0 K.",
              "Explanation": "Le key tag et l\u0027algorithme sont des indicateurs rapides mais la correspondance r\u00E9elle s\u0027effectue en recalculant le digest (selon le digest type) de la DNSKEY. La conversion en wire-format et l\u0027utilisation du bon algorithme de hachage (ici SHA-256) sont indispensables pour une comparaison correcte."
            },
            {
              "Instruction": "Exercice 4 : Sc\u00E9nario d\u0027erreur de rollover\nUne organisation a remplac\u00E9 sa KSK mais n\u0027a pas publi\u00E9 le DS correspondant chez le registrar (parent). Quel sera l\u0027effet sur la validation DNSSEC par les r\u00E9solveurs r\u00E9cursifs qui valident ?",
              "Answer": "Les r\u00E9solveurs valides verront la cha\u00EEne de confiance bris\u00E9e : m\u00EAme si la zone enfant publie la nouvelle KSK et signe ses DNSKEY, le parent n\u0027ayant pas de DS correspondant la consid\u00E9rera comme non approuv\u00E9e. Les r\u00E9ponses seront marqu\u00E9es comme non s\u00E9curis\u00E9es ou \u0027bogus\u0027 selon les cas, provoquant des \u00E9checs de r\u00E9solution pour les validateurs stricts.",
              "Explanation": "Le parent d\u00E9tient la seule entr\u00E9e assurant la d\u00E9l\u00E9gation de confiance (DS). Sans DS correspondant, la nouvelle cl\u00E9 enfant n\u0027est pas rattach\u00E9e au parent ; la confiance ne peut donc pas se propager depuis la racine, ce qui fait \u00E9chouer la validation DNSSEC."
            },
            {
              "Instruction": "Exercice 5 : V\u00E9rification rapide avec outils\nQuelle commande \u0027dig\u0027 (ou \u00E9quivalent) utiliser pour r\u00E9cup\u00E9rer les enregistrements DNSKEY et RRSIG d\u0027une zone example.com ? Quel(s) r\u00E9sultat(s) attendez-vous pour consid\u00E9rer que la zone est sign\u00E9e ?",
              "Answer": "Commande : dig \u002Bdnssec example.com DNSKEY et dig \u002Bdnssec example.com RRSIG (ou dig \u002Bdnssec example.com any). Si la zone est sign\u00E9e, on obtient au moins un enregistrement DNSKEY et des RRSIG correspondant aux RRset (on verra des RRSIG pour diff\u00E9rents types comme SOA, NS, A...).",
              "Explanation": "L\u0027option \u002Bdnssec demande au serveur d\u0027inclure les enregistrements RRSIG et les marqueurs DO. La pr\u00E9sence de DNSKEYs dans la zone et de RRSIG qui couvrent les RRset est l\u0027indication que DNSSEC est activ\u00E9 et utilis\u00E9 pour la zone."
            }
          ]
        },
        {
          "Title": "Preuves d\u0027inexistence : NSEC et NSEC3",
          "Summary": "Principes de NSEC et NSEC3 pour prouver l\u0027absence d\u0027un nom ou d\u0027un type d\u0027enregistrement et diff\u00E9rences pratiques.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre pourquoi DNSSEC doit fournir une preuve cryptographique d\u0027inexistence (NXDOMAIN, NODATA).",
            "Expliquer le fonctionnement de NSEC : enregistrement \u00AB next \u00BB et bitmap de types pour prouver l\u0027absence d\u0027un nom ou d\u0027un type.",
            "Expliquer le fonctionnement de NSEC3 : hachage des noms, cha\u00EEne NSEC3 et param\u00E8tres (hash, iterations, salt).",
            "Savoir comment NSEC et NSEC3 prouvent l\u0027absence d\u0027un nom (NXDOMAIN) et l\u0027absence d\u0027un type sur un nom existant (NODATA).",
            "Conna\u00EEtre les diff\u00E9rences pratiques entre NSEC et NSEC3 (r\u00E9sistance au zone walking, taille/r\u00E9solution, co\u00FBt, opt-out).",
            "Identifier les implications op\u00E9rationnelles et de s\u00E9curit\u00E9 (performances, cache, compatibilit\u00E9, opt-out)."
          ],
          "Content": "Contexte : pourquoi prouver l\u0027inexistence\r\nDans DNSSEC, une r\u00E9ponse n\u00E9gative (nom inexistant ou type d\u0027enregistrement absent) doit \u00EAtre authentifi\u00E9e afin d\u0027emp\u00EAcher un attaquant de fournir une fausse absence. Les m\u00E9canismes NSEC et NSEC3 fournissent des preuves sign\u00E9es qui lient la non-existence \u00E0 la zone sign\u00E9e : le r\u00E9solveur peut v\u00E9rifier que la zone autoritaire a bien sign\u00E9 l\u0027information montrant qu\u0027une entr\u00E9e n\u0027existe pas.\r\n\r\nNSEC : principe et structure\r\nNSEC expose, pour un owner name X, le \u00AB next name \u00BB Y (propri\u00E9t\u00E9 cyclique de la liste tri\u00E9e des noms dans la zone) et une bitmap indiquant quels types d\u0027enregistrements existent en X. Sign\u00E9 par la cl\u00E9 de la zone, un enregistrement NSEC(X -\u003E Y, bitmap) prouve que tous les noms situ\u00E9s strictement entre X (inclus) et Y (exclus) n\u0027existent pas dans la zone, et que pour X les types non list\u00E9s dans la bitmap n\u0027existent pas (NODATA).\r\n\r\nPreuve d\u0027absence avec NSEC : NXDOMAIN et NODATA\r\nPour NXDOMAIN (nom absent) : le serveur renvoie une NSEC dont l\u0027intervalle couvre le nom interrog\u00E9 ; en v\u00E9rifiant la signature et que le nom recherch\u00E9 est dans l\u0027intervalle [owner, next), le r\u00E9solveur conclut que le nom n\u0027existe pas. Pour NODATA (nom existe mais pas le type demand\u00E9) : si la NSEC est \u00E9mise pour le nom exact et que la bitmap ne contient pas le type demand\u00E9, la r\u00E9ponse prouve que la zone ne poss\u00E8de pas ce RRset pour ce nom.\r\n\r\nNSEC3 : hachage des noms et cha\u00EEne NSEC3\r\nNSEC3 est analogue \u00E0 NSEC mais op\u00E8re sur des noms hach\u00E9s (H = hash(name, iterations, salt)). La zone publie NSEC3 records qui forment une cha\u00EEne sur l\u0027espace des valeurs de H tri\u00E9es. Chaque NSEC3 signe un intervalle de hach\u00E9s (ownerHash -\u003E nextHash). Pour prouver l\u0027absence d\u0027un nom, on calcule son hash selon les param\u00E8tres NSEC3 et on montre qu\u0027il se situe dans un intervalle sign\u00E9 par NSEC3. NSEC3 emp\u00EAche lister facilement les noms en clair (zone walking), car les owner names sont remplac\u00E9s par des valeurs hach\u00E9es.\r\n\r\nPreuve d\u0027absence avec NSEC3 et param\u00E8tre opt-out\r\nNSEC3 fonctionne pour NXDOMAIN et NODATA en utilisant les hach\u00E9s. Le param\u00E8tre opt-out permet d\u0027exclure certaines d\u00E9l\u00E9gations (g\u00E9n\u00E9ralement d\u00E9l\u00E9gations non sign\u00E9es) de la cha\u00EEne NSEC3 : dans ce cas, il peut ne pas y avoir de NSEC3 correspondant au hach\u00E9 d\u0027une d\u00E9l\u00E9gation non sign\u00E9e, et la preuve d\u0027absence d\u0027une d\u00E9l\u00E9gation ou d\u0027un nom dans ces zones devient moins solide. Opt-out r\u00E9duit la surface de zone walking au prix d\u0027une couverture cryptographique moindre pour des cas impliquant des d\u00E9l\u00E9gations non sign\u00E9es.\r\n\r\nDiff\u00E9rences pratiques NSEC vs NSEC3\r\nR\u00E9sistance au zone walking : NSEC permet de d\u00E9couvrir tous les noms (facile \u00E0 it\u00E9rer), NSEC3 complique la reconnaissance des noms en clair mais n\u0027emp\u00EAche pas compl\u00E8tement l\u0027attaque si l\u0027attaquant peut brute-forcer ou pr\u00E9-calculer des hachages. Taille et performances : NSEC produit souvent des r\u00E9ponses plus petites et moins co\u00FBteuses \u00E0 g\u00E9n\u00E9rer. NSEC3 impose calculs de hash (surtout avec iterations) et peut augmenter la taille des r\u00E9ponses. Opt-out : disponible en NSEC3 seulement et utile pour grandes zones o\u00F9 on veut \u00E9viter d\u0027inclure de nombreuses d\u00E9l\u00E9gations non sign\u00E9es. Compatibilit\u00E9 et op\u00E9ration : NSEC est simple \u00E0 administrer ; NSEC3 n\u00E9cessite choix de salt/iterations et gestion plus pr\u00E9cise des signatures.\r\n\r\nConsid\u00E9rations op\u00E9rationnelles et s\u00E9curit\u00E9\r\nChoix entre NSEC et NSEC3 d\u00E9pend des priorit\u00E9s : transparence et performance (NSEC) vs protection contre la d\u00E9couverte triviale des noms (NSEC3). NSEC3 avec iterations/ salt augmente la charge CPU sur le serveur et sur les validateurs, et peut accro\u00EEtre le taux de fragmentation des r\u00E9ponses UDP (RRSIZE). Opt-out peut introduire risques pour des d\u00E9l\u00E9gations non sign\u00E9es. Il faut aussi prendre en compte la mise en cache c\u00F4t\u00E9 r\u00E9solveur : des preuves plus volumineuses affectent la bande passante et la latence.\r\n\r\nInteractions sp\u00E9ciales : wildcard et d\u00E9l\u00E9gation\r\nLes preuves d\u0027inexistence doivent aussi traiter les jokers (wildcards) et les d\u00E9l\u00E9gations. Un NSEC/NSEC3 peut prouver qu\u0027une r\u00E9ponse wildcard ne s\u0027applique pas (en montrant l\u0027intervalle), et pour les d\u00E9l\u00E9gations la pr\u00E9sence d\u0027un enregistrement NS et \u00E9ventuellement DS change les r\u00E8gles de validation. Avec opt-out, des d\u00E9l\u00E9gations non sign\u00E9es peuvent ne pas appara\u00EEtre dans la cha\u00EEne NSEC3, ce qui complexifie la preuve.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 Interpr\u00E9ter un NSEC : on re\u00E7oit l\u0027enregistrement suivant sign\u00E9 par la zone example. : owner=b.example. IN NSEC f.example. bitmap={A NS SOA RRSIG NSEC}. Que prouve cet enregistrement pour les requ\u00EAtes (a) c.example A et (b) b.example MX ?",
              "Answer": "(a) La NSEC prouve que c.example n\u0027existe pas (NXDOMAIN). (b) La NSEC prouve que b.example existe mais n\u0027a pas d\u0027enregistrement MX (NODATA).",
              "Explanation": "La NSEC de owner b.example a next f.example ; l\u0027intervalle [b.example, f.example) couvre c.example, donc c.example n\u0027est pas pr\u00E9sent dans la zone (NXDOMAIN). Pour b.example m\u00EAme, la bitmap liste les types pr\u00E9sents en b (A, NS, SOA, RRSIG, NSEC). Comme MX n\u0027est pas dans la bitmap, la NSEC montre que le nom existe mais pas l\u0027enregistrement MX (preuve de NODATA)."
            },
            {
              "Instruction": "Exercice 2 \u2014 NSEC3 et opt-out : une zone est sign\u00E9e en NSEC3 avec opt-out activ\u00E9. On interroge un nom qui devrait \u00EAtre une d\u00E9l\u00E9gation non sign\u00E9e (pas de DS). Peut-on toujours obtenir une preuve cryptographique compl\u00E8te d\u0027absence d\u0027un enregistrement ou d\u0027une d\u00E9l\u00E9gation pour ce nom ?",
              "Answer": "Non, pas forc\u00E9ment. Avec opt-out, la zone peut ne pas inclure de NSEC3 pour la d\u00E9l\u00E9gation non sign\u00E9e, donc le r\u00E9solveur ne disposera pas d\u0027une preuve NSEC3 compl\u00E8te couvrant le hach\u00E9 de cette d\u00E9l\u00E9gation.",
              "Explanation": "L\u0027opt-out autorise la zone \u00E0 omettre les owner-hashes correspondant \u00E0 d\u00E9l\u00E9gations non sign\u00E9es dans la cha\u00EEne NSEC3. Par cons\u00E9quent, une requ\u00EAte relative \u00E0 ces noms peut aboutir \u00E0 une r\u00E9ponse n\u00E9gative sans qu\u0027il y ait un NSEC3 sp\u00E9cifique prouvant l\u0027absence, ou la preuve fournie couvrira un intervalle large qui n\u0027identifie pas clairement la d\u00E9l\u00E9gation, r\u00E9duisant la force de la preuve cryptographique pour ces cas."
            },
            {
              "Instruction": "Exercice 3 \u2014 Choix pratique : vous g\u00E9rez une grosse zone publique. Priorit\u00E9s : emp\u00EAcher la d\u00E9couverte automatis\u00E9e des noms (zone walking) mais garder une latence faible et charge serveur raisonnable. Quelle option entre NSEC et NSEC3 recommanderiez-vous et pourquoi ?",
              "Answer": "Recommander NSEC3 (avec salt et un nombre mod\u00E9r\u00E9 d\u0027iterations), en gardant \u00E0 l\u0027esprit le compromis performances/charge et l\u0027impact du param\u00E8tre opt-out si utilis\u00E9.",
              "Explanation": "NSEC3 emp\u00EAche la d\u00E9couverte triviale des noms en rempla\u00E7ant les owner names par des hach\u00E9s. Cela r\u00E9pond \u00E0 l\u0027objectif de limiter le zone walking. Toutefois, NSEC3 co\u00FBte plus en CPU (hashs) et peut augmenter la taille des r\u00E9ponses ; il faut donc choisir un nombre d\u0027iterations raisonnable et surveiller la charge. Si la priorit\u00E9 absolue \u00E9tait la latence minimale et simplicity d\u0027op\u00E9ration, NSEC serait pr\u00E9f\u00E9rable, mais pour emp\u00EAcher le crawling public des noms, NSEC3 est adapt\u00E9."
            }
          ]
        },
        {
          "Title": "Gestion de cl\u00E9s et proc\u00E9dures de rollover",
          "Summary": "Diff\u00E9rence KSK/ZSK, strat\u00E9gies de g\u00E9n\u00E9ration, stockage, rotation des cl\u00E9s et proc\u00E9dure de rollover s\u00E9curis\u00E9e.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Comprendre la diff\u00E9rence fonctionnelle entre KSK et ZSK dans une zone DNSSEC",
            "Conna\u00EEtre les strat\u00E9gies et crit\u00E8res pour la g\u00E9n\u00E9ration et la taille des cl\u00E9s DNSSEC",
            "Savoir prot\u00E9ger et stocker les cl\u00E9s (HSM, stockage hors-ligne, contr\u00F4le d\u0027acc\u00E8s)",
            "\u00C9tablir des politiques de rotation (fr\u00E9quences, \u00E9v\u00E9nements d\u00E9clencheurs, automatisation)",
            "Appliquer une proc\u00E9dure de rollover s\u00E9curis\u00E9e pour ZSK et KSK, y compris coordination avec le parent",
            "G\u00E9rer les sc\u00E9narios d\u0027urgence (compromission, suppression d\u0027urgence) et v\u00E9rifier l\u0027int\u00E9grit\u00E9 apr\u00E8s rollover"
          ],
          "Content": "Vue d\u0027ensemble : r\u00F4le des cl\u00E9s dans DNSSEC\r\nDNSSEC assure l\u0027int\u00E9grit\u00E9 et l\u0027authenticit\u00E9 des enregistrements DNS \u00E0 l\u0027aide de signatures num\u00E9riques. Deux types de cl\u00E9s sont utilis\u00E9s dans une zone : la Key Signing Key (KSK) signe les enregistrements DNSKEY de la zone, et la Zone Signing Key (ZSK) signe tous les enregistrements de la zone. La s\u00E9paration des r\u00F4les permet d\u0027optimiser s\u00E9curit\u00E9 et efficacit\u00E9 op\u00E9rationnelle.\r\n\r\nDiff\u00E9rence KSK / ZSK\r\nKSK : \u2022 R\u00F4le : signe uniquement l\u0027ensemble des enregistrements DNSKEY (c\u0027est la \u00AB cl\u00E9 de cl\u00E9 \u00BB). \u2022 Caract\u00E9ristiques : g\u00E9n\u00E9ralement plus s\u00FBre (stockage plus restreint), chang\u00E9e moins fr\u00E9quemment. \u2022 Impact : changement du KSK n\u00E9cessite souvent coordination avec le parent (mise \u00E0 jour du DS). ZSK : \u2022 R\u00F4le : signe les enregistrements de la zone (RRsets). \u2022 Caract\u00E9ristiques : rotation plus fr\u00E9quente pour limiter exposition et faciliter la cryptanalyse, petites tailles permises pour performance. \u2022 Impact : la rotation se fait en zone sans intervention du parent, sauf si la politique de DS implique autre chose.\r\n\r\nStrat\u00E9gies de g\u00E9n\u00E9ration de cl\u00E9s\r\nChoix d\u0027algorithmes et tailles : s\u00E9lectionner des algorithmes modernes et support\u00E9s par les r\u00E9solveurs cibles ; pr\u00E9f\u00E9rer ECC (p. ex. ECDSA) si support et contraintes de performance/latence, RSA pour compatibilit\u00E9 plus large avec tailles adapt\u00E9es. G\u00E9n\u00E9ration : effectuer la g\u00E9n\u00E9ration dans un environnement de confiance (id\u00E9alement HSM ou machine d\u00E9di\u00E9e et isol\u00E9e). Enregistrer m\u00E9tadonn\u00E9es : date de g\u00E9n\u00E9ration, usage (KSK/ZSK), ID de cl\u00E9 (key tag), algorithme, op\u00E9rateur responsable, empreinte publique. Fixer politiques (lifetime) bas\u00E9es sur risque, performance, et contraintes op\u00E9rationnelles (ex. ZSK tous les 1\u20133 mois, KSK tous les 1\u20133 ans, ajuster selon menaces et capacit\u00E9).\r\n\r\nStockage et protection des cl\u00E9s\r\nNiveaux de protection : \u2022 HSM ou module s\u00E9curis\u00E9 pour les KSK et id\u00E9alement pour les ZSK lorsqu\u0027il y a forte exigence de s\u00E9curit\u00E9. \u2022 Stockage hors-ligne pour la KSK primaire (cl\u00E9 de sauvegarde) avec proc\u00E9dures d\u0027acc\u00E8s strictes. Contr\u00F4le d\u0027acc\u00E8s : s\u00E9paration des fonctions, listes d\u0027acc\u00E8s, utilisation d\u0027authentification forte et de journaux d\u0027audit. Sauvegardes : chiffr\u00E9es, stock\u00E9es s\u00E9par\u00E9ment, test\u00E9es r\u00E9guli\u00E8rement pour restauration. Politique de r\u00E9vocation/compromission : conserver proc\u00E9dures et playbooks pour r\u00E9voquer et remplacer rapidement une cl\u00E9 compromise. Gestion des secrets : rotation des mots de passe, chiffrement des fichiers de cl\u00E9 au repos, suppression s\u00E9curis\u00E9e des cl\u00E9s retir\u00E9es.\r\n\r\nRotation des cl\u00E9s : strat\u00E9gies et calendrier\r\nApproches : \u2022 Rotation p\u00E9riodique planifi\u00E9e : cadence d\u00E9finie (ZSK fr\u00E9quemment, KSK rarement). \u2022 Rotation bas\u00E9e sur \u00E9v\u00E9nements : compromission, changement d\u0027algorithme, vuln\u00E9rabilit\u00E9 d\u00E9tect\u00E9e. \u2022 Hybride : p\u00E9riodique avec possibilit\u00E9 d\u0027action d\u0027urgence. Consid\u00E9rations op\u00E9rationnelles : window planning (pr\u00E9-publication, double-signature), TTL des enregistrements, capacit\u00E9s du parent (d\u00E9lai de mise \u00E0 jour du DS), p\u00E9riode de surveillance apr\u00E8s rollover. Automatisation : outils de gestion (OpenDNSSEC, Knot, BIND avec scripts) pour r\u00E9duire erreurs humaines ; toutefois garder contr\u00F4les manuels pour KSK ou actions sensibles.\r\n\r\nProc\u00E9dure de rollover s\u00E9curis\u00E9e \u2014 Principes g\u00E9n\u00E9raux\r\nPrincipes : planifier et documenter, minimiser le nombre de changements simultan\u00E9s, utiliser phases de transition (coexistence des cl\u00E9s), v\u00E9rifier \u00E0 chaque \u00E9tape, coordonner avec l\u0027op\u00E9rateur parent pour les changements DS, conserver journaux et points de restauration. Les \u00E9tapes doivent inclure des sauvegardes avant toute op\u00E9ration, des fen\u00EAtres de pr\u00E9-publication conformes au TTL, et des \u00E9tapes de validation (checklists).\r\n\r\nProc\u00E9dure de rollover ZSK (flux typique)\r\n1) Planification : choisir date/heure, v\u00E9rifier TTL et p\u00E9riode de maintien. 2) G\u00E9n\u00E9rer nouvelle ZSK dans un environnement s\u00E9curis\u00E9 (ou HSM). 3) Pr\u00E9-publication : ajouter la nouvelle cl\u00E9 DNSKEY dans la zone (la zone contient alors l\u0027ancienne et la nouvelle ZSK). 4) Signer : signer la zone avec la nouvelle ZSK (habituellement double-signature pendant une p\u00E9riode de transition) afin que les validateurs acceptent les signatures. 5) P\u00E9riode de transition : laisser coexister et surveiller les validations. 6) Retirer l\u0027ancienne ZSK apr\u00E8s la p\u00E9riode de transition et apr\u00E8s v\u00E9rification des caches/r\u00E9solveurs. 7) Mettre \u00E0 jour les sauvegardes et journaux.\r\n\r\nProc\u00E9dure de rollover KSK (flux typique et coordination parent)\r\nLe KSK rollover implique le parent \u00E0 cause du DS publi\u00E9 dans la zone parente. Processus courant : 1) G\u00E9n\u00E9rer la nouvelle KSK dans un environnement s\u00E9curis\u00E9. 2) Pr\u00E9-publication : publier la nouvelle KSK dans la zone (la zone publie alors les deux DNSKEYs). 3) G\u00E9n\u00E9rer la DS pour la nouvelle KSK et fournir la DS au parent via le canal administratif (proc\u00E9dures du registrar/registre). 4) Attendre la confirmation du parent que la nouvelle DS est en place (consid\u00E9rer les d\u00E9lais de propagation et TTL du DS). 5) Une fois le parent publie la DS, signer les DNSKEYs (la zone est valide avec la nouvelle KSK). 6) Retirer l\u0027ancienne KSK de la zone et demander au parent de retirer l\u0027ancien DS si n\u00E9cessaire. 7) Surveiller et v\u00E9rifier la cha\u00EEne de validation. Remarque : il existe des variantes (pre-publish, double-signing, rollovers automatiques) ; la cl\u00E9 est la coordination avec le parent et le respect des fen\u00EAtres de TTL.\r\n\r\nSc\u00E9narios d\u0027urgence et reprise apr\u00E8s compromission\r\nSi une cl\u00E9 est compromise : 1) D\u00E9clencher le plan d\u0027incident, r\u00E9voquer l\u0027utilisation de la cl\u00E9 compromise. 2) G\u00E9n\u00E9rer une nouvelle cl\u00E9 (ZSK ou KSK selon le cas). 3) Pour KSK compromis : coordination rapide avec le parent pour remplacer le DS ; si le parent refuse ou d\u00E9lai long, utiliser proc\u00E9dures d\u0027urgence document\u00E9es (p. ex. publication d\u0027un DS d\u0027urgence via canal administratif). 4) Publier rapidement la nouvelle cl\u00E9 et signatures, v\u00E9rifier la validation. 5) Communiquer avec les parties prenantes et documenter l\u0027incident. Tester r\u00E9guli\u00E8rement les proc\u00E9dures d\u0027urgence via exercices.\r\n\r\nV\u00E9rification et audits post-rollover\r\nApr\u00E8s tout rollover, ex\u00E9cuter v\u00E9rifications : r\u00E9solution et validation depuis multiples r\u00E9solveurs publics, contr\u00F4le des caches (TTL expir\u00E9s), v\u00E9rification du parent pour le DS, checksums et empreintes des cl\u00E9s, revue des logs d\u0027acc\u00E8s HSM et des journaux d\u0027audit. Programmer un audit p\u00E9riodique (revue de politiques, renouvellement des proc\u00E9dures) et garder un historique des rollovers pour analyses futures.\r\n\r\nBonnes pratiques r\u00E9sum\u00E9es\r\n1) S\u00E9parer KSK et ZSK, limiter l\u0027acc\u00E8s \u00E0 la KSK. 2) Utiliser HSMs pour les cl\u00E9s de haut niveau et stockages chiffr\u00E9s pour les sauvegardes. 3) Automatiser les t\u00E2ches r\u00E9p\u00E9titives tout en conservant contr\u00F4les manuels pour actions sensibles. 4) Planifier les rollovers en tenant compte des TTL et de la coordination parentale. 5) Tester proc\u00E9dures dans un environnement non productif. 6) Documenter et journaliser toutes les op\u00E9rations li\u00E9es aux cl\u00E9s.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Vous administrez une zone sign\u00E9e DNSSEC. Quelle cl\u00E9 (KSK ou ZSK) devez-vous changer plus fr\u00E9quemment et pourquoi ?",
              "Answer": "ZSK \u2014 elle signe les donn\u00E9es de la zone et est soumise \u00E0 plus de charge op\u00E9rationnelle ; la changer fr\u00E9quemment r\u00E9duit l\u0027exposition cryptographique et limite l\u0027impact d\u0027une \u00E9ventuelle compromission sans n\u00E9cessit\u00E9 de coordination avec le parent.",
              "Explanation": "La ZSK est utilis\u00E9e pour signer les enregistrements fr\u00E9quents et peut \u00EAtre plus petite et plus facile \u00E0 remplacer. La KSK, en revanche, est li\u00E9e au DS dans la zone parente, implique coordination et a un co\u00FBt op\u00E9rationnel plus \u00E9lev\u00E9 pour le rollover, donc elle est chang\u00E9e moins souvent."
            },
            {
              "Instruction": "Vous planifiez un rollover KSK. Donnez une liste des \u00E9tapes critiques qui n\u00E9cessitent coordination avec le parent et pr\u00E9cisez pourquoi la coordination est n\u00E9cessaire.",
              "Answer": "\u00C9tapes critiques : g\u00E9n\u00E9rer la nouvelle KSK ; extraire la DS correspondante ; communiquer et soumettre la nouvelle DS au parent (registrar/registre) ; attendre la publication du DS par le parent ; v\u00E9rifier la pr\u00E9sence du DS avant de retirer l\u0027ancienne KSK/DS. La coordination est n\u00E9cessaire parce que le parent publie le DS qui lie la cl\u00E9 de la zone \u00E0 la cha\u00EEne de confiance ; sans mise \u00E0 jour du DS au parent, la cha\u00EEne de validation se casse.",
              "Explanation": "Le DS est le lien entre la zone parente et votre KSK. Si le parent n\u0027a pas le DS de la nouvelle KSK, les validateurs externes ne pourront pas \u00E9tablir la cha\u00EEne de confiance. D\u0027o\u00F9 l\u0027importance d\u0027une coordination claire et confirm\u00E9e."
            },
            {
              "Instruction": "D\u00E9crivez une proc\u00E9dure courte pour g\u00E9rer une suspicion de compromission d\u0027une ZSK en production.",
              "Answer": "1) D\u00E9tecter et isoler l\u0027incident ; 2) \u00C9mettre et g\u00E9n\u00E9rer une nouvelle ZSK dans un environnement s\u00E9curis\u00E9 ; 3) Pr\u00E9-publier la nouvelle ZSK dans la zone ; 4) Signer la zone avec la nouvelle ZSK, laisser p\u00E9riode de transition ; 5) Retirer l\u0027ancienne ZSK une fois la nouvelle propag\u00E9e et valid\u00E9e ; 6) Mettre \u00E0 jour sauvegardes et journaux, et mener post-mortem.",
              "Explanation": "La ZSK peut \u00EAtre remplac\u00E9e rapidement sans intervention du parent, d\u0027o\u00F9 une proc\u00E9dure focalis\u00E9e sur remplacement, propagation et validation. La pr\u00E9-publication et la double-signature r\u00E9duisent la fen\u00EAtre pendant laquelle la zone peut devenir invalide aupr\u00E8s des r\u00E9solveurs."
            },
            {
              "Instruction": "Vous avez un TTL de 3600s sur les enregistrements DNSKEY et DS. Quelle dur\u00E9e minimale de p\u00E9riode de pr\u00E9-publication et de transition recommanderiez-vous pour un rollover ZSK et quelle est la raison ?",
              "Answer": "Recommander une p\u00E9riode de pr\u00E9-publication/transition d\u0027au moins quelques multiples du TTL, par exemple 24 heures (6\u00D73600) ou jusqu\u0027\u00E0 48 heures pour tenir compte des caches et des r\u00E9solveurs lents. Cela permet de s\u0027assurer que les caches qui conservaient l\u0027ancienne signature ont expir\u00E9 et que la nouvelle cl\u00E9/signature est accept\u00E9e universellement.",
              "Explanation": "Les r\u00E9solveurs mettent en cache les enregistrements et signatures jusqu\u0027\u00E0 la fin du TTL. En s\u0027assurant d\u0027une fen\u00EAtre de transition plusieurs fois sup\u00E9rieure au TTL, on minimise le risque de validation \u00E9chou\u00E9e chez certains r\u00E9solveurs et on assure une propagation stable."
            },
            {
              "Instruction": "Donnez trois contr\u00F4les ou m\u00E9canismes pour s\u00E9curiser la KSK \u00E0 long terme.",
              "Answer": "1) Stockage dans un HSM avec s\u00E9paration des r\u00F4les et authentification forte ; 2) Cl\u00E9 de stockage hors-ligne pour sauvegardes, conserv\u00E9e dans un coffre s\u00E9curis\u00E9 ; 3) Journalisation et audits r\u00E9guliers des acc\u00E8s et des op\u00E9rations, avec processus d\u0027approbation manuelle pour les usages de la KSK.",
              "Explanation": "La KSK est critique pour la cha\u00EEne de confiance DNSSEC. Son compromis peut rendre la zone non fiable. L\u0027utilisation d\u0027un HSM limite l\u0027exposition, les sauvegardes hors-ligne prot\u00E8gent contre compromissions \u00E0 distance, et les audits permettent de d\u00E9tecter et pr\u00E9venir les usages non autoris\u00E9s."
            }
          ]
        },
        {
          "Title": "Outils de diagnostic : introduction \u00E0 dig, drill et delv",
          "Summary": "Pr\u00E9sentation des outils, diff\u00E9rences entre eux et cas d\u0027usage pour l\u0027exploitation et le d\u00E9pannage DNS/DNSSEC.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre le r\u00F4le et les capacit\u00E9s de dig, drill et delv dans l\u2019\u00E9cosyst\u00E8me DNS/DNSSEC",
            "Savoir ex\u00E9cuter des requ\u00EAtes de base et DNSSEC (DO/AD/RRSIG/DS/DNSKEY) avec ces outils",
            "Identifier les diff\u00E9rences pratiques entre dig, drill et delv (sorties, focus, sc\u00E9narios d\u2019usage)",
            "Appliquer une d\u00E9marche de diagnostic pour r\u00E9soudre des probl\u00E8mes courants DNS et DNSSEC",
            "Interpr\u00E9ter les r\u00E9sultats pour rep\u00E9rer des \u00E9checs de signature, des probl\u00E8mes de cha\u00EEne de confiance ou des erreurs de publication"
          ],
          "Content": "Introduction : pourquoi des outils d\u00E9di\u00E9s au diagnostic DNS/DNSSEC\r\nLes outils en ligne de commande (dig, drill, delv, etc.) permettent d\u2019observer pr\u00E9cis\u00E9ment les r\u00E9ponses DNS, les m\u00E9tadonn\u00E9es (flags, d\u00E9lais), et les \u00E9l\u00E9ments DNSSEC (RRSIG, DNSKEY, DS). Ils sont indispensables pour localiser l\u2019origine d\u2019un probl\u00E8me (zone mal sign\u00E9e, cha\u00EEne de confiance interrompue, r\u00E9solveur qui ne valide pas, mauvaise publication de cl\u00E9s) et pour v\u00E9rifier les comportements selon les r\u00E9solveurs et transports.\r\n\r\ndig \u2014 outil polyvalent et omnipr\u00E9sent\r\ndig (outil fourni par ISC BIND et distribu\u00E9 largement) est un client DNS flexible pour poser des questions \u00E0 un serveur (ou au r\u00E9solveur) et afficher la r\u00E9ponse brute. Points cl\u00E9s : syntaxe simple (dig @serveur nom type), option \u002Bdnssec pour demander les donn\u00E9es DNSSEC (envoie le bit DO), affiche les sections ANSWER/AUTH/ADDITIONAL, et peut montrer le flag AD quand la r\u00E9ponse provient d\u2019un r\u00E9solveur ayant valid\u00E9. Tr\u00E8s utilis\u00E9 pour des diagnostics rapides et automatis\u00E9s.\r\n\r\ndrill \u2014 alternative avec focalisation DNSSEC\r\ndrill (outil propos\u00E9 par les biblioth\u00E8ques ldns / impl\u00E9mentations orient\u00E9es DNSSEC) ressemble \u00E0 dig mais met davantage l\u2019accent sur DNSSEC et la lisibilit\u00E9 des informations associ\u00E9es. Il renvoie facilement DNSKEY / RRSIG / DS et affiche souvent des informations plus explicites pour le diagnostic DNSSEC. Drill est appr\u00E9ci\u00E9 quand on veut des pr\u00E9sentations claires des enregistrements sign\u00E9s et pour comparer r\u00E9ponses entre serveurs.\r\n\r\ndelv \u2014 outil de validation pas-\u00E0-pas pour DNSSEC\r\ndelv est con\u00E7u pour effectuer une validation DNSSEC d\u00E9taill\u00E9e et explicite : il suit la cha\u00EEne de validation, v\u00E9rifie les signatures, et identifie pr\u00E9cis\u00E9ment o\u00F9 la validation \u00E9choue (absence de DS, cl\u00E9 morte, signature expir\u00E9e, mauvaise algorithme, etc.). L\u00E0 o\u00F9 dig/drill montrent les enregistrements, delv explique l\u2019\u00E9tat de la validation et quel \u00E9l\u00E9ment casse la cha\u00EEne de confiance. Utile pour des enqu\u00EAtes approfondies sur la signature d\u2019une zone.\r\n\r\nDiff\u00E9rences pratiques entre dig, drill et delv\r\nComparaison synth\u00E9tique : dig = outil g\u00E9n\u00E9raliste, universel et scriptable ; drill = \u00E9quivalent orient\u00E9 DNSSEC avec sorties plus explicites pour RRSIG/DNSKEY ; delv = outil de validation/diagnostic DNSSEC, focalis\u00E9 sur la cha\u00EEne de confiance (\u00E9tapes de validation). Autres diff\u00E9rences : format de sortie (dig plus verbeux par d\u00E9faut), comportements vis-\u00E0-vis du flag AD (d\u00E9pend du r\u00E9solveur, pas de l\u2019outil), et fonctions avanc\u00E9es (certains outils ajoutent des options pour le transport moderne \u2014 DoT/DoH \u2014 selon leur version).\r\n\r\nCas d\u2019usage et d\u00E9marches de d\u00E9pannage\r\nExemples de sc\u00E9narios : 1) V\u00E9rifier qu\u2019un enregistrement A/AAAA est publi\u00E9 correctement : dig @serveur zone A ; 2) V\u00E9rifier que les RRSIGs et DNSKEY sont pr\u00E9sents : dig \u002Bdnssec zone DNSKEY / dig \u002Bdnssec zone A ; 3) Comparer r\u00E9ponse d\u2019un r\u00E9solveur valideur et d\u2019un simple r\u00E9cursif : dig @1.1.1.1 zone \u002Bdnssec puis dig @unServeurAutre zone \u002Bdnssec pour rep\u00E9rer AD flag ou diff\u00E9rences ; 4) Diagnostiquer une validation cass\u00E9e : utiliser delv pour obtenir l\u2019\u00E9tape exacte qui \u00E9choue (par ex. absence du DS chez le parent, mauvaise correspondance entre DS et DNSKEY, RRSIG expir\u00E9e). D\u00E9marche recommand\u00E9e : r\u00E9colter les enregistrements (DNSKEY, DS, RRSIG), v\u00E9rifier dates/algorithmes/tags, comparer parents et enfants, utiliser un outil de validation pour rep\u00E9rer l\u2019\u00E9tape fautive, corriger puis re-tester.\r\n\r\nBonnes pratiques lors du diagnostic\r\nToujours tester contre l\u2019autorit\u00E9 (nameserver auteur de la zone) et contre un r\u00E9solveur public (ex. 1.1.1.1, 8.8.8.8) pour distinguer origine du probl\u00E8me. Utiliser \u002Bdnssec (ou l\u2019\u00E9quivalent) pour r\u00E9cup\u00E9rer RRSIG. Ne pas confondre DO (demandes de donn\u00E9es DNSSEC) et AD (indicateur que le r\u00E9solveur a valid\u00E9). Conserver horodatages (validit\u00E9 des RRSIG), v\u00E9rifier la correspondance des cl\u00E9s (key tag/algorithm) et s\u2019assurer que le DS publi\u00E9 chez le parent correspond bien au DNSKEY. Consigner commandes et sorties pour audit.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 Commande de base (dig) : que renvoie et pourquoi la commande \u0022dig \u002Bdnssec example.com DNSKEY\u0022 ? Indiquez les \u00E9l\u00E9ments \u00E0 v\u00E9rifier dans la r\u00E9ponse pour un diagnostic DNSSEC de premier niveau.",
              "Answer": "La commande renvoie les enregistrements DNSKEY de example.com et, si disponibles, les RRSIG correspondants (la section ANSWER contiendra DNSKEY et RRSIG). Il faut v\u00E9rifier la pr\u00E9sence des DNSKEY, la pr\u00E9sence des RRSIG couvrant DNSKEY, les champs d\u2019algorithme et de key tag, et s\u2019il y a un flag AD (si on interroge un r\u00E9solveur valideur).",
              "Explanation": "L\u2019option \u002Bdnssec fait envoyer le bit DO dans la requ\u00EAte afin que l\u2019autorit\u00E9 retourne les donn\u00E9es DNSSEC (RRSIG) si elles existent. Les DNSKEY sont les cl\u00E9s publiques utilis\u00E9es pour v\u00E9rifier les RRSIG ; l\u2019existence d\u2019un RRSIG sur DNSKEY (signature de la RRset) et la concordance des key tags/algorithmes sont des indices essentiels. AD indique que le r\u00E9solveur qui a r\u00E9pondu a valid\u00E9 la r\u00E9ponse \u2014 mais AD n\u2019est pas fix\u00E9 par le serveur auteur."
            },
            {
              "Instruction": "Exercice 2 \u2014 Comparaison (drill) : on suspecte que la DS du parent ne correspond pas \u00E0 la DNSKEY de la zone. D\u00E9crivez une s\u00E9rie de commandes (conceptuelles) avec drill pour v\u00E9rifier ce point et ce qu\u2019il faut comparer dans les sorties.",
              "Answer": "1) R\u00E9cup\u00E9rer la DNSKEY depuis l\u2019autorit\u00E9 : drill \u002Bdnssec @ns.zone.example zone.example DNSKEY. 2) R\u00E9cup\u00E9rer la DS publi\u00E9e chez le parent (ou la zone parente) : drill \u002Bdnssec @parent-NS zone.example DS (ou interroger le serveur parent pour la zone parente). 3) Comparer le key tag et l\u2019empreinte/algorithme du DS avec le DNSKEY (calculer le key tag ou lire le key tag dans la sortie du DNSKEY). Si le key tag/algorithme/empreinte ne correspondent pas, la DS ne pointe pas vers la bonne DNSKEY.",
              "Explanation": "Le diagnostic consiste \u00E0 v\u00E9rifier que la DS stock\u00E9e dans la zone parente correspond exactement \u00E0 la DNSKEY de la zone fille. Drill permet d\u2019obtenir clairement DNSKEY et DS. La comparaison porte sur le key tag (identifiant de la cl\u00E9), l\u2019algorithme et l\u2019empreinte (digest) ; une diff\u00E9rence signifie rupture de la cha\u00EEne de confiance (les validateurs refuseront la zone)."
            },
            {
              "Instruction": "Exercice 3 \u2014 Diagnostic de validation (delv) : vous utilisez delv pour valider example.net et l\u2019outil indique une erreur de validation. Quelle type d\u2019informations attendrez-vous de delv et comment l\u2019utiliseriez-vous pour localiser l\u2019erreur (exemples d\u2019erreurs typiques) ?",
              "Answer": "Delv donnera l\u2019\u00E9tat pas-\u00E0-pas de la validation : r\u00E9solution des DS au parent, r\u00E9cup\u00E9ration des DNSKEY, v\u00E9rification des RRSIG, et point pr\u00E9cis d\u2019\u00E9chec (ex. \u00AB no DS found \u00BB, \u00AB RRSIG expired \u00BB, \u00AB signature verify failed \u00BB, \u00AB key mismatch \u00BB). En se basant sur ce message on inspectera soit la zone fille (DNSKEY/RRSIG), soit la zone parente (DS), soit la p\u00E9riode de validit\u00E9 des signatures.",
              "Explanation": "Delv est con\u00E7u pour expliciter l\u2019\u00E9tape qui casse la cha\u00EEne de confiance. Par exemple, si delv rapporte \u00AB no DS found at parent for zone \u00BB, cela signifie que le parent n\u2019a pas publi\u00E9 de DS \u2014 il faut ajouter le DS ou retirer la configuration DNSSEC c\u00F4t\u00E9 zone fille. Si le message est \u00AB RRSIG expired \u00BB, il faut r\u00E9g\u00E9n\u00E9rer/signer la zone ou corriger l\u2019heure. Si \u00AB signature verify failed \u00BB, il peut s\u2019agir d\u2019un DS incorrect, d\u2019un DNSKEY chang\u00E9 sans mise \u00E0 jour du DS, ou d\u2019une erreur de configuration (algorithme/cl\u00E9)."
            }
          ]
        },
        {
          "Title": "Prise en main : requ\u00EAtes et options avanc\u00E9es avec dig",
          "Summary": "Commandes pratiques dig pour interroger des serveurs, sp\u00E9cifier types, flags, obtenir les sections additional/authority, et options de sortie.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre la commande de base dig et la syntaxe g\u00E9n\u00E9rale (@serveur, -p port, -x)",
            "Savoir sp\u00E9cifier le type d\u0027enregistrement (A, AAAA, MX, TXT, NS, SOA, DNSKEY, RRSIG, etc.)",
            "Extraire et contr\u00F4ler les sections question/answer/authority/additional dans la sortie",
            "Utiliser les options de sortie (\u002Bshort, \u002Bnoall, \u002Banswer, \u002Bmultiline, \u002Bstats, \u002Bcmd) pour produire des r\u00E9sultats lisibles ou parsables",
            "Employer les options avanc\u00E9es : \u002Btcp, \u002Btrace, \u002Bdnssec, \u002Bcdflag, \u002Bbufsize/\u002Bedns, \u002Bnoedns, \u002Btime, \u002Btries",
            "Reconna\u00EEtre les bonnes pratiques et pi\u00E8ges fr\u00E9quents (cache, pare-feu, fragmentation, taille UDP/EDNS)"
          ],
          "Content": "Introduction et syntaxe de base\r\ndig est un outil en ligne de commande pour interroger des serveurs DNS. Syntaxe simple : dig [@serveur] nom type. Exemples : dig example.com A (utilise le r\u00E9solveur par d\u00E9faut), dig @8.8.8.8 example.com A (interroge Google Public DNS), dig -x 8.8.8.8 (reverse lookup). Vous pouvez aussi pr\u00E9ciser le port : dig @1.1.1.1 -p 5353 example.com A.\r\n\r\nSp\u00E9cifier le type d\u0027enregistrement\r\nLes types les plus courants : A, AAAA, MX, NS, SOA, TXT, CNAME. Pour DNSSEC et diagnostics on utilise DNSKEY, RRSIG, DS. Exemples : dig example.com MX, dig example.org DNSKEY \u002Bdnssec, dig example.org RRSIG SOA. Si aucun type n\u0027est donn\u00E9, dig demande A par d\u00E9faut.\r\n\r\nSections de la r\u00E9ponse : question, answer, authority, additional\r\nLa sortie de dig contient des sections distinctes : \u0022QUESTION SECTION\u0022 (ce que vous avez demand\u00E9), \u0022ANSWER SECTION\u0022 (les r\u00E9ponses directes), \u0022AUTHORITY SECTION\u0022 (d\u00E9l\u00E9gu\u00E9s ou serveurs faisant autorit\u00E9), \u0022ADDITIONAL SECTION\u0022 (donn\u00E9es additionnelles comme adresses IP des NS). Pour contr\u00F4ler l\u0027affichage : \u002Bnoall permet de masquer tout puis \u002Banswer/\u002Bauthority/\u002Badditional/\u002Bquestion pour r\u00E9afficher uniquement ce que l\u0027on veut.\r\n\r\nOptions de sortie pratiques\r\nQuelques options utiles : \u002Bshort (sortie la plus compacte, id\u00E9ale pour scripts), \u002Bnoall (masque tout), \u002Banswer / \u002Bauthority / \u002Badditional / \u002Bquestion (s\u00E9lectionne des sections), \u002Bmultiline (affiche les RR sur plusieurs lignes pour lisibilit\u00E9), \u002Bcmd (affiche la ligne de commande initiale), \u002Bstats (affiche temps de requ\u00EAte et serveur), \u002Bcomments / \u002Bnocomments (contr\u00F4le les commentaires). Exemple pour n\u0027afficher que la r\u00E9ponse : dig example.com A \u002Bnoall \u002Banswer.\r\n\r\nOptions avanc\u00E9es et flags\r\nOptions avanc\u00E9es courantes : \u002Btcp (force TCP), \u002Btrace (effectue un trace r\u00E9cursif en partant de la racine), \u002Bdnssec (active le bit DO pour demander RRSIG et autres RR li\u00E9s \u00E0 DNSSEC), \u002Bcdflag (met le drapeau CD, disable checking), \u002Bbufsize=n (d\u00E9finit la taille EDNS UDP), \u002Bedns=0 (r\u00E9gle EDNS version), \u002Bnoedns (d\u00E9sactive EDNS). Gestion du d\u00E9lai et essais : \u002Btime= secondes, \u002Btries= nombre. Exemple : dig \u002Bdnssec example.org DNSKEY \u002Bbufsize=1232\r\n\r\nBonnes pratiques et pi\u00E8ges\r\nV\u00E9rifiez le serveur interrog\u00E9 (@...) pour \u00E9viter la confusion avec le r\u00E9solveur local. Utilisez \u002Btcp pour \u00E9viter des probl\u00E8mes li\u00E9s \u00E0 la taille UDP/EDNS (fragmentation). Le cache du r\u00E9solveur peut masquer une d\u00E9l\u00E9gation erron\u00E9e : pour diagnostiquer, interrogez directement les serveurs faisant autorit\u00E9 (NS). Pour d\u00E9bogage DNSSEC, combinez \u002Bdnssec et la r\u00E9cup\u00E9ration de RRSIG/DNSKEY. Attention aux firewalls qui bloquent le port 53 UDP/TCP et aux serveurs qui limitent le nombre de requ\u00EAtes.\r\n\r\nExemples pratiques r\u00E9capitulatifs\r\nCommandes utiles :\n- dig @8.8.8.8 example.com A (interroger un serveur pr\u00E9cis)\n- dig example.com MX \u002Bshort (obtenir seulement les valeurs MX)\n- dig example.com ANY \u002Bnoall \u002Banswer \u002Bauthority \u002Badditional (afficher sections s\u00E9lectionn\u00E9es)\n- dig -x 93.184.216.34 \u002Bshort (reverse lookup minimal)\n- dig \u002Btrace www.example.com (suivre la r\u00E9solution depuis la racine)\n- dig example.org DNSKEY \u002Bdnssec (demander les cl\u00E9s DNSSEC)\n- dig example.com A \u002Btcp \u002Bbufsize=1232 (forcer TCP et d\u00E9finir la taille EDNS)\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "1) Construisez une commande dig pour interroger le serveur 8.8.8.8 et obtenir uniquement la section ANSWER pour le record A de example.com.",
              "Answer": "dig @8.8.8.8 example.com A \u002Bnoall \u002Banswer",
              "Explanation": "On sp\u00E9cifie @8.8.8.8 pour interroger ce serveur, A pour le type, et \u002Bnoall pour masquer toutes les sections puis \u002Banswer pour n\u0027afficher que la section ANSWER (utile pour scripts ou lecture rapide)."
            },
            {
              "Instruction": "2) Comment obtenir une sortie tr\u00E8s compacte contenant seulement les adresses IPv4 (A) pour example.com ?",
              "Answer": "dig example.com A \u002Bshort",
              "Explanation": "\u002Bshort r\u00E9duit la sortie au minimum : chaque enregistrement A appara\u00EEt sur une ligne, sans les sections question/authority/additional ni les commentaires \u2014 pratique pour extraire rapidement une valeur."
            },
            {
              "Instruction": "3) Vous voulez diagnostiquer une d\u00E9l\u00E9gation DNS : commandez dig pour afficher \u00E0 la fois les sections AUTHORITY et ADDITIONAL pour example.com en masquant le reste.",
              "Answer": "dig example.com ANY \u002Bnoall \u002Bauthority \u002Badditional",
              "Explanation": "\u002Bnoall masque toutes les sections par d\u00E9faut ; \u002Bauthority et \u002Badditional r\u00E9activent uniquement ces deux sections. Le type ANY demande plusieurs RR, mais l\u0027essentiel ici est d\u0027afficher les NS (authority) et leurs adresses (additional)."
            },
            {
              "Instruction": "4) Montrer la commande pour effectuer une trace compl\u00E8te (r\u00E9solution it\u00E9rative depuis la racine) pour www.example.com et expliquer quand utiliser cette option.",
              "Answer": "dig \u002Btrace www.example.com",
              "Explanation": "\u002Btrace force dig \u00E0 effectuer la r\u00E9solution it\u00E9rative depuis les serveurs racine jusqu\u0027au serveur autoritaire final. Utile pour diagnostiquer o\u00F9 une d\u00E9l\u00E9gation \u00E9choue (cache interm\u00E9diaire vs serveur autoritaire). Ne pas utiliser ceci si vous voulez uniquement la r\u00E9ponse du r\u00E9solveur local."
            },
            {
              "Instruction": "5) Quelle commande dig permet de demander les enregistrements DNSKEY et les RRSIG associ\u00E9s (DNSSEC) pour example.org ? Indiquez la commande et ce que vous devez v\u00E9rifier dans la sortie.",
              "Answer": "dig example.org DNSKEY \u002Bdnssec",
              "Explanation": "L\u0027option \u002Bdnssec place le bit DO dans l\u0027EDNS permettant au serveur de renvoyer les enregistrements DNSSEC (RRSIG, DNSKEY) si le domaine est sign\u00E9. Dans la sortie, v\u00E9rifiez la pr\u00E9sence de DNSKEY et RRSIG et/ou des enregistrements DS dans la zone parente pour confirmer la cha\u00EEne de confiance."
            }
          ]
        },
        {
          "Title": "Pratique : drill et delv pour l\u0027inspection DNSSEC",
          "Summary": "Utilisation de drill et delv pour v\u00E9rifier signatures RRSIG, chaines de confiance, et interpr\u00E9ter les messages DNSSEC d\u00E9taill\u00E9s.",
          "EstimatedMinutes": 60,
          "LearningObjectives": [
            "Comprendre la finalit\u00E9 de drill et delv dans l\u0027inspection DNSSEC",
            "Savoir ex\u00E9cuter des requ\u00EAtes DNSSEC basiques et avanc\u00E9es avec drill et delv",
            "Interpr\u00E9ter les enregistrements RRSIG, DNSKEY et DS affich\u00E9s par ces outils",
            "V\u00E9rifier la cha\u00EEne de confiance (chain of trust) depuis l\u0027anneau racine jusqu\u0027\u00E0 une zone sign\u00E9e",
            "Diagnostiquer les erreurs courantes li\u00E9es \u00E0 la validation DNSSEC (signatures expir\u00E9es, cl\u00E9s manquantes, correspondance DS/DNSKEY)",
            "Appliquer une m\u00E9thodologie de d\u00E9bogage pratique pour r\u00E9soudre les probl\u00E8mes DNSSEC"
          ],
          "Content": "Introduction rapide : r\u00F4le de drill et delv\r\ndrill et delv sont des utilitaires de la suite ldns/ldns-tools et de BIND respectivement, con\u00E7us pour l\u0027interrogation et le diagnostic DNSSEC. drill permet d\u0027effectuer des requ\u00EAtes DNS et d\u0027afficher les enregistrements RRSIG, DNSKEY et autres en clair. delv (delegation lookups validator) est orient\u00E9 validation : il simule la validation DNSSEC compl\u00E8te et fournit des traces d\u00E9taill\u00E9es de la cha\u00EEne de confiance et des erreurs de validation.\r\n\r\nInstallation et options essentielles\r\nInstallation (exemples): apt install ldnsutils pour drill, apt install bind9-dnsutils pour delv (d\u00E9pend de la distribution). Options pratiques : drill \u002Bdnssec nom_de_domaine pour obtenir RRSIG et DNSKEY ; drill -t DNSKEY nom_de_domaine pour cibler un type. delv -D active la validation, delv -v pour verbeux, delv \u002Bnorrcomment supprime commentaires. Commandes typiques : drill @serveur -t A example.com \u002Bdnssec ; delv @8.8.8.8 example.com. Note: delv ex\u00E9cute une validation locale si on lui fournit des anchors ou si il peut atteindre la racine et r\u00E9cup\u00E9rer DS/DNSKEY.\r\n\r\nLecture des RRSIG avec drill\r\nEx\u00E9cuter : drill \u002Bdnssec -t A example.com. R\u00E9sultat important : l\u0027enregistrement RRSIG accompagne l\u0027ensemble RRset et contient : type covered (ex: A), algorithm (num\u00E9ro), labels, original TTL, signature inception/expiration (dates), key tag, signer name, et la signature Base64. Interpr\u00E9tation : v\u00E9rifier que la p\u00E9riode validit\u00E9 (inception/expiration) couvre la date actuelle ; v\u00E9rifier que key tag correspond \u00E0 une entr\u00E9e DNSKEY de la zone et que signer name est la zone signante (souvent le nom de la zone). Exemple d\u0027analyse : si RRSIG expire, les validateurs rejettent la RRset ; si key tag absent des DNSKEY, il y a un probl\u00E8me DS/DNSKEY ou propagation de cl\u00E9.\r\n\r\nV\u00E9rifier la cha\u00EEne de confiance avec delv\r\ndelv effectue des validations en simulant la proc\u00E9dure du validateur : obtenir l\u0027ARR (RRset), r\u00E9cup\u00E9rer la RRSIG, trouver la cl\u00E9 publique correspondante (DNSKEY) et remonter via DS dans le parent pour v\u00E9rifier correspondance. Commande : delv @1.1.1.1 -v example.com. Sortie typique : \u00E9tapes de r\u00E9solution, messages sur l\u0027obtention des DS de la zone parent, correspondance DS-\u003EDNSKEY, succ\u00E8s/fail de validation. Astuce : pour tester une validation locale sans acc\u00E9der \u00E0 la racine, ajouter un trust anchor: delv \u002Btafile=anchor.pem example.com ou delv -a anchorfile.\r\n\r\nOptions et messages d\u00E9taill\u00E9s de delv\r\nOptions utiles : -v (verbose), -d (debug), -D (enable dnssec validation), -p port, -t type. Messages fr\u00E9quents et leur interpr\u00E9tation : \u0027signature valid\u0027 ou \u0027RRSIG ok\u0027 signifie que la signature a \u00E9t\u00E9 v\u00E9rifi\u00E9e avec une DNSKEY valide ; \u0027no key for signer\u0027 indique que la DNSKEY correspondant au key tag/signame n\u0027a pas \u00E9t\u00E9 trouv\u00E9e ; \u0027DS mismatch\u0027 montre que le DS renvoy\u00E9 par le parent ne correspond pas au hash d\u0027une DNSKEY dans la zone ; \u0027signature expired\u0027 indique RRSIG hors p\u00E9riode ; \u0027chain could not be validated\u0027 signifie qu\u0027il manque un DS ou trust anchor vers la racine.\r\n\r\nCas courants et diagnostics\r\n1) Signature expir\u00E9e : drill montre RRSIG avec date d\u0027expiration ant\u00E9rieure \u00E0 aujourd\u0027hui ; mettre \u00E0 jour les signatures via le serveur de zone. 2) Key tag inconnu : RRSIG key tag non pr\u00E9sent dans la liste DNSKEY ; v\u00E9rifier rotation de cl\u00E9s r\u00E9cente et propagation. 3) DS absent du parent : zone sign\u00E9e mais pas de DS publi\u00E9 chez l\u0027op\u00E9rateur parent -\u003E validation \u00E9choue pour validateurs r\u00E9cursifs. 4) DS/DNSKEY hash mismatch : probablement mauvaise cl\u00E9 ou mauvais algorithme de hashing choisi (SHA-1 vs SHA-256). 5) Erreur de nom de signataire (signer name mismatch) : zonage erron\u00E9 ou mauvaise cl\u00E9 utilis\u00E9e pour signer. Utiliser drill -t DNSKEY, drill -t DS sur la zone et sur le parent pour comparer.\r\n\r\nM\u00E9thodologie pratique pas-\u00E0-pas\r\n1) Obtenir la RRset et RRSIG : drill \u002Bdnssec -t TYPE zone. 2) Lister DNSKEY de la zone : drill -t DNSKEY zone \u002Bdnssec. 3) Trouver le key tag correspondant et v\u00E9rifier signature dates. 4) V\u00E9rifier le DS dans le parent : drill -t DS parentzone \u002Bdnssec. 5) Lancer une validation compl\u00E8te avec delv -v zone ou delv -D pour voir la cha\u00EEne et les messages de validation. 6) Si \u00E9chec, comparer le hash DS/DNSKEY, v\u00E9rifier la pr\u00E9sence du key tag, v\u00E9rifier TTL et propagation, et r\u00E9p\u00E9ter apr\u00E8s correction. Toujours noter timestamps et key tags pour audit.\r\n\r\nBonnes pratiques et pr\u00E9cautions\r\nTenir un jeu de trust anchors connu et contr\u00F4l\u00E9 pour tests (fichiers .pem), travailler d\u0027abord sur copies de configuration avant de signer en production, surveiller expiration des signatures, automatiser rollover de cl\u00E9s si possible, utiliser delv pour pousser la validation compl\u00E8te apr\u00E8s chaque changement cl\u00E9/DS, et garder une proc\u00E9dure de rollback (mise hors DNSSEC) si une erreur casse la validation pour de nombreux utilisateurs.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "1) Vous ex\u00E9cutez la commande drill \u002Bdnssec -t A example.org et observez un RRSIG pour le RRset A avec key tag 12345 et signature expiration 2024-05-01T00:00:00. Aujourd\u0027hui est 2024-06-10. Que concluez-vous et quelle action recommander ?",
              "Answer": "La signature est expir\u00E9e ; la zone a des signatures RRSIG dont la date d\u0027expiration est pass\u00E9e. Il faut reg\u00E9n\u00E9rer/sign\u00E9er de nouveau les RRsets sur le serveur de zone et publier les signatures mises \u00E0 jour.",
              "Explanation": "Les validateurs refuseront ou consid\u00E9reront invalides les RRsets sign\u00E9s par une RRSIG expir\u00E9e. Solution : relancer le processus de signature (zonal signing), s\u0027assurer que le signer (ex: logiciel d\u0027auth DNSSEC) cr\u00E9e des RRSIG valides couvrant la date courante, puis v\u00E9rifier via drill/delv."
            },
            {
              "Instruction": "2) Vous lancez delv -v example.net et obtenez \u0027no key for signer\u0027 pour la RRSIG du RRset MX. Quel est le diagnostic probable et quels tests compl\u00E9mentaires ex\u00E9cuter ?",
              "Answer": "Diagnostic probable : la DNSKEY correspondant au key tag / signer name r\u00E9f\u00E9renc\u00E9 par la RRSIG est absente dans le jeu DNSKEY de la zone. Tests compl\u00E9mentaires : drill -t DNSKEY example.net \u002Bdnssec pour lister DNSKEY et v\u00E9rifier l\u0027absence du key tag ; v\u00E9rifier si la zone a \u00E9t\u00E9 partiellement mise \u00E0 jour ; v\u00E9rifier journaux du signer.",
              "Explanation": "RRSIG contient un key tag et signer name qui permettent d\u0027identifier la cl\u00E9 publique \u00E0 utiliser. Si la cl\u00E9 n\u0027est pas pr\u00E9sente, la signature ne peut \u00EAtre v\u00E9rifi\u00E9e. Causes : cl\u00E9 supprim\u00E9e/rotated sans retours ad\u00E9quats, propagation incompl\u00E8te, erreur d\u0027\u00E9dition de zone."
            },
            {
              "Instruction": "3) Vous comparez DS parent via drill -t DS parentzone et la DNSKEY de la zone via drill -t DNSKEY zone. Le hash DS (SHA-256) ne correspond \u00E0 aucun des hash calcul\u00E9s sur les DNSKEY pr\u00E9sents. Quelle est l\u0027interpr\u00E9tation et la marche \u00E0 suivre ?",
              "Answer": "Interpr\u00E9tation : le DS publi\u00E9 chez le parent n\u0027est pas en conformit\u00E9 avec les DNSKEY actuelles de la zone (mismatch), donc la validation \u00E9chouera. Marche \u00E0 suivre : identifier la bonne DNSKEY qui doit \u00EAtre celle correspondant au DS attendu ; soit publier un DS correct au parent si la zone a \u00E9t\u00E9 chang\u00E9e proprement, soit republier une DNSKEY qui correspond au DS attendu (ou corriger le hash), en coordonnant avec l\u0027op\u00E9rateur parent.",
              "Explanation": "La correspondance DS-\u003EDNSKEY est essentielle pour la cha\u00EEne de confiance. Un mismatch signifie qu\u0027un rollover de cl\u00E9 n\u0027a pas \u00E9t\u00E9 correctement synchronis\u00E9 ou qu\u0027une erreur de calcul du DS s\u0027est produite. Il faut recalculer le DS (ex: using dnssec-dsfromkey) et mettre \u00E0 jour l\u0027enregistrement chez le registrar/op\u00E9rateur parent."
            },
            {
              "Instruction": "4) Ex\u00E9cutez mentalement delv -D -v @8.8.8.8 sub.example.com et vous voyez \u0027chain could not be validated\u0027 et plus haut \u0027no DS\u0027 pour example.com. Que signifie le message et quelle(s) action(s) doit-on entreprendre c\u00F4t\u00E9 op\u00E9rateur de la zone example.com ?",
              "Answer": "Le message signifie que la validation DNSSEC a \u00E9chou\u00E9 car le parent example.com ne publie pas de DS pour sub.example.com, ou qu\u0027il n\u0027existe pas de DS remontant correctement \u00E0 la zone sign\u00E9e. Action c\u00F4t\u00E9 op\u00E9rateur: publier (ou corriger) l\u0027enregistrement DS pour sub.example.com dans la zone parent (ex: example.com) aupr\u00E8s du registrar si sub.example.com est une d\u00E9l\u00E9gation, puis v\u00E9rifier propagation et valider \u00E0 nouveau.",
              "Explanation": "Pour que la zone d\u00E9l\u00E9gu\u00E9e soit consid\u00E9r\u00E9e valide par les validateurs, son parent doit publier le DS pointant vers la DNSKEY publique de la sous-zone. L\u0027absence de DS interrompra la cha\u00EEne de confiance et emp\u00EAchera la validation."
            }
          ]
        },
        {
          "Title": "Atelier pratique : diagnostiquer une zone sign\u00E9e",
          "Summary": "Exercice dirig\u00E9 : r\u00E9cup\u00E9rer une zone sign\u00E9e, v\u00E9rifier signatures, interpr\u00E9ter erreurs courantes et simuler sc\u00E9narios de panne.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Savoir r\u00E9cup\u00E9rer le contenu d\u0027une zone DNS sign\u00E9e (via AXFR si autoris\u00E9, ou \u00E0 partir d\u0027un fichier de zone fourni).",
            "Conna\u00EEtre les outils courants pour v\u00E9rifier une zone sign\u00E9e (dig, delv, drill, ldns-verify-zone, named-checkzone, delv).",
            "Savoir interpr\u00E9ter les messages d\u0027erreur DNSSEC fr\u00E9quents (RRSIG expir\u00E9, cl\u00E9 manquante, DS absent, algorithme non support\u00E9, incoh\u00E9rence parent/enfant).",
            "\u00CAtre capable de reproduire des sc\u00E9narios de panne DNSSEC simples et proposer des actions de rem\u00E9diation.",
            "Appliquer une m\u00E9thodologie structur\u00E9e de diagnostic pour isoler la cause (zone, serveur, parent, r\u00E9solution r\u00E9cursive).",
            "Conna\u00EEtre les bonnes pratiques pour le test et le d\u00E9ploiement de signatures DNSSEC (gestion des cl\u00E9s, rollover, horloge, validation)."
          ],
          "Content": "Introduction\r\nCet atelier vise \u00E0 donner une exp\u00E9rience pratique du diagnostic d\u0027une zone DNS sign\u00E9e. Il combine commandes pour r\u00E9cup\u00E9rer la zone, outils pour v\u00E9rifier les RRSIG/DNSKEY/DS et une s\u00E9rie de sc\u00E9narios fr\u00E9quents \u00E0 reproduire et corriger. Le but est d\u0027apprendre \u00E0 isoler si le probl\u00E8me vient de la zone sign\u00E9e elle\u2011m\u00EAme, de la d\u00E9l\u00E9gation parentale, ou du r\u00E9solveur valideur.\r\n\r\nPr\u00E9requis et environnement\r\nAcc\u00E8s \u00E0 une station Unix/Linux avec les outils suivants install\u00E9s : dig (bind-utils), delv (ou drill), ldns-tools (ldns-verify-zone), named-checkzone (BIND), et optionnellement tcpdump/wireshark. Une copie du fichier de zone sign\u00E9e (ex : example.com.signed) ou un serveur autoritaire qui accepte AXFR pour l\u0027exercice. Connaissances de base DNS et des concepts DNSSEC (DNSKEY, RRSIG, DS, chain-of-trust).\r\n\r\nOutils et commandes essentielles\r\nCommandes utiles :\n- R\u00E9cup\u00E9ration / interrogation : dig \u002Bdnssec example.com ANY, dig AXFR example.com @ns1.example.net\n- Validation depuis un r\u00E9solveur : delv example.com @1.1.1.1\n- V\u00E9rification locale d\u0027une zone sign\u00E9e : ldns-verify-zone -k Kexample.com.\u002B005\u002B12345.key example.com.signed\n- V\u00E9rification syntaxique : named-checkzone -D example.com example.com.signed\n- Inspection des enregistrements : dig \u002Bdnssec DNSKEY example.com, dig \u002Bdnssec DS example.com @parent-ns\nCes outils affichent RRSIG, DNSKEY et erreurs de validation exploitables pour le diagnostic.\r\n\r\n\u00C9tapes pour r\u00E9cup\u00E9rer une zone sign\u00E9e\r\n1) Si AXFR est autoris\u00E9 : dig AXFR example.com @ns1.example.com\n2) Sinon demander le fichier de zone sign\u00E9 au mainteneur (ex: example.com.signed) ou utiliser des outils d\u0027administration du serveur autoritaire.\n3) Confirmer la pr\u00E9sence des RR : SOA, NS, A/AAAA, DNSKEY, RRSIG. Si DNSKEY/RRSIG absents : la zone n\u0027est pas sign\u00E9e localement.\r\n\r\nV\u00E9rifier les signatures et la cha\u00EEne de confiance\r\nA partir du fichier de zone sign\u00E9 : utiliser ldns-verify-zone ou named-checkzone -D pour v\u00E9rifier la signature interne. Exemple : ldns-verify-zone -k \u003Cfichier-key\u003E example.com.signed retourne OK ou erreurs (RRSIG invalide, key id mismatch). Pour tester la validation c\u00F4t\u00E9 r\u00E9solveur : delv example.com @resolver\nLes points cl\u00E9s \u00E0 v\u00E9rifier :\n- Pr\u00E9sence de RRSIG pour chaque RRset\n- Validit\u00E9 temporelle des RRSIG (inception/expiration)\n- Pr\u00E9sence des DNSKEY correspondants et capacit\u00E9 \u00E0 v\u00E9rifier la RRSIG\n- Pr\u00E9sence d\u0027un DS correspondant dans la zone parente si la cha\u00EEne doit \u00EAtre valide\r\n\r\nInterpr\u00E9ter les erreurs courantes\r\nErreurs fr\u00E9quentes et leur signification :\n- RRSIG signature has expired / not yet valid : horloge du serveur ou signatures expir\u00E9es \u2014 v\u00E9rifier dates et synchronisation NTP ou reg\u00E9n\u00E9rer signatures.\n- No DNSKEY for algorithm X : cl\u00E9 absente ou algorithme non support\u00E9 par le validateur \u2014 ajouter la DNSKEY ou utiliser algorithme support\u00E9.\n- DNSKEY/DK mismatch with RRSIG : RRSIG sign\u00E9 par une cl\u00E9 non pr\u00E9sente \u2014 v\u00E9rifier que la cl\u00E9 priv\u00E9e utilis\u00E9e correspond \u00E0 la DNSKEY publi\u00E9e.\n- DS missing at parent : la zone est sign\u00E9e mais la DS n\u0027existe pas dans la zone parent \u2014 le validateur renverra INSECURE/BOGUS selon le cas.\n- SERVFAIL sur r\u00E9solution : peut indiquer \u00E9chec de validation DNSSEC chez le r\u00E9solveur.\n- Inconsistent delegation / mismatch DS : si keytag DS != keytag DNSKEY alors \u00E9chec de la cha\u00EEne.\r\n\r\nM\u00E9thodologie de d\u00E9pannage\r\n1) Reproduire le probl\u00E8me depuis un validateur public (1.1.1.1 ou 8.8.8.8) et depuis un validateur local. 2) R\u00E9cup\u00E9rer la zone compl\u00E8te et v\u00E9rifier RRSIG/DNSKEY localement. 3) V\u00E9rifier DS au parent. 4) Confirmer heure syst\u00E8me (NTP) sur serveurs signant et sur r\u00E9solveur. 5) Examiner logs du serveur autoritaire (BIND, NSD) pour erreurs de signature ou d\u0027algorithme. 6) Si besoin, simuler modifications (expirer signature, retirer DS) dans un environnement de test pour observer comportements.\r\n\r\nSc\u00E9narios de panne \u00E0 simuler\r\nSc\u00E9narios utiles pour apprentissage :\n- RRSIG expir\u00E9 (changer la date d\u0027expiration ou forcer horloge en avant) =\u003E observe SERVFAIL/BOGUS\n- Cl\u00E9 publique absente ou mauvaise cl\u00E9 (supprimer DNSKEY ou remplacer par autre) =\u003E observe RRSIG cannot be validated\n- DS absent du parent (supprimer DS dans zone parente) =\u003E cha\u00EEne rompue\n- Algorithme non support\u00E9 (signer avec algorithme exp\u00E9rimental) =\u003E certains validateurs renvoient error\n- Probl\u00E8me de d\u00E9l\u00E9gation (NS incoh\u00E9rents entre parent et enfant) =\u003E r\u00E9solution partielle\nChaque sc\u00E9nario doit indiquer comment corriger (reg\u00E9n\u00E9rer signatures, publier DS, restaurer cl\u00E9, corriger NS).\r\n\r\nBonnes pratiques\r\nAutomatiser la v\u00E9rification post-signature, surveiller l\u0027expiration des RRSIG, synchroniser les horloges, planifier et tester les rollover de cl\u00E9s en environnement de pr\u00E9production, tenir \u00E0 jour une proc\u00E9dure de restauration, et v\u00E9rifier la pr\u00E9sence du DS dans la zone parent apr\u00E8s tout rollover KSK.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 R\u00E9cup\u00E9rer une zone sign\u00E9e : tenter un AXFR sur ns1.example.test et lister les RR DNSKEY et RRSIG. Commandes attendues.",
              "Answer": "dig AXFR example.test @ns1.example.test\n# ou si AXFR refus\u00E9 : demander le fichier example.test.signed\nEnsuite : dig \u002Bnocmd \u002Bnoall \u002Banswer \u002Bmultiline DNSKEY example.test @ns1.example.test\ndig \u002Bdnssec example.test @ns1.example.test RRSIG\nOutput attendu : pr\u00E9sence d\u0027au moins une ligne DNSKEY avec flags (256/257) et des RRSIG associ\u00E9s pour les RRset.",
              "Explanation": "L\u0027AXFR fournit la zone compl\u00E8te si autoris\u00E9. Si AXFR bloqu\u00E9, le fichier de zone sign\u00E9 doit \u00EAtre fourni. La commande dig DNSKEY montre les cl\u00E9s publiques (256=ZSK, 257=KSK). dig \u002Bdnssec montre les RRSIG attach\u00E9s aux ensembles d\u0027enregistrements."
            },
            {
              "Instruction": "Exercice 2 \u2014 V\u00E9rifier localement la coh\u00E9rence signatures/clefs : utiliser ldns-verify-zone (ou named-checkzone -D) sur le fichier example.test.signed et interpr\u00E9ter deux messages d\u0027erreur possibles : \u0027RRSIG validation failed\u0027 et \u0027no matching DNSKEY\u0027.",
              "Answer": "Commande : ldns-verify-zone -k Kexample.test.\u002B005\u002BXXXXX.key example.test.signed\nCas A (RRSIG validation failed) : ldns signale que la RRSIG d\u0027un RRset ne v\u00E9rifie pas -\u003E probable corruption du fichier, cl\u00E9 priv\u00E9e diff\u00E9rente ou RRSIG alt\u00E9r\u00E9e.\nCas B (no matching DNSKEY) : ldns indique qu\u0027aucune DNSKEY avec keytag correspondant n\u0027existe -\u003E RRSIG sign\u00E9 par une cl\u00E9 non publi\u00E9e.",
              "Explanation": "RRSIG validation failed implique que, pour le RRset donn\u00E9, la signature ne peut \u00EAtre calcul\u00E9e \u00E0 partir de la DNSKEY disponible (mauvaise signature/cl\u00E9 priv\u00E9e diff\u00E9rente). \u0027no matching DNSKEY\u0027 signifie que le keytag de la RRSIG ne correspond \u00E0 aucune DNSKEY dans la zone ; typiquement une cl\u00E9 priv\u00E9e non d\u00E9ploy\u00E9e ou un mauvais rollover."
            },
            {
              "Instruction": "Exercice 3 \u2014 Simuler une RRSIG expir\u00E9e : comment reproduire le sympt\u00F4me depuis un validateur et quelles corrections appliquer ?",
              "Answer": "Simulation : dans l\u0027environnement de test, modifier la RRSIG du fichier de zone pour mettre une date d\u0027expiration ant\u00E9rieure \u00E0 maintenant ou avancer l\u0027horloge du validateur. Test : delv example.test @1.1.1.1 ou un validateur local.\nR\u00E9sultat attendu : le validateur renvoie BOGUS / SERVFAIL et message \u0027signature has expired\u0027.\nCorrection : r\u00E9g\u00E9n\u00E9rer la signature (dnssec-signzone / signer avec la cl\u00E9 priv\u00E9e) ou corriger l\u0027heure syst\u00E8me (NTP).",
              "Explanation": "RRSIG contient des champs inception/expiration. Si l\u0027heure du validateur n\u0027est pas synchronis\u00E9e ou si la signature a expir\u00E9, la validation \u00E9choue. La solution correcte est soit re-signer la zone (ou prolonger la validit\u00E9 lors du signing), soit restaurer la synchronisation temporelle avec NTP/chrony."
            },
            {
              "Instruction": "Exercice 4 \u2014 Probl\u00E8me parent/enfant : la zone est sign\u00E9e mais les validateurs indiquent qu\u0027il manque la cha\u00EEne de confiance. Testez la pr\u00E9sence du DS au parent et expliquez les actions \u00E0 mener si le DS est absent ou incorrect.",
              "Answer": "V\u00E9rifier DS au parent : dig \u002Bdnssec DS example.test @a.gtld-servers.net (ou interroger le serveur parent).\nSi aucune entr\u00E9e DS retourn\u00E9e =\u003E pas de DS publi\u00E9 -\u003E la cha\u00EEne est rompue. Si DS pr\u00E9sent mais keytag diff\u00E9rent =\u003E DS incorrect.\nActions : publier le bon DS dans la zone parent (via l\u0027interface du registrar) ou corriger le DS pour qu\u0027il corresponde au keytag de la DNSKEY KSK publi\u00E9e dans la zone enfant. Apr\u00E8s mise \u00E0 jour, attendre la propagation TTL et retester.",
              "Explanation": "La validation DNSSEC n\u00E9cessite que le DS dans le parent corresponde \u00E0 la DNSKEY (KSK) de l\u0027enfant. L\u0027absence ou la diff\u00E9rence provoque un \u00E9chec de la cha\u00EEne de confiance. La seule mani\u00E8re de corriger est de mettre \u00E0 jour la zone parent (action du registrar) ou de refaire le rollover de cl\u00E9s pour aligner le DS publi\u00E9."
            }
          ]
        },
        {
          "Title": "Bonnes pratiques op\u00E9rationnelles et checklist de d\u00E9pannage",
          "Summary": "Checklist pour d\u00E9ployer et maintenir DNS/DNSSEC en production, monitoring, sauvegarde des cl\u00E9s et actions en cas d\u0027incident.",
          "EstimatedMinutes": 100,
          "LearningObjectives": [
            "Conna\u00EEtre la checklist op\u00E9rationnelle compl\u00E8te pour d\u00E9ployer et maintenir des serveurs DNS en production",
            "Comprendre les sp\u00E9cificit\u00E9s de DNSSEC (KSK vs ZSK, signatures, TTL, DS) et les bonnes pratiques associ\u00E9es",
            "Savoir concevoir et mettre en place une strat\u00E9gie de monitoring et d\u0027alerting adapt\u00E9e au service DNS/DNSSEC",
            "Ma\u00EEtriser la sauvegarde, la protection et la rotation des cl\u00E9s DNSSEC (proc\u00E9dures de backup, HSM, offsite)",
            "Savoir r\u00E9agir en cas d\u0027incident (compromission de clef, signatures invalides, panne d\u0027int\u00E9grit\u00E9 de zone) avec une checklist d\u0027urgence",
            "Appliquer des outils et automatisations s\u00FBrs pour d\u00E9ploiement, tests, rollbacks et exercices de reprise"
          ],
          "Content": "Introduction et principes\r\nRappels : le r\u00F4le du DNS en tant que service critique, pourquoi la robustesse op\u00E9rationnelle est essentielle, et comment DNSSEC ajoute des exigences (gestion de cl\u00E9s, signatures, d\u00E9lai de propagation). \u00C9nonc\u00E9 des objectifs de la le\u00E7on : checklist pour mise en production, exploitation quotidienne, supervision, sauvegarde des cl\u00E9s et conduite \u00E0 tenir en cas d\u0027incident.\r\n\r\nChecklist pr\u00E9-d\u00E9ploiement DNS (g\u00E9n\u00E9ral)\r\nConfigurations r\u00E9seau et r\u00E9silience : adresses IP anycast ou redondantes, multi\u2011sites et multi\u2011fournisseurs, pare-feux et ACL. Configuration des serveurs : versions logicielles support\u00E9es et patch\u00E9es, s\u00E9paration des r\u00F4les (master/primary, slave/secondary, resolver r\u00E9cursif), acc\u00E8s SSH restreint, gestion des privil\u00E8ges. Donn\u00E9es de zone : coh\u00E9rence des SOA, NS, A/AAAA, MX et TTL raisonnables. S\u00E9curit\u00E9 operational : NTP synchronis\u00E9, logs centralis\u00E9s, sauvegardes de configuration et des zones, plan de test de bascule et rollbacks document\u00E9s.\r\n\r\nChecklist DNSSEC sp\u00E9cifique\r\nChoix des algorithmes et longueurs de cl\u00E9s compatibles avec la politique de l\u0027organisation et la compatibilit\u00E9 des clients. Strat\u00E9gie KSK/ZSK : d\u00E9finir p\u00E9riode de rotation (p. ex. ZSK fr\u00E9quence plus \u00E9lev\u00E9e que KSK), proc\u00E9dures de g\u00E9n\u00E9ration, stockage et publication DS. Param\u00E8tres de signature : TTL des enregistrements, dur\u00E9e de vie des signatures (RRSIG), overlap de rollover (publication de nouvelles cl\u00E9s avant expiration). Validation avant publication : signer la zone en environnement de test, v\u00E9rifier cha\u00EEnes DS vers le parent, v\u00E9rifier que les r\u00E9solveurs valident correctement la zone.\r\n\r\nMonitoring et alerting\r\nSurveiller la disponibilit\u00E9 (ICMP, queries TCP/UDP 53), latence et taux d\u0027erreurs (SERVFAIL, NXDOMAIN anormaux), divergences entre ma\u00EEtres/secondaires (AXFR/IXFR), int\u00E9grit\u00E9 DNSSEC : v\u00E9rification r\u00E9guli\u00E8re des signatures (RRSIG expir\u00E9es), correspondance des DS entre parent et enfant, et m\u00E9triques de performance (QPS, cache hit ratio). Exemples d\u0027alertes critiques : signature expir\u00E9e \u00E0 moins de 24 heures, DS absent du parent apr\u00E8s publication, \u00E9chec d\u0027AXFR r\u00E9p\u00E9t\u00E9, taux de SERVFAIL au-dessus d\u0027un seuil. Int\u00E9grer logs (query logs, audit) dans SIEM et configurer runbooks li\u00E9s aux alertes.\r\n\r\nSauvegarde et protection des cl\u00E9s DNSSEC\r\nClasser les cl\u00E9s (KSK pour l\u0027algorithme de confiance racine, ZSK pour signatures de zone) et appliquer des contr\u00F4les d\u0027acc\u00E8s stricts. Stockage s\u00E9curis\u00E9 : HSM ou modules chiffr\u00E9s avec acc\u00E8s restreint, g\u00E9n\u00E9ration de cl\u00E9s dans des modules s\u00E9curis\u00E9s, s\u00E9paration des r\u00F4les (initiateur, op\u00E9rateur, auditeur). Sauvegardes hors site : export chiffr\u00E9 avec passphrase, fragments mn\u00E9moniques ou split key (Shamir) si n\u00E9cessaire, et proc\u00E9dures document\u00E9es pour restauration. Tester r\u00E9guli\u00E8rement les restaurations et conserver journaux d\u0027acc\u00E8s et bilans de la c\u00E9r\u00E9monie de cl\u00E9s.\r\n\r\nProc\u00E9dures d\u0027urgence et plan d\u0027incident\r\nSc\u00E9narios typiques : cl\u00E9 compromise, signatures expir\u00E9es, d\u00E9synchronisation ma\u00EEtres/secondaires, attaque par amplification ou saturation. Pour chaque sc\u00E9nario : objectifs (RTO/RPO), liste d\u0027actions imm\u00E9diates (mettre en quarantaine une cl\u00E9, d\u00E9marrer une cl\u00E9 de secours, annoncer rollback de zone sign\u00E9e), communications (qui pr\u00E9venir : op\u00E9rations, CSIRT, registrar/parent si DS affect\u00E9, stakeholders), et \u00E9tapes de rem\u00E9diation et post-mortem. Exemple rapide : si ZSK compromise : d\u00E9signer cl\u00E9 compromise, g\u00E9n\u00E9rer nouvelle ZSK dans HSM, signer zone en mode double-signature pendant la p\u00E9riode d\u0027overlap, publier et v\u00E9rifier, r\u00E9voquer ancienne cl\u00E9 apr\u00E8s p\u00E9riode de transition.\r\n\r\nOutils et automatisation recommand\u00E9s\r\nOutils de signature et gestion (OpenDNSSEC, BIND auto\u2011signing, Knot-sign), int\u00E9gration HSM (PKCS#11), outils de v\u00E9rification (dnssec-tools, drill/dig avec validation), monitoring (Prometheus exporters pour bind/knot, Zabbix, Nagios), CI/CD pour zones (tests unitaires de zone, linters, validation DNSSEC avant publication), et orchestration des rollovers. Automatiser publications DS au registrar quand possible via API s\u00E9curis\u00E9e et journaliser toutes les op\u00E9rations.\r\n\r\nTests, exercices et maintenance planifi\u00E9e\r\nProgrammer exercices r\u00E9guliers (fire drills) pour rollovers KSK/ZSK et sc\u00E9narios de compromission. Tests pr\u00E9alables : validation en bac \u00E0 sable des proc\u00E9dures, exercices de restauration depuis backup, tests de bascule multi-site. Maintenance : calendrier des rotations de cl\u00E9s, mises \u00E0 jour logicielles, revue trimestrielle des ACL et audits de conformit\u00E9, et reporting p\u00E9riodique des indicateurs (taux d\u0027erreurs, temps moyen de r\u00E9solution d\u0027incident).\r\n\r\nChecklist op\u00E9rationnelle r\u00E9capitulative\r\nListe synth\u00E9tique \u00E0 cocher en production : sauvegarde \u0026 test de restauration, monitoring en place et seuils d\u00E9finis, signatures valides pour \u003E 7 jours, DS synchronis\u00E9 avec le parent, cl\u00E9s stock\u00E9es en HSM avec backup offsite, runbook d\u0027incident accessible, exercices faits au moins une fois par an, et proc\u00E9dures d\u0027escalade document\u00E9es. Cette checklist doit \u00EAtre int\u00E9gr\u00E9e au playbook d\u0027op\u00E9rations et mise \u00E0 jour apr\u00E8s chaque incident.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "D\u00E9crivez les actions imm\u00E9diates (1 \u00E0 8) \u00E0 r\u00E9aliser si vous suspectez qu\u0027une ZSK a \u00E9t\u00E9 compromise sur une zone critique.",
              "Answer": "1) Isoler et retirer l\u0027acc\u00E8s de la machine/compte compromis; 2) D\u00E9clarer incident et pr\u00E9venir CSIRT/management; 3) Identifier la ou les cl\u00E9s ZSK affect\u00E9es; 4) G\u00E9n\u00E9rer une nouvelle ZSK dans HSM ou module s\u00E9curis\u00E9; 5) Signer la zone en mode double-signature (coexistence ZSK ancienne \u002B nouvelle) pendant la p\u00E9riode d\u0027overlap; 6) Publier la zone sign\u00E9e et v\u00E9rifier via validateurs que les signatures sont accept\u00E9es; 7) R\u00E9voquer et supprimer proprement l\u0027ancienne ZSK apr\u00E8s confirmation que la nouvelle est propag\u00E9e et valid\u00E9e; 8) R\u00E9aliser post-mortem et mise \u00E0 jour des proc\u00E9dures.",
              "Explanation": "La priorit\u00E9 est d\u0027emp\u00EAcher un usage ult\u00E9rieur de la cl\u00E9 compromise (isolement) puis de r\u00E9tablir une zone valide sign\u00E9e. Le double-signature permet une transition sans rupture pour les validateurs. Les \u00E9tapes incluent communication, g\u00E9n\u00E9ration s\u00E9curis\u00E9e de la nouvelle cl\u00E9, v\u00E9rification de la cha\u00EEne de confiance, puis nettoyage et analyse post-incident pour \u00E9viter r\u00E9p\u00E9tition."
            },
            {
              "Instruction": "Listez les m\u00E9triques et checks essentiels \u00E0 surveiller pour d\u00E9tecter un probl\u00E8me DNS/DNSSEC avant que les utilisateurs ne le remarquent.",
              "Answer": "Disponibilit\u00E9 des serveurs DNS (ICMP et requ\u00EAtes UDP/TCP 53), taux de SERVFAIL et REFUSED, latence des r\u00E9ponses (p95/p99), divergences de donn\u00E9es entre ma\u00EEtre et esclaves (\u00E9checs AXFR/IXFR), dates d\u0027expiration RRSIG (signatures proches de l\u0027expiration), absence ou incoh\u00E9rence du DS dans le parent, taux d\u0027NXDOMAIN anormaux, volume de queries (QPS) inhabituel, erreurs d\u0027authentification/permission dans logs, et alertes d\u0027int\u00E9grit\u00E9 HSM ou acc\u00E8s cl\u00E9.",
              "Explanation": "Ces m\u00E9triques couvrent disponibilit\u00E9, int\u00E9grit\u00E9 des r\u00E9ponses et sant\u00E9 des signatures DNSSEC. D\u00E9tecter signatures proches de l\u0027expiration ou DS manquants permet d\u0027anticiper une rupture. Les logs et taux d\u0027erreur aident \u00E0 identifier des comportements anormaux ou attaques."
            },
            {
              "Instruction": "Expliquez en \u00E9tapes concises comment effectuer un rollover de KSK avec la plus faible fen\u00EAtre de risque possible.",
              "Answer": "1) Planifier la fen\u00EAtre de rollover et informer parties prenantes; 2) G\u00E9n\u00E9rer nouvelle KSK dans HSM et sauvegarder selon proc\u00E9dure; 3) Publier la nouvelle cl\u00E9 publique dans la zone (DNSKEY) mais ne pas encore supprimer l\u0027ancienne; 4) Attendre la p\u00E9riode de propagation (p. ex. au moins la dur\u00E9e du TTL \u002B temps de signature) pour que les validateurs r\u00E9cup\u00E8rent la nouvelle KSK; 5) S\u0027assurer que le parent a accept\u00E9 et publi\u00E9 le DS correspondant si changement de DS requis; 6) Signer la zone avec la nouvelle KSK (si KSK utilis\u00E9e pour signer les RRSIG de la cl\u00E9), v\u00E9rifier la validation compl\u00E8te; 7) Apr\u00E8s p\u00E9riode de transition et v\u00E9rifications, retirer l\u0027ancienne KSK; 8) Mettre \u00E0 jour la documentation et logs.",
              "Explanation": "Le principe est de publier la nouvelle cl\u00E9 avant de retirer l\u0027ancienne, afin d\u0027assurer la continuit\u00E9 de la cha\u00EEne de confiance. La synchronisation avec le parent (DS) est critique si la KSK change le DS publi\u00E9. La dur\u00E9e d\u0027attente d\u00E9pend des TTL et des habitudes de cache; respecter des overlaps minimise le risque."
            }
          ]
        }
      ]
    },
    {
      "Title": "Cr\u00E9ation et configuration de zones (primaire/secondaire)",
      "Description": "Atelier pratique de cr\u00E9ation de zones, configuration de serveurs primaires et secondaires, transfert de zones et bonnes pratiques d\u0027administration.",
      "EstimatedHours": 1.5,
      "Lessons": [
        {
          "Title": "Introduction aux zones DNS et concepts cl\u00E9s",
          "Summary": "Pr\u00E9sentation des notions de zone, enregistrement, autorit\u00E9, relation entre serveur primaire et secondaire, et cas d\u0027usage. Mise en contexte des objectifs de l\u0027atelier.",
          "EstimatedMinutes": 45,
          "LearningObjectives": [
            "Comprendre la notion de zone DNS et la diff\u00E9rence entre zone et nom de domaine",
            "Identifier les principaux types d\u0027enregistrements DNS (A, AAAA, CNAME, MX, NS, TXT, SOA) et leur r\u00F4le",
            "Expliquer ce que signifie \u00EAtre \u00AB serveur faisant autorit\u00E9 \u00BB pour une zone",
            "D\u00E9crire la relation entre un serveur primaire (master) et un serveur secondaire (slave), y compris les m\u00E9canismes de transfert de zone (AXFR/IXFR) et de notification (NOTIFY)",
            "Reconna\u00EEtre les cas d\u0027usage courants pour l\u0027utilisation de serveurs secondaires (redondance, r\u00E9partition g\u00E9ographique, d\u00E9l\u00E9gation, sauvegarde)",
            "Pr\u00E9parer les participants aux activit\u00E9s pratiques de l\u0027atelier : cr\u00E9ation d\u0027une zone primaire, configuration d\u0027un secondaire et validation des transferts"
          ],
          "Content": "Contexte et objectifs de l\u0027atelier\r\nCet atelier fait partie du module \u00AB Cr\u00E9ation et configuration de zones (primaire/secondaire) \u00BB. L\u0027objectif est d\u0027\u00E9quiper les participants des connaissances th\u00E9oriques n\u00E9cessaires pour cr\u00E9er, maintenir et d\u00E9ployer des zones DNS en production. On s\u0027int\u00E9ressera autant aux concepts qu\u0027aux \u00E9tapes pratiques : \u00BFqu\u0027est-ce qu\u0027une zone ?, quels enregistrements mettre en place ?, comment assurer redondance et coh\u00E9rence entre serveurs primaire et secondaire ?\r\n\r\nQu\u0027est-ce qu\u0027une zone DNS ?\r\nUne zone DNS est une portion autoris\u00E9e de l\u0027espace de noms DNS pour laquelle un ou plusieurs serveurs sont responsables. Une zone peut correspondre \u00E0 un domaine complet (ex. exemple.com) ou \u00E0 un sous-ensemble (ex. sub.exemple.com). Elle regroupe les enregistrements qui font la r\u00E9solution des noms dans cet espace. La zone est l\u0027unit\u00E9 administrative sur laquelle s\u0027appliquent les fichiers de configuration et les transferts.\r\n\r\nEnregistrements DNS essentiels\r\nLes enregistrements stock\u00E9s dans une zone d\u00E9terminent la fa\u00E7on dont les noms se r\u00E9solvent :\n- A : mappe un nom \u00E0 une adresse IPv4.\n- AAAA : mappe un nom \u00E0 une adresse IPv6.\n- CNAME : alias d\u0027un nom vers un autre nom (ne peut pas coexister avec d\u0027autres enregistrements de m\u00EAme nom sauf DNSSEC sp\u00E9cifiques).\n- MX : d\u00E9finit les serveurs de messagerie pour le domaine, avec une priorit\u00E9.\n- NS : indique les serveurs de noms autoritaires pour la zone (doivent figurer dans la zone parent pour d\u00E9l\u00E9gation compl\u00E8te).\n- TXT : donn\u00E9es textuelles ; utilis\u00E9 pour SPF, DKIM, v\u00E9rifications diverses.\n- SOA : Start of Authority, en-t\u00EAte obligatoire d\u0027une zone contenant le ma\u00EEtre, le serial, et des param\u00E8tres de rafra\u00EEchissement/expiration.\r\n\r\nAutorit\u00E9 et serveurs faisant autorit\u00E9\r\nUn serveur faisant autorit\u00E9 (authoritative) r\u00E9pond aux requ\u00EAtes en se basant sur les donn\u00E9es de la zone pour lesquelles il est responsable. Il existe deux statuts : primaire (master) \u2014 source de v\u00E9rit\u00E9 o\u00F9 la zone est \u00E9dit\u00E9e \u2014 et secondaire (slave) \u2014 copie en lecture, synchronis\u00E9e depuis le primaire. Les r\u00E9solveurs r\u00E9cursifs utilisent les serveurs NS list\u00E9s pour obtenir des r\u00E9ponses autoritatives.\r\n\r\nRelation entre serveur primaire et secondaire\r\nLa relation primaire/secondaire permet la redondance et la distribution. Le primaire d\u00E9tient la version modifiable de la zone et publie des mises \u00E0 jour ; les secondaires r\u00E9cup\u00E8rent ces mises \u00E0 jour via des transferts de zone. M\u00E9canismes cl\u00E9s :\n- AXFR : transfert complet de zone (full transfer).\n- IXFR : transfert incr\u00E9mental (ne transporte que les changements si support\u00E9).\n- NOTIFY : message simple envoy\u00E9 par le primaire aux secondaires pour les pr\u00E9venir qu\u0027une mise \u00E0 jour est disponible ; d\u00E9clenche souvent un IXFR/AXFR.\n- Serial SOA : num\u00E9ro incr\u00E9ment\u00E9 \u00E0 chaque modification ; utilis\u00E9 par les secondaires pour d\u00E9tecter les changements.\nBonnes pratiques : s\u00E9curiser les transferts (ACLs, TSIG), limiter les adresses autoris\u00E9es, surveiller les num\u00E9ros de serial.\r\n\r\nCas d\u0027usage et bonnes pratiques\r\nCas d\u0027usage courants :\n- Haute disponibilit\u00E9 : plusieurs serveurs autoritatifs (au moins deux) r\u00E9partis sur diff\u00E9rents r\u00E9seaux ou zones g\u00E9ographiques.\n- R\u00E9partition g\u00E9ographique : secondaires proches des r\u00E9gions utilisateurs pour r\u00E9duire la latence.\n- Sauvegarde et reprise apr\u00E8s sinistre : copie de la zone ailleurs en cas de d\u00E9faillance du primaire.\n- D\u00E9charge du primaire : secondaires r\u00E9pondent aux requ\u00EAtes, r\u00E9duisant la charge sur le primaire.\nBonnes pratiques : maintenir des num\u00E9ros de serial coh\u00E9rents (format YYYYMMDDNN recommand\u00E9), prot\u00E9ger les transferts (TSIG), surveiller la synchronisation et v\u00E9rifier la coh\u00E9rence des enregistrements NS et glue records chez le registrar.\r\n\r\nMise en contexte pour l\u0027atelier pratique\r\nApr\u00E8s cette le\u00E7on, les participants devront \u00EAtre capables de : cr\u00E9er un fichier de zone simple, d\u00E9finir un SOA et des enregistrements de base, configurer un serveur primaire, configurer un secondaire pour r\u00E9cup\u00E9rer la zone, et valider la synchronisation et l\u0027autorit\u00E9. L\u0027atelier inclura des d\u00E9monstrations de transferts AXFR/IXFR, l\u0027utilisation d\u0027utilitaires (dig, nslookup), et des exercices de s\u00E9curit\u00E9 (TSIG, ACL).\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Identifier le type d\u0027enregistrement : pour chaque cas, indiquez s\u0027il s\u0027agit d\u0027un A, AAAA, CNAME, MX, NS, TXT ou SOA.\n1) www -\u003E 198.51.100.42\n2) mail -\u003E mailserver.exemple.com (priorit\u00E9 10)\n3) blog -\u003E blogs.exemple.com (alias)\n4) _acme-challenge.exemple.com contient une cl\u00E9 texte pour validation\n5) Le fichier zone contient \u0027exemple.com. 3600 IN SOA ns1.exemple.com. admin.exemple.com. 2025101901 7200 3600 1209600 3600\u0027\n6) NS entries listent ns1.exemple.com and ns2.exemple.com",
              "Answer": "1) A\n2) MX\n3) CNAME\n4) TXT\n5) SOA\n6) NS",
              "Explanation": "1) A associe un nom \u00E0 une IPv4. 2) MX indique un serveur de courrier avec une priorit\u00E9. 3) CNAME est un alias pointant vers un autre nom. 4) TXT contient des donn\u00E9es textuelles (ex. validation). 5) SOA est l\u0027en-t\u00EAte de zone avec le serial et param\u00E8tres. 6) NS liste les serveurs faisant autorit\u00E9 pour la zone."
            },
            {
              "Instruction": "Sc\u00E9nario : vous avez un primaire en 192.0.2.10 et un secondaire en 198.51.100.10. Apr\u00E8s mise \u00E0 jour de la zone sur le primaire, le secondaire ne r\u00E9cup\u00E8re pas les changements. Donnez trois v\u00E9rifications/rem\u00E8des rapides.",
              "Answer": "1) V\u00E9rifier que le serial SOA du primaire a \u00E9t\u00E9 incr\u00E9ment\u00E9.\n2) V\u00E9rifier la connectivit\u00E9 r\u00E9seau et que les transferts AXFR/IXFR sont autoris\u00E9s entre primaire et secondaire (firewall/ACL).\n3) V\u00E9rifier que le secondaire est configur\u00E9 avec l\u0027adresse correcte du primaire et qu\u0027il re\u00E7oit les NOTIFY ou forcer un transfert manuellement (dig axfr ou rndc/reload selon l\u0027impl\u00E9mentation).",
              "Explanation": "Le serial indique aux secondaires qu\u0027une mise \u00E0 jour est disponible ; sans increment, ils ne lanceront pas un transfert. Les transferts peuvent \u00EAtre bloqu\u00E9s par des firewall ou des ACL c\u00F4t\u00E9 primaire. Certains serveurs attendent un NOTIFY ou doivent \u00EAtre d\u00E9clench\u00E9s manuellement pour r\u00E9cup\u00E9rer les changements."
            },
            {
              "Instruction": "Interpr\u00E9tez les champs SOA suivants et expliquez leur utilit\u00E9 : \u0027exemple.com. 3600 IN SOA ns1.exemple.com. admin.exemple.com. 2025101901 7200 3600 1209600 3600\u0027.",
              "Answer": "SOA fields :\n- Primary NS : ns1.exemple.com. (serveur ma\u00EEtre par d\u00E9faut)\n- Hostmaster : admin.exemple.com. (adresse e-mail du contact, le point remplace le @)\n- Serial : 2025101901 (num\u00E9ro de version de la zone)\n- Refresh : 7200 (intervalle en secondes pour secondaire pour v\u00E9rifier le primaire)\n- Retry : 3600 (temps avant de r\u00E9essayer en cas d\u0027\u00E9chec)\n- Expire : 1209600 (dur\u00E9e apr\u00E8s laquelle la zone est consid\u00E9r\u00E9e expir\u00E9e si pas de synchronisation)\n- Minimum/TTL : 3600 (valeur minimale TTL pour les enregistrements n\u00E9gatifs ou par d\u00E9faut)",
              "Explanation": "Le serial permet aux secondaires de d\u00E9tecter les changements ; refresh/retry/expire contr\u00F4lent le comportement de synchronisation ; le champ minimum/TTL influence le caching et le TTL des r\u00E9ponses n\u00E9gatives. Ces param\u00E8tres sont essentiels pour la robustesse et la r\u00E9activit\u00E9 des m\u00E9canismes primaire/secondaire."
            }
          ]
        },
        {
          "Title": "Types de zones et architecture (primaire, secondaire, stub, forward)",
          "Summary": "Description des diff\u00E9rents types de zones (primaire, secondaire, stub, forward) et des architectures courantes, avantages et contraintes de chaque approche.",
          "EstimatedMinutes": 60,
          "LearningObjectives": [
            "Comprendre la diff\u00E9rence entre zone primaire, secondaire, stub et forward",
            "Savoir quand et pourquoi choisir chaque type de zone selon une architecture DNS",
            "Conna\u00EEtre les m\u00E9canismes de transfert et de synchronisation (AXFR, IXFR, NOTIFY) et leur r\u00F4le",
            "Identifier les avantages, contraintes et risques associ\u00E9s \u00E0 chaque approche",
            "Concevoir des architectures courantes (master/slave, hidden master, forwarders, sites distants) adapt\u00E9es \u00E0 des besoins op\u00E9rationnels"
          ],
          "Content": "Introduction g\u00E9n\u00E9rale aux zones DNS\r\nUne zone DNS est l\u0027ensemble des enregistrements d\u0027un espace de noms g\u00E9r\u00E9 par un serveur DNS. Les types de zones d\u00E9terminent la mani\u00E8re dont ce contenu est stock\u00E9, maintenu et r\u00E9solu. Les types les plus courants sont : primaire (master), secondaire (slave), stub et forward (forwarder/conditional forwarder). Le choix impacte la disponibilit\u00E9, la charge, la s\u00E9curit\u00E9, la latence et les proc\u00E9dures d\u0027administration.\r\n\r\nZone primaire (primaire / master)\r\nDescription : la zone primaire contient la copie autoritaire \u00ABma\u00EEtre\u00BB des enregistrements (fichier de zone ou stockage dynamique). C\u0027est depuis elle que sont produits les enregistrements originaux (modifications administratives).\nFonctionnement : les changements sont effectu\u00E9s sur le primaire. Les serveurs secondaires r\u00E9cup\u00E8rent des mises \u00E0 jour via des transferts de zone (AXFR/IXFR) d\u00E9clench\u00E9s par NOTIFY ou des requ\u00EAtes programm\u00E9es.\nAvantages : contr\u00F4le centralis\u00E9 des modifications, simplicit\u00E9 de gestion, source d\u0027autorit\u00E9 claire.\nContraintes : point de modification unique (potentiel goulet d\u0027\u00E9tranglement), n\u00E9cessit\u00E9 de s\u00E9curiser l\u0027acc\u00E8s et la r\u00E9plication; si le primaire est indisponible mais des secondaires existent, la r\u00E9solution continue \u2014 mais la modification non possible.\r\n\r\nZone secondaire (secondaire / slave)\r\nDescription : la zone secondaire est une copie en lecture seule d\u0027une zone primaire, obtenue par transfert de zone depuis le serveur ma\u00EEtre.\nFonctionnement : un/plusieurs serveurs secondaires interrogeront le ma\u00EEtre pour les mises \u00E0 jour ou recevront des notifications. Ils r\u00E9pondent aux requ\u00EAtes clients comme serveurs autoritaires.\nAvantages : haute disponibilit\u00E9, r\u00E9partition de charge, tol\u00E9rance aux pannes du ma\u00EEtre, distribution g\u00E9ographique.\nContraintes : latence de r\u00E9plication (d\u00E9pend des d\u00E9lais de TTL et des m\u00E9canismes de transfert), charge suppl\u00E9mentaire sur le ma\u00EEtre lors de transferts, configuration et s\u00E9curit\u00E9 des transferts (limiter les IP autoris\u00E9es, TSIG pour authentifier les transferts).\r\n\r\nZone stub\r\nDescription : une stub zone contient uniquement les enregistrements n\u00E9cessaires pour pointer vers les serveurs de noms d\u0027une zone d\u00E9l\u00E9gu\u00E9e \u2014 typiquement SOA, NS et les enregistrements A pour ces NS.\nFonctionnement : le serveur qui poss\u00E8de la stub zone tire p\u00E9riodiquement une copie minimale de la zone distante pour conna\u00EEtre les serveurs de noms actuels. Utile pour maintenir une connaissance \u00E0 jour de la d\u00E9l\u00E9gation sans stocker tous les enregistrements.\nAvantages : utile pour suivre dynamiquement les changements des NS d\u0027une zone d\u00E9l\u00E9gu\u00E9e, r\u00E9duire la charge r\u00E9seau compar\u00E9e \u00E0 une zone secondaire compl\u00E8te, simplifier la r\u00E9solution dans des architectures avec d\u00E9l\u00E9gation fr\u00E9quente.\nContraintes : n\u0027am\u00E9liore pas la latence de r\u00E9solution pour les enregistrements finaux (il faut encore interroger les serveurs autoritaires), n\u00E9cessite que la zone distante autorise les transferts pour la stub, et ne remplace pas une copie compl\u00E8te quand on veut une autorit\u00E9 distribu\u00E9e locale.\r\n\r\nZone forward (forwarding et conditional forwarding)\r\nDescription : un serveur DNS configur\u00E9 avec une forward zone redirige les requ\u00EAtes pour une zone donn\u00E9e vers un ou plusieurs serveurs appel\u00E9s forwarders. Le forward peut \u00EAtre global (pour toutes les requ\u00EAtes) ou conditionnel (pour certaines zones seulement).\nFonctionnement : au lieu de r\u00E9soudre via it\u00E9ration, le r\u00E9solveur envoie la requ\u00EAte au(x) forwarder(s). Les forwarders peuvent \u00EAtre des serveurs internes, des r\u00E9solveurs ISP, ou des appliances de s\u00E9curit\u00E9.\nAvantages : r\u00E9duction de la charge locale pour certaines recherches, centralisation du filtrage ou du contr\u00F4le (ex. proxy DNS), optimisation des r\u00E9solutions inter-sites (envoyer les requ\u00EAtes d\u0027un r\u00E9seau vers un r\u00E9solveur proche), utile en environnement cloud/hybride.\nContraintes : point de d\u00E9faillance si le forwarder n\u0027est pas redondant, d\u00E9pendance \u00E0 la disponibilit\u00E9 et \u00E0 la performance du forwarder, potentielle perte de contr\u00F4le sur la r\u00E9solution (logs, politiques), attention aux boucles de forwarding et \u00E0 la confidentialit\u00E9 des requ\u00EAtes.\r\n\r\nM\u00E9canismes de transfert et de synchronisation (AXFR, IXFR, NOTIFY, TSIG)\r\nAXFR : transfert complet de zone ; utile pour la premi\u00E8re synchronisation ou pour petites zones.\nIXFR : transfert incr\u00E9mental ; plus efficace pour les mises \u00E0 jour fr\u00E9quentes et zones volumineuses.\nNOTIFY : message envoy\u00E9 par le ma\u00EEtre pour informer les esclaves qu\u0027une mise \u00E0 jour est disponible, d\u00E9clenchant souvent un IXFR/AXFR.\nTSIG : m\u00E9canisme d\u0027authentification et d\u0027int\u00E9grit\u00E9 pour s\u00E9curiser transferts et notifications. Autres s\u00E9curit\u00E9s : ACL, contr\u00F4le d\u0027IP, DNSSEC pour l\u0027int\u00E9grit\u00E9 c\u00F4t\u00E9 client.\nChoix pratique : privil\u00E9gier IXFR \u002B NOTIFY \u002B TSIG quand possible pour r\u00E9duire la fen\u00EAtre de transfert et s\u00E9curiser les \u00E9changes.\r\n\r\nArchitectures courantes\r\nMaster/Slave (classique) : un ou plusieurs ma\u00EEtres primaires et plusieurs esclaves r\u00E9partis par site. Avantages : simplicit\u00E9, redondance ; contraintes : charge sur le ma\u00EEtre et latence de propagation.\nHidden Master : le ma\u00EEtre primaire n\u0027est pas expos\u00E9 publiquement (ne r\u00E9pond pas aux requ\u00EAtes client) ; seuls les esclaves publics r\u00E9pondent. Avantage : s\u00E9curit\u00E9 et protection du fichier de zone ; contrainte : n\u00E9cessit\u00E9 de bien configurer les transferts et la r\u00E9solution administrative.\nMulti-master (ou \u00E9critures multiples) : certains serveurs peuvent accepter des modifications et r\u00E9pliquer entre eux (impl\u00E9mentations sp\u00E9cifiques ou via stockage externe). Avantages : tol\u00E9rance d\u0027\u00E9criture ; contraintes : complexit\u00E9 de synchronisation et risque de conflits.\nForwarder-centric : utiliser des forwarders centraux (ou conditional forwarders) pour centraliser la r\u00E9solution sortante ou pour interconnecter sites. Avantage : centralisation des politiques ; contrainte : d\u00E9pendance au(s) forwarder(s).\nHybrid (stub \u002B forwarding \u002B secondaries) : combiner stub zones pour maintenir d\u00E9l\u00E9gations \u00E0 jour, secondaries pour haute disponibilit\u00E9, et forwarders pour sites sans copie locale. Permet flexibilit\u00E9 mais augmente la complexit\u00E9 d\u0027exploitation.\r\n\r\nAvantages et contraintes r\u00E9sum\u00E9 par type\r\nPrimaire : \u002B Contr\u00F4le centralis\u00E9, source d\u0027autorit\u00E9; - Point unique de modification, n\u00E9cessit\u00E9 de s\u00E9curit\u00E9.\nSecondaire : \u002B Redondance, disponibilit\u00E9, r\u00E9partition; - R\u00E9plication et latences, charge sur ma\u00EEtre.\nStub : \u002B Suit les NS de d\u00E9l\u00E9gations, l\u00E9ger; - Ne contient pas les enregistrements finaux, n\u00E9cessite acc\u00E8s pour transferts.\nForward : \u002B Centralise et optimise la r\u00E9solution, filtre possible; - D\u00E9pendance aux forwarders, peut cacher visibilit\u00E9 et cr\u00E9er des points de d\u00E9faillance.\nChoix : d\u00E9pend du besoin (disponibilit\u00E9, performance, s\u00E9curit\u00E9, architecture r\u00E9seau). Souvent on m\u00E9lange plusieurs approches pour obtenir r\u00E9silience et performance.\r\n\r\nBonnes pratiques op\u00E9rationnelles\r\nS\u00E9curiser les transferts avec TSIG et limiter les IP autoris\u00E9es.\nMaintenir plusieurs serveurs secondaires g\u00E9ographiquement distribu\u00E9s.\nUtiliser hidden master pour prot\u00E9ger l\u0027origine \u00E9ditable.\nPrivil\u00E9gier IXFR pour mises \u00E0 jour fr\u00E9quentes et AXFR pour r\u00E9initialisation compl\u00E8te.\nDocumenter clairement les relations ma\u00EEtre-esclave et les forwarders/conditionals.\nSurveiller les d\u00E9lais de propagation et planifier des tests de bascule.\n\u00C9viter les boucles de forwarding en concevant la topologie de forwarding.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "1) Vous administrez le DNS d\u0027une entreprise multisite. Vous voulez que chaque site continue de r\u00E9soudre localement m\u00EAme si la connexion au si\u00E8ge tombe. Vous voulez aussi limiter la charge sur le serveur ma\u00EEtre du si\u00E8ge. Quel type d\u0027architecture choisissez-vous et pourquoi ?",
              "Answer": "Master/Slave (primaire au si\u00E8ge \u002B serveurs secondaires locaux sur chaque site), \u00E9ventuellement avec le ma\u00EEtre cach\u00E9 (hidden master).",
              "Explanation": "Les serveurs secondaires locaux fournissent la r\u00E9solution m\u00EAme si la liaison au si\u00E8ge est coup\u00E9e (haute disponibilit\u00E9 locale). Ils r\u00E9partissent la charge client et reduisent les requ\u00EAtes vers le ma\u00EEtre. Le hidden master prot\u00E8ge la source d\u0027\u00E9criture et \u00E9vite d\u0027exposer le serveur ma\u00EEtre directement."
            },
            {
              "Instruction": "2) Vous avez une d\u00E9l\u00E9gation DNS vers un sous-domaine g\u00E9r\u00E9 par une autre \u00E9quipe. Vous devez fr\u00E9quemment conna\u00EEtre quels serveurs de noms sont actuellement autoritaires pour ce sous-domaine. Quelle solution est la plus adapt\u00E9e : zone secondaire compl\u00E8te, stub zone ou forwarder ? Expliquez.",
              "Answer": "Une stub zone est la solution la plus adapt\u00E9e.",
              "Explanation": "La stub zone contient les enregistrements NS (et A des NS) n\u00E9cessaires pour conna\u00EEtre les serveurs de noms autoritaires et se met \u00E0 jour p\u00E9riodiquement depuis la zone d\u00E9l\u00E9gu\u00E9e. Elle est plus l\u00E9g\u00E8re qu\u0027une zone secondaire compl\u00E8te et permet de suivre dynamiquement les changements de d\u00E9l\u00E9gation sans stocker tous les enregistrements du sous-domaine. Un forwarder ne fournit pas directement la liste des NS, et une zone secondaire compl\u00E8te est plus lourde et n\u00E9cessite les autorisations de transfert."
            },
            {
              "Instruction": "3) Quelle(s) m\u00E9thode(s) de transfert recommanderiez-vous pour synchroniser rapidement de grands fichiers de zone avec de fr\u00E9quentes petites modifications ? Pr\u00E9cisez aussi comment s\u00E9curiser ces transferts.",
              "Answer": "Utiliser IXFR (transfert incr\u00E9mental) accompagn\u00E9 de NOTIFY, et s\u00E9curiser les transferts avec TSIG (ou ACLs/IPs autoris\u00E9es).",
              "Explanation": "IXFR permet de n\u0027envoyer que les changements, r\u00E9duisant la bande passante et la charge pour de fr\u00E9quentes petites modifications. NOTIFY permet d\u0027alerter rapidement les esclaves. TSIG assure l\u0027authenticit\u00E9 et l\u0027int\u00E9grit\u00E9 des transferts, et limiter les IP autoris\u00E9es emp\u00EAche des transferts non souhait\u00E9s."
            },
            {
              "Instruction": "4) Dans un contexte o\u00F9 un r\u00E9seau branch\u00E9 (site B) ne doit pas h\u00E9berger de copie compl\u00E8te des zones pour des raisons de s\u00E9curit\u00E9, mais a besoin de r\u00E9soudre des noms internes via le site A, quelle option est pr\u00E9f\u00E9rable : forwarder conditionnel vers A, ou stub zone pointant sur A ? Avantages et inconv\u00E9nients de chaque option ?",
              "Answer": "Forwarder conditionnel vers A est g\u00E9n\u00E9ralement pr\u00E9f\u00E9rable si le site B veut d\u00E9l\u00E9guer compl\u00E8tement la r\u00E9solution \u00E0 A sans stocker d\u0027informations. La stub zone est utile si on veut conna\u00EEtre dynamiquement les serveurs de noms de la zone sans stocker tous les enregistrements.",
              "Explanation": "Conditionnel forwarder : B envoie les requ\u00EAtes pour la zone \u00E0 A, ne stocke rien, centralise le contr\u00F4le et la s\u00E9curit\u00E9 \u00E0 A. Risque : d\u00E9pendance \u00E0 A et besoin de redondance pour le forwarder. Stub : B garde seulement les NS/A des serveurs de A, ce qui permet de localiser les serveurs autoritaires mais n\u00E9cessite que B effectue des r\u00E9solutions vers ces serveurs ; utile quand on veut r\u00E9duire le nombre d\u0027\u00E9tapes pour trouver l\u0027autorit\u00E9. Si la s\u00E9curit\u00E9 interdit toute copie locale, le forwarder est le plus simple car il ne stocke pas d\u0027enregistrements locaux."
            }
          ]
        },
        {
          "Title": "Conception d\u0027une zone : conventions de nommage et structure des fichiers",
          "Summary": "Bonnes pratiques pour nommer les zones et les enregistrements, organisation et syntaxe des fichiers de zone (SOA, NS, A, AAAA, CNAME, MX, TXT).",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Conna\u00EEtre les contraintes syntaxiques et s\u00E9mantiques des noms DNS (longueur, caract\u00E8res, casse, points, trailing dot).",
            "Appliquer des conventions de nommage coh\u00E9rentes pour les zones et les enregistrements (h\u00F4tes, services, alias, zones de reverse).",
            "Concevoir et organiser un fichier de zone lisible et maintenable (directives $TTL, $ORIGIN, commentaires, modularit\u00E9).",
            "R\u00E9diger correctement les enregistrements SOA, NS, A, AAAA, CNAME, MX et TXT en respectant les bonnes pratiques et restrictions.",
            "Pr\u00E9parer des zones primaires et secondaires en tenant compte de la gestion des transferts de zone et du versionning (serial).",
            "Identifier et corriger des erreurs courantes dans la structure des fichiers de zone."
          ],
          "Content": "Introduction et r\u00F4le d\u0027une zone DNS\r\nUne zone DNS est une portion de l\u0027espace de noms pour laquelle un serveur DNS est autoritaire. Une zone contient des enregistrements (RR) qui font correspondre des noms \u00E0 des donn\u00E9es (adresses IP, serveurs de mail, alias, etc.). La conception d\u0027une zone doit viser la lisibilit\u00E9, la maintenabilit\u00E9 et la conformit\u00E9 aux RFC pour \u00E9viter des erreurs de r\u00E9solution ou de d\u00E9l\u00E9gation.\r\n\r\nConventions de nommage des domaines et des labels\r\nR\u00E8gles syntaxiques essentielles :\n- Un label (segment entre deux points) peut contenir lettres (a-z), chiffres (0-9) et tirets (-). Il ne peut pas commencer ni terminer par un tiret.\n- Longueur maximale d\u0027un label : 63 octets. Longueur totale d\u0027un nom qualifi\u00E9 complet (FQDN) : 255 octets maximum (y compris les points et l\u0027octet nul final).\n- Le DNS n\u0027est pas sensible \u00E0 la casse : \u0022WWW.EXEMPLE.COM.\u0022 \u00E9quivaut \u00E0 \u0022www.exemple.com.\u0022. La pratique est d\u0027utiliser des minuscules pour la coh\u00E9rence.\n- Le trailing dot (point final) indique un nom absolu (FQDN). Sans trailing dot, le nom relatif est compl\u00E9t\u00E9 par la directive $ORIGIN ou le nom de la zone.\n- Le caract\u00E8re underscore (_) est valide dans le DNS et couramment utilis\u00E9 pour les enregistrements de service (SRV) et certaines conventions (_dmarc, _dmarc.domain.tld). Toutefois, il n\u0027est pas recommand\u00E9 pour les noms d\u0027h\u00F4tes classiques soumis aux r\u00E8gles historiques des RFC sur les hostnames.\nBonnes pratiques :\n- Utiliser des noms courts, descriptifs et coh\u00E9rents (ex. www, mail, ldap, ns1).\n- \u00C9viter d\u0027utiliser des fonctions internes ou des informations temporelles dans le nom (ex. build-1234).\n- Documenter les conventions (pr\u00E9fixes pour services, suffixes pour clusters, etc.).\r\n\r\nNoms de zone et zones de reverse\r\nConventions pour les noms de zone :\n- Une zone doit porter le nom du domaine qu\u0027elle contient, p.ex. exemple.com.\n- Pour les plages d\u0027adresses IPv4, la zone de reverse utilise in-addr.arpa, ex. 192.0.2.in-addr.arpa pour 192.0.2.0/24.\n- Pour IPv6, la zone inverse utilise ip6.arpa et est bas\u00E9e sur les nibbles hexad\u00E9cimaux (ex. 0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa pour 2001:db8::/32 prefixes). Concevoir des zones IPv6 demande souvent une granularit\u00E9 adapt\u00E9e \u00E0 la d\u00E9l\u00E9gation (64 vs 48 bits).\nBonnes pratiques :\n- D\u00E9l\u00E9guer les reverse zones aux op\u00E9rateurs qui g\u00E8rent l\u0027espace IP quand c\u0027est possible.\n- Maintenir une convention claire pour nommer les zones internes vs publiques (ex. corp.exemple.com pour interne).\r\n\r\nAnatomie d\u0027un fichier de zone (directives et organisation)\r\n\u00C9l\u00E9ments structurants d\u0027un fichier de zone BIND :\n- Commentaires : d\u00E9butent par \u0022;\u0022 et peuvent expliquer des sections.\n- Directives communes :\n  - $ORIGIN : d\u00E9finit le suffixe utilis\u00E9 pour les noms relatifs.\n  - $TTL : valeur TTL par d\u00E9faut pour les enregistrements qui n\u0027ont pas de TTL explicite.\n  - $INCLUDE : pour inclure d\u0027autres fichiers (utile pour modulariser par sous-zones ou pour s\u00E9parer records dynamiques).\n- Ordre recommand\u00E9 : en-t\u00EAte (commentaires, $TTL, $ORIGIN), enregistrement SOA, enregistrements NS, autres enregistrements (A/AAAA, MX, etc.).\n- Utiliser des sections et des commentaires pour s\u00E9parer les types d\u0027enregistrements (ex. \u0022; Enregistrements web\u0022), et maintenir un historique des modifications (journal des changements dans les commentaires ou via contr\u00F4le de version hors zone).\nExemple minimal d\u0027ent\u00EAte :\n$ORIGIN exemple.com.\n$TTL 3600\n@ IN SOA ns1.exemple.com. admin.exemple.com. (\n  2025101901 ; serial YYYYMMDDnn\n  3600       ; refresh\n  900        ; retry\n  1209600    ; expire\n  3600       ; minimum/negative caching\n)\r\n\r\nLe SOA (Start of Authority) : champs et bonnes pratiques\r\nLe SOA est obligatoire et doit \u00EAtre unique dans la zone. Champs importants :\n- MNAME : nom du serveur de noms primaire (serveur ma\u00EEtre) pour la zone.\n- RNAME : adresse email de l\u0027administrateur, avec le @ remplac\u00E9 par un point (ex. admin.exemple.com.).\n- Serial : num\u00E9ro de version de la zone. Pratique courante : use le format YYYYMMDDnn ou un compteur incr\u00E9mental. N\u00E9cessaire pour que les serveurs secondaires d\u00E9tectent les changements (IXFR/AXFR).\n- Refresh : intervalle (en secondes) pour lequel les secondaires v\u00E9rifient les changements.\n- Retry : d\u00E9lai avant une nouvelle tentative en cas d\u0027\u00E9chec.\n- Expire : temps apr\u00E8s lequel les secondaires consid\u00E8rent la zone invalide si pas de contact.\n- Minimum : utilis\u00E9 pr\u00E9c\u00E9demment comme TTL n\u00E9gatif; maintenant pour le cache n\u00E9gatif (TTL des r\u00E9ponses NXDOMAIN).\nBonnes pratiques :\n- Utiliser un serial lisible (YYYYMMDDnn) pour faciliter le debugging et la tra\u00E7abilit\u00E9.\n- Incr\u00E9menter le serial \u00E0 chaque modification valide de la zone.\n- V\u00E9rifier que MNAME pointe vers un nom r\u00E9solvable et coh\u00E9rent.\n- Placer le SOA au d\u00E9but du fichier et documenter les valeurs avec des commentaires.\r\n\r\nEnregistrements NS\r\nBut : indiquer les serveurs de noms autoritaires pour la zone.\nSyntaxe : nom TTL CLASS NS server.\nPoints importants :\n- Les enregistrements NS d\u0027une zone doivent \u00EAtre pr\u00E9sents dans la zone parent (d\u00E9l\u00E9gation) et id\u00E9alement avoir des enregistrements glue si le serveur est dans la zone (ex. ns1.exemple.com dans zone exemple.com doit avoir A/AAAA glue dans la zone parent).\n- Mettre plusieurs NS pour la redondance (au moins 2, g\u00E9odistribu\u00E9s si possible).\n- Les serveurs NS list\u00E9s doivent \u00EAtre coh\u00E9rents entre la zone et l\u0027enregistrement WHOIS/registrar.\nExemple :\n@    IN NS ns1.exemple.com.\n@    IN NS ns2.exemple.com.\r\n\r\nEnregistrements A et AAAA\r\nBut : associer un nom d\u0027h\u00F4te \u00E0 une adresse IPv4 (A) ou IPv6 (AAAA).\nSyntaxe : name TTL CLASS A ip4-address\nExemples :\nwww    IN A  198.51.100.42\nwww    IN AAAA 2001:db8::42\nNotes et bonnes pratiques :\n- Pr\u00E9f\u00E9rer des enregistrements explicites plut\u00F4t que de surcharger des alias.\n- Garder la coh\u00E9rence entre l\u0027enregistrement d\u0027un serveur (mail/web) et ses enregistrements PTR dans la zone inverse (pour mail surtout).\n- Eviter de pointer des enregistrements MX vers une adresse IP : un MX doit pointer vers un nom de domaine qui a lui-m\u00EAme un A/AAAA.\r\n\r\nEnregistrement CNAME (alias) \u2014 contraintes\r\nLe CNAME cr\u00E9e un alias qui redirige toutes les requ\u00EAtes du nom cible vers un autre nom canonique.\nContraintes importantes :\n- Un enregistrement CNAME pour un nom ne doit pas coexister avec d\u0027autres enregistrements (A, AAAA, MX, NS, SOA) pour ce m\u00EAme nom.\n- Le CNAME doit pointer vers un nom canonique (id\u00E9alement FQDN avec trailing dot). Il peut pointer vers un autre CNAME (cha\u00EEne), mais cela peut nuire aux performances et \u00E0 la logique.\nExemple :\nftp    IN CNAME www.exemple.com.\nBonnes pratiques :\n- N\u0027utiliser CNAME que lorsque c\u0027est n\u00E9cessaire. Pr\u00E9f\u00E9rer g\u00E9rer les A/AAAA directement pour les services critiques.\n- Ne pas utiliser CNAMEs pour les enregistrements qui doivent coexister (ex. la racine @ ne doit g\u00E9n\u00E9ralement pas \u00EAtre CNAME).\r\n\r\nEnregistrements MX et r\u00E8gles pour le mail\r\nMX indique le serveur responsable de la r\u00E9ception du mail pour le domaine.\nSyntaxe : name TTL CLASS MX priority mailserver.\nPoints cl\u00E9s :\n- MX ne doit pas pointer directement vers une adresse IP ; il doit pointer vers un nom qui poss\u00E8de A/AAAA.\n- Priorit\u00E9 (plus petit = priorit\u00E9 plus \u00E9lev\u00E9e). Plusieurs MX pour redondance.\n- Le serveur de mail doit id\u00E9alement avoir un enregistrement PTR correspondant (reverse lookup) pour une meilleure d\u00E9livrabilit\u00E9.\nExemple :\n@    IN MX 10 mail.exemple.com.\nmail IN A  198.51.100.12\r\n\r\nEnregistrements TXT (SPF, DKIM, DMARC) et bonnes pratiques\r\nLes enregistrements TXT permettent de stocker du texte (politiques SPF, cl\u00E9s DKIM, DMARC, v\u00E9rifications diverses).\nPoints pratiques :\n- Les enregistrements SPF historiques sont maintenant souvent mis en TXT (ex. \u0022v=spf1 mx -all\u0022).\n- DKIM utilise des s\u00E9lecteurs dans le nom (ex. selector._domainkey.exemple.com TXT \u0022v=DKIM1; k=rsa; p=...\u0022).\n- DMARC utilise _dmarc.domain.tld TXT.\n- Les cha\u00EEnes longues peuvent \u00EAtre entre guillemets et s\u00E9par\u00E9es en plusieurs segments adjacents.\n- Documenter la signification des TXT dans les commentaires et surveiller la longueur maximale (certains syst\u00E8mes limitent la longueur d\u0027une cha\u00EEne).\r\n\r\nOrganisation des fichiers et modularit\u00E9 (inclusion, separation primaire/secondaire)\r\nOrganisation recommand\u00E9e :\n- Utiliser le contr\u00F4le de version (Git) pour les fichiers de zone afin de suivre l\u0027historique et faciliter les rollbacks.\n- S\u00E9parer les \u00E9l\u00E9ments dynamiques (ex. enregistrements cr\u00E9\u00E9s par DHCP) et statiques via $INCLUDE ou par fichiers distincts g\u00E9n\u00E9r\u00E9s automatiquement.\n- Pour une zone primaire (master), conserver le fichier ma\u00EEtre soigneusement comment\u00E9. Les serveurs secondaires (slaves) re\u00E7oivent la zone via AXFR/IXFR depuis le primaire ; il n\u0027est pas n\u00E9cessaire de stocker manuellement le m\u00EAme fichier sur le secondaire.\n- Mettre en place des ACL et TSIG pour s\u00E9curiser les transferts de zone et \u00E9viter les AXFR non autoris\u00E9s.\n- Garder les noms des fichiers de zone coh\u00E9rents (ex. db.exemple.com, db.192.0.2) et documenter l\u0027emplacement dans la configuration du serveur (named.conf).\nBonnes pratiques pour le serial :\n- Utiliser une convention lisible (YYYYMMDDnn). Lors de modifications multiples la m\u00EAme journ\u00E9e, incr\u00E9menter nn.\n- Automatiser l\u0027incr\u00E9mentation via des scripts ou via un outil de gestion DNS.\r\n\r\nErreurs courantes et v\u00E9rifications avant d\u00E9ploiement\r\nErreurs fr\u00E9quentes :\n- Oublier le trailing dot sur les FQDN, entra\u00EEnant la concat\u00E9nation avec $ORIGIN.\n- Avoir un CNAME coexistant avec un MX ou un NS pour le m\u00EAme nom.\n- Serial non incr\u00E9ment\u00E9, emp\u00EAchant les secondaires de r\u00E9cup\u00E9rer les mises \u00E0 jour.\n- NS listant des serveurs sans glue records si ceux-ci sont dans la zone parent.\n- MX pointant vers une adresse IP au lieu d\u0027un nom.\nChecks \u00E0 effectuer avant d\u00E9ploiement :\n- Syntaxe via named-checkzone (BIND) ou outil \u00E9quivalent.\n- V\u00E9rifier la coh\u00E9rence des A/AAAA et des PTR pour les serveurs mail.\n- V\u00E9rifier les transferts de zone et la configuration TSIG, et tester la r\u00E9solution depuis serveurs externes.\n- S\u0027assurer que le serial a \u00E9t\u00E9 mis \u00E0 jour.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 : Identifier les erreurs dans le fragment de zone suivant et proposer une version corrig\u00E9e.\n$ORIGIN exemple.com.\n$TTL 3600\n@ IN SOA ns1.exemple.com. admin@exemple.com. (\n  1 ; serial\n  3600 ; refresh\n  600 ; retry\n  1209600 ; expire\n  3600 ; minimum\n)\n@ IN NS ns1.exemple.com.\n@ IN NS ns2.exemple.com.\nwww IN CNAME exemple.com.\n@ IN CNAME www.exemple.com.\nmail IN A 203.0.113.5\n@ IN MX 10 203.0.113.5",
              "Answer": "Erreurs identifi\u00E9es :\n- Dans le SOA, l\u0027adresse RNAME utilise un @ ; en DNS il faut remplacer @ par un point (admin.exemple.com.).\n- Le serial vaut 1 (peu informatif). Mieux utiliser YYYYMMDDnn.\n- Un enregistrement CNAME (@) coexiste avec d\u0027autres enregistrements (SOA, NS, MX) : interdit. La racine ne doit pas \u00EAtre CNAME.\n- Le MX pointe vers une adresse IP (203.0.113.5) : il doit pointer vers un nom.\n- Le CNAME www -\u003E exemple.com. et ensuite la racine @ est CNAME vers www cr\u00E9e une boucle/ conflit.\nVersion corrig\u00E9e (extrait) :\n$ORIGIN exemple.com.\n$TTL 3600\n@ IN SOA ns1.exemple.com. admin.exemple.com. (\n  2025101901 ; serial\n  3600\n  600\n  1209600\n  3600\n)\n@ IN NS ns1.exemple.com.\n@ IN NS ns2.exemple.com.\nwww IN A 203.0.113.5\nmail IN A 203.0.113.5\n@ IN MX 10 mail.exemple.com.",
              "Explanation": "Explication :\n- RNAME doit \u00EAtre admin.exemple.com. (point au lieu de @). Le serial lisible facilite le suivi. \n- On remplace le CNAME probl\u00E9matique par un A pour www et on fait pointer le MX vers mail.exemple.com (un nom), qui a un A. La racine (@) ne peut pas \u00EAtre CNAME car elle contient aussi SOA et NS."
            },
            {
              "Instruction": "Exercice 2 : \u00C9crire le SOA et les enregistrements NS/A/AAAA minimaux pour une zone exemple.net avec un primaire ns1.exemple.net (IPv4 198.51.100.10) et un secondaire ns2.exemple.net (IPv6 2001:db8::10). Utilisez un serial au format YYYYMMDDnn.",
              "Answer": "$ORIGIN exemple.net.\n$TTL 3600\n@ IN SOA ns1.exemple.net. hostmaster.exemple.net. (\n  2025101901 ; serial\n  3600       ; refresh\n  600        ; retry\n  1209600    ; expire\n  3600       ; minimum\n)\n@    IN NS  ns1.exemple.net.\n@    IN NS  ns2.exemple.net.\nns1  IN A    198.51.100.10\nns2  IN AAAA 2001:db8::10",
              "Explanation": "Explication :\n- SOA indique ns1 comme primaire et hostmaster comme contact (hostmaster.exemple.net.).\n- Deux NS sont d\u00E9clar\u00E9s pour redondance.\n- Les adresses (A et AAAA) fournissent les enregistrements glue n\u00E9cessaires si les NS sont dans la m\u00EAme zone."
            },
            {
              "Instruction": "Exercice 3 : R\u00E9diger les enregistrements n\u00E9cessaires pour : un serveur web accessible par www.exemple.org (IPv4 203.0.113.20, IPv6 2001:db8::20), un alias shop.exemple.org pointant vers www, et un enregistrement TXT pour SPF autorisant les serveurs de mail list\u00E9s par MX. Le serveur de mail est mail.exemple.org (IPv4 203.0.113.30).",
              "Answer": "www    IN A    203.0.113.20\nwww    IN AAAA 2001:db8::20\nshop   IN CNAME www.exemple.org.\nmail   IN A    203.0.113.30\n@      IN MX 10 mail.exemple.org.\n@      IN TXT \u0022v=spf1 mx -all\u0022",
              "Explanation": "Explication :\n- www a \u00E0 la fois A et AAAA pour IPv4 et IPv6.\n- shop est un alias CNAME pointant vers le FQDN www.exemple.org. (avec trailing dot pour \u00E9viter concat\u00E9nation).\n- MX pointe vers mail.exemple.org qui a un A (bonne pratique : MX pointe vers un nom, pas une IP).\n- Le TXT d\u00E9finit la politique SPF en autorisant le(s) serveur(s) list\u00E9s par les MX (directive \u0027mx\u0027) et en refusant les autres (-all)."
            },
            {
              "Instruction": "Exercice 4 : Quelle est la bonne fa\u00E7on de stocker des enregistrements DKIM long (cl\u00E9 publique) dans une zone DNS ? Indiquez un exemple pour un s\u00E9lecteur \u0027s1\u0027 et domaine example.com.",
              "Answer": "s1._domainkey.example.com. IN TXT \u0022v=DKIM1; k=rsa; p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A...rest_of_base64_key...\u0022\n(Remarque : la cha\u00EEne p=... peut \u00EAtre d\u00E9coup\u00E9e en plusieurs guillemets adjacents si n\u00E9cessaire.)",
              "Explanation": "Explication :\n- DKIM utilise un sous-nom de la forme selector._domainkey.domain.\n- Le contenu TXT contient la version, le type de cl\u00E9 et la cl\u00E9 publique encod\u00E9e en base64.\n- Si la cl\u00E9 est tr\u00E8s longue, elle peut \u00EAtre \u00E9crite comme plusieurs cha\u00EEnes entre guillemets successives dans le m\u00EAme enregistrement TXT (BIND les concat\u00E8ne)."
            }
          ]
        },
        {
          "Title": "Configuration d\u0027un serveur primaire (Master)",
          "Summary": "Installation et configuration d\u0027un serveur primaire, cr\u00E9ation et chargement d\u0027une zone ma\u00EEtre, r\u00E9glages SOA et TTL, sauvegarde et contr\u00F4le de version des fichiers de zone.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Installer et configurer un serveur DNS primaire (master) sous Linux (ex. BIND9).",
            "Cr\u00E9er et r\u00E9diger un fichier de zone ma\u00EEtre correct et conforme aux bonnes pratiques.",
            "Charger, recharger et v\u00E9rifier des zones sur le serveur primaire (rndc, named-checkconf, named-checkzone, journalisation).",
            "Comprendre et r\u00E9gler les champs SOA (serial, refresh, retry, expire, minimum) et la valeur TTL globale et par-enregistrement.",
            "Mettre en place une strat\u00E9gie de sauvegarde et de contr\u00F4le de version pour les fichiers de zone et \u00E9viter les probl\u00E8mes li\u00E9s aux mises \u00E0 jour dynamiques.",
            "Appliquer des bonnes pratiques de s\u00E9curit\u00E9 et d\u2019exploitation pour un serveur DNS primaire."
          ],
          "Content": "Installation du serveur DNS (BIND9)\r\nChoisissez une impl\u00E9mentation (BIND est la plus r\u00E9pandue). Sur Debian/Ubuntu : sudo apt update \u0026\u0026 sudo apt install bind9 bind9utils bind9-doc. Sur RHEL/CentOS : sudo yum install bind bind-utils. V\u00E9rifiez que le service d\u00E9marre automatiquement et est actif : systemctl enable --now bind9 (ou named). Contr\u00F4lez les logs (journalctl -u bind9 ou /var/log/syslog). Assurez-vous que le pare-feu autorise le port 53 TCP/UDP et que le serveur a une adresse IP fixe.\r\n\r\nConfiguration initiale du serveur primaire\r\nFichiers cl\u00E9s (chemins habituels pour BIND) : /etc/bind/named.conf, /etc/bind/named.conf.options, /etc/bind/named.conf.local et r\u00E9pertoires /etc/bind/zones/ ou /var/named/. D\u00E9clarez des ACL si n\u00E9cessaire et limitez les transferts de zone (allow-transfer) aux serveurs secondaires. Exemple minimal dans named.conf.local : zone \u0022example.com\u0022 { type master; file \u0022/etc/bind/zones/db.example.com\u0022; allow-transfer { 192.0.2.10; }; }; Apr\u00E8s modification, v\u00E9rifiez la configuration : named-checkconf. Red\u00E9marrez ou rechargez le service avec systemctl reload bind9 ou rndc reload.\r\n\r\nCr\u00E9ation d\u0027un fichier de zone ma\u00EEtre\r\nCr\u00E9ez le fichier de zone dans le r\u00E9pertoire configur\u00E9 (/etc/bind/zones/db.example.com). Respectez la syntaxe des fichiers de zone : en-t\u00EAte SOA suivi des enregistrements NS, A, AAAA, CNAME, MX, TXT, etc. Exemple minimal : $TTL 3600\n@ IN SOA ns1.example.com. admin.example.com. (\n  2025101901 ; serial YYYYMMDDNN\n  7200       ; refresh\n  1800       ; retry\n  1209600    ; expire\n  3600       ; minimum TTL\n)\n@       IN NS   ns1.example.com.\nns1     IN A    198.51.100.5\nwww     IN A    198.51.100.10\nmail    IN MX 10 mail.example.com.\nmail    IN A    198.51.100.20\nApr\u00E8s cr\u00E9ation, v\u00E9rifiez la syntaxe et la coh\u00E9rence : named-checkzone example.com /etc/bind/zones/db.example.com.\r\n\r\nChargement et v\u00E9rification de la zone\r\nApr\u00E8s avoir d\u00E9clar\u00E9 la zone et plac\u00E9 le fichier, rechargez la configuration : rndc reload example.com (ou rndc reload pour tout). Utilisez named-checkconf et named-checkzone pour d\u00E9tecter erreurs. V\u00E9rifiez que la zone est charg\u00E9e : rndc status ou rndc dumpdb -zones, et consultez les logs. Testez depuis un client : dig @\u003Cserveur\u003E example.com SOA ; dig @\u003Cserveur\u003E www.example.com A ; dig \u002Bshort @\u003Cserveur\u003E example.com AXFR (AXFR doit \u00EAtre restreint). Pour les mises \u00E0 jour en production, pr\u00E9f\u00E9rez reload plut\u00F4t que restart pour \u00E9viter downtime.\r\n\r\nR\u00E9glages SOA et TTL\r\nLe SOA comporte : 1) MNAME : nom du serveur ma\u00EEtre (ex. ns1.example.com.). 2) RNAME : adresse e-mail du responsable (le point remplace @, ex. admin.example.com.). 3) SERIAL : num\u00E9ro de version de la zone, doit augmenter \u00E0 chaque modification (format recommand\u00E9 : YYYYMMDDNN). 4) REFRESH : intervalle pour secondaires pour v\u00E9rifier la zone (ex. 7200s). 5) RETRY : d\u00E9lai entre tentatives si refresh \u00E9choue (ex. 1800s). 6) EXPIRE : dur\u00E9e apr\u00E8s laquelle le secondaire consid\u00E8re la zone p\u00E9rim\u00E9e si pas de contact (ex. 1209600s). 7) MINIMUM : valeur TTL par d\u00E9faut pour enregistrements n\u00E9gatifs (souvent 3600). $TTL au d\u00E9but du fichier fixe la TTL par d\u00E9faut pour tous les enregistrements (peut \u00EAtre surcharg\u00E9 par TTL explicite sur un enregistrement). Adoptez un compromis : TTL courts facilitent changements rapides mais augmentent la charge et la latence DNS. Exemple d\u2019incr\u00E9ment de SERIAL : 2025101901 -\u003E 2025101902.\r\n\r\nSauvegarde et contr\u00F4le de version des fichiers de zone\r\nConservez les fichiers de zone dans un d\u00E9p\u00F4t git priv\u00E9 (ex. /srv/git/zones.git) pour tracer les changements textuels. Processus recommand\u00E9 : 1) rndc freeze zone (si vous utilisez dynamic updates/JNL) ; 2) modifier le fichier de zone localement ; 3) named-checkzone pour valider ; 4) git add/commit/push avec message clair ; 5) rndc thaw zone ; 6) rndc reload zone. Si vous n\u0027utilisez pas dynamic updates, le freeze/thaw n\u0027est pas strictement n\u00E9cessaire mais reste s\u00FBr pour \u00E9viter conflits. Faites des sauvegardes r\u00E9guli\u00E8res hors site (archives tar.gz, sauvegarde chiffr\u00E9e) et conservez les journaux de transactions (journal files .jnl pour BIND si utilis\u00E9). Automatisez les exports et les backups (cron, Ansible, pipelines CI) et r\u00E9visez les access-controls pour que seuls les administrateurs puissent pousser des changements. \u00C9vitez de versionner des secrets (clefs TSIG, scripts contenant mots de passe) ; stockez-les dans un coffre (vault).\r\n\r\nBonnes pratiques et s\u00E9curit\u00E9 op\u00E9rationnelle\r\nLimitez allow-transfer aux IPs des secondaires et utilisez TSIG pour authentifier les transferts. Restreignez les requ\u00EAtes r\u00E9cursives aux r\u00E9seaux internes (options { allow-recursion { localnets; }; } ). Activez les logs pour anomalies et surveillez les taux de requ\u00EAtes. Appliquez le principe du moindre privil\u00E8ge sur les fichiers (propri\u00E9taire bind:bind, permissions 640 ou 600) et mettez \u00E0 jour le logiciel r\u00E9guli\u00E8rement. Documentez les conventions de nommage des s\u00E9ries (serial), les proc\u00E9dures de d\u00E9ploiement et de rollback.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Donnez un exemple de fichier de zone ma\u00EEtre pour example.org contenant : SOA, NS, un A pour ns1, un A pour www et un MX pour mail. Utilisez un TTL par d\u00E9faut de 3600 et un serial selon le format YYYYMMDDNN (supposons la date 2025-10-19 et premi\u00E8re r\u00E9vision).",
              "Answer": "$TTL 3600\n@ IN SOA ns1.example.org. admin.example.org. (\n  2025101901 ; serial YYYYMMDDNN\n  7200       ; refresh\n  1800       ; retry\n  1209600    ; expire\n  3600       ; minimum\n)\n@       IN NS   ns1.example.org.\nns1     IN A    198.51.100.5\nwww     IN A    198.51.100.10\nmail    IN MX 10 mail.example.org.\nmail    IN A    198.51.100.20",
              "Explanation": "Le fichier commence par $TTL 3600. Le SOA contient MNAME (ns1), RNAME (admin avec . rempla\u00E7ant @), et un serial formatt\u00E9 YYYYMMDDNN. Ensuite on d\u00E9clare le NS, puis les enregistrements A et MX. Le MX pointe vers un nom qui doit avoir aussi un enregistrement A."
            },
            {
              "Instruction": "Vous avez modifi\u00E9 un fichier de zone sur le serveur primaire. D\u00E9crivez la s\u00E9quence de commandes s\u00FBres pour valider et d\u00E9ployer ce changement avec BIND, en \u00E9vitant les conflits avec des mises \u00E0 jour dynamiques.",
              "Answer": "1) named-checkzone example.com /etc/bind/zones/db.example.com\n2) rndc freeze example.com\n3) remplacer le fichier de zone (ou \u00E9diter)\n4) named-checkzone example.com /etc/bind/zones/db.example.com\n5) rndc thaw example.com\n6) rndc reload example.com",
              "Explanation": "named-checkzone valide la syntaxe avant et apr\u00E8s modification. rndc freeze emp\u00EAche que BIND applique des mises \u00E0 jour dynamiques pendant la modification (utile si la zone a un journal .jnl). Apr\u00E8s avoir valid\u00E9 le fichier, thaw remet la zone en production et reload force la relecture si n\u00E9cessaire."
            },
            {
              "Instruction": "Interpr\u00E9tez ces valeurs SOA et dites ce qu\u0027elles signifient : SERIAL=2025101903, REFRESH=10800, RETRY=3600, EXPIRE=604800, MINIMUM=3600. Que se passe-t-il si le secondary n\u0027arrive pas \u00E0 contacter le primary pendant une p\u00E9riode sup\u00E9rieure \u00E0 EXPIRE ?",
              "Answer": "SERIAL 2025101903 indique la 3e modification du 19 octobre 2025. REFRESH 10800s (3h) : intervalle entre v\u00E9rifications du secondary. RETRY 3600s (1h) : d\u00E9lai entre tentatives si refresh \u00E9choue. EXPIRE 604800s (7 jours) : apr\u00E8s cette dur\u00E9e sans r\u00E9ussite, le secondary consid\u00E8re la zone p\u00E9rim\u00E9e et cesse de r\u00E9pondre pour cette zone. MINIMUM 3600s : TTL par d\u00E9faut pour r\u00E9ponses n\u00E9gatives. Si le secondary ne contacte pas le primary pendant plus de 7 jours, il invalide la zone (expire) et ne fournira plus d\u2019enregistrements autoritatifs jusqu\u2019\u00E0 r\u00E9cup\u00E9ration.",
              "Explanation": "Le serial indique la version; les intervals contr\u00F4lent la synchronisation. L\u0027expire garantit qu\u0027un secondary ne sert pas des donn\u00E9es potentiellement obsol\u00E8tes au-del\u00E0 d\u0027une dur\u00E9e choisie."
            },
            {
              "Instruction": "Proposez une politique simple de sauvegarde et de contr\u00F4le de version pour les fichiers de zone (outillage minimal, fr\u00E9quence, s\u00E9curit\u00E9).",
              "Answer": "Cr\u00E9er un d\u00E9p\u00F4t git priv\u00E9 contenant les fichiers de zone (push vers serveur priv\u00E9 ou d\u00E9p\u00F4t h\u00E9berg\u00E9 s\u00E9curis\u00E9). Valider chaque changement avec message explicite et num\u00E9ro de ticket. Automatiser une sauvegarde quotidienne compress\u00E9e et chiffr\u00E9e des fichiers /etc/bind/zones et des journaux BIND vers un stockage hors site (S3 chiffr\u00E9 ou serveur de backup). Conserver historiques au moins 30 jours et snapshots mensuels sur 12 mois. Restreindre acc\u00E8s au d\u00E9p\u00F4t et aux backups via ACL et utiliser un coffre pour stocker clefs TSIG. Mettre en place hooks CI pour ex\u00E9cuter named-checkzone avant merge. Tester p\u00E9riodiquement la restauration.",
              "Explanation": "La combinaison git\u002Bbackups hors site permet tra\u00E7abilit\u00E9 et r\u00E9silience. Chiffrement et contr\u00F4le d\u0027acc\u00E8s \u00E9vitent fuite de configuration ou cl\u00E9s. La validation automatique r\u00E9duit risques d\u2019erreurs humaines."
            }
          ]
        },
        {
          "Title": "Configuration d\u0027un serveur secondaire (Slave)",
          "Summary": "Mise en place d\u0027un serveur secondaire, configuration des transferts de zone, v\u00E9rification de la synchronisation et r\u00F4les redondance et r\u00E9partition de charge.",
          "EstimatedMinutes": 75,
          "LearningObjectives": [
            "Comprendre le r\u00F4le et les pr\u00E9requis d\u0027un serveur DNS secondaire (slave).",
            "Savoir configurer une zone en secondaire sur un serveur (ex. BIND) et d\u00E9clarer le(s) master(s).",
            "Mettre en place et s\u00E9curiser les transferts de zone (AXFR/IXFR) et la notification (NOTIFY/TSIG).",
            "V\u00E9rifier la synchronisation et diagnostiquer les probl\u00E8mes courants de r\u00E9plication de zone.",
            "Expliquer comment les serveurs secondaires contribuent \u00E0 la redondance et \u00E0 la r\u00E9partition de charge."
          ],
          "Content": "Contexte et r\u00F4le d\u0027un serveur secondaire\r\nUn serveur DNS secondaire contient une copie en lecture seule d\u0027une zone g\u00E9r\u00E9e par un serveur ma\u00EEtre. Il sert \u00E0 assurer la disponibilit\u00E9 (redondance), r\u00E9partir les requ\u00EAtes et all\u00E9ger la charge du ma\u00EEtre. Pr\u00E9requis : avoir un serveur DNS install\u00E9 et accessible, conna\u00EEtre l\u0027adresse IP du master, disposer des droits de transfert configur\u00E9s sur le master, et ouvrir le port 53 (UDP et TCP) entre les machines concern\u00E9es.\r\n\r\nMise en place d\u0027un serveur secondaire\r\n\u00C9tapes g\u00E9n\u00E9rales : 1) Installer un service DNS (ex. BIND9). 2) Cr\u00E9er la configuration de zone en type \u0027slave\u0027 en indiquant un fichier local pour stocker la copie et l\u0027adresse IP du master. Exemple (BIND named.conf) :\nzone \u0022example.com\u0022 {\n  type slave;\n  file \u0022slaves/example.com.db\u0022;\n  masters { 198.51.100.10; };\n};\n3) V\u00E9rifier les permissions du r\u00E9pertoire \u0027slaves\u0027, et autoriser le service DNS \u00E0 \u00E9crire le fichier. 4) Ouvrir/configurer le firewall pour autoriser le trafic DNS (port 53 TCP/UDP) entre master et slave. 5) D\u00E9marrer/relancer le service DNS et surveiller les logs pour la premi\u00E8re r\u00E9cup\u00E9ration de la zone.\r\n\r\nConfiguration des transferts de zone (AXFR/IXFR) et notifications\r\nTransferts : AXFR = transfert complet, IXFR = transfert incr\u00E9mental (plus efficace si le master le supporte). Sur le master, il faut autoriser les transferts vers l\u0027IP du slave via la directive \u0027allow-transfer\u0027 et activer \u0027notify\u0027 pour pr\u00E9venir les esclaves apr\u00E8s une mise \u00E0 jour. Exemple master (BIND) :\nkey \u0022transfer-key\u0022 {\n  algorithm HMAC-SHA256;\n  secret \u0022BASE64_ENCODED_SECRET==\u0022;\n};\nzone \u0022example.com\u0022 {\n  type master;\n  file \u0022db.example.com\u0022;\n  allow-transfer { 203.0.113.5; };\n  notify yes;\n};\nS\u00E9curisation :\n- Limiter allow-transfer aux adresses IP des slaves. \n- Utiliser TSIG pour authentifier les transferts et les notifications. Dans BIND, on d\u00E9finit la cl\u00E9 (\u0027key\u0027) et on l\u0027associe aux masters sur le slave et au zone sur le master.\n- Pr\u00E9f\u00E9rer IXFR quand possible pour r\u00E9duire la bande passante et acc\u00E9l\u00E9rer la synchronisation.\r\n\r\nV\u00E9rification de la synchronisation\r\nContr\u00F4les courants :\n- V\u00E9rifier le SOA et le serial sur master et slave : \u0027dig @master example.com SOA \u002Bshort\u0027 et \u0027dig @slave example.com SOA \u002Bshort\u0027. Le num\u00E9ro de serial doit \u00EAtre identique apr\u00E8s synchronisation.\n- Forcer et tester un transfert complet : \u0027dig @master example.com AXFR\u0027 (si autoris\u00E9) ou \u0027dig @slave example.com AXFR\u0027 pour voir la copie compl\u00E8te. \n- Examiner les fichiers produits sur le slave (ex. slaves/example.com.db) et les journaux du service DNS (syslog, journalctl) pour erreurs. \n- Utiliser \u0027rndc reload\u0027 ou \u0027rndc flush\u0027 si n\u00E9cessaire, et v\u00E9rifier la pr\u00E9sence de fichiers journal (.jnl) qui indiquent l\u0027usage d\u0027IXFR.\n- En cas d\u0027\u00E9chec, capturer le trafic (tcpdump ou tshark) sur le port 53 pour voir si la requ\u00EAte de transfert est envoy\u00E9e et si une r\u00E9ponse est re\u00E7ue.\r\n\r\nR\u00F4les : redondance et r\u00E9partition de charge\r\nRedondance : plusieurs serveurs NS (master \u002B un ou plusieurs slaves) augmentent la tol\u00E9rance aux pannes ; si le master est indisponible, les slaves continuent \u00E0 r\u00E9pondre aux clients. R\u00E9partition de charge : la pr\u00E9sence de plusieurs NS permet de distribuer les requ\u00EAtes DNS clients parmi diff\u00E9rents serveurs (round-robin DNS r\u00E9sout souvent vers plusieurs adresses NS), r\u00E9duisant la charge sur un seul point. Bonnes pratiques : d\u00E9clarer plusieurs NS dans la zone, g\u00E9o-r\u00E9partir les slaves si possible, et s\u0027assurer que chaque slave est synchronis\u00E9 r\u00E9guli\u00E8rement.\r\n\r\nS\u00E9curisation et bonnes pratiques\r\nPrincipes : limiter les transferts aux IPs n\u00E9cessaires, utiliser TSIG pour authentifier les transferts/notifications, activer DNSSEC pour garantir l\u0027int\u00E9grit\u00E9 des donn\u00E9es si possible, surveiller les logs et les m\u00E9triques de latence et d\u0027erreurs, automatiser les mises \u00E0 jour des serials (format date-based) pour \u00E9viter des erreurs manuelles, sauvegarder les fichiers de zone et les cl\u00E9s TSIG, et tester r\u00E9guli\u00E8rement la proc\u00E9dure de restauration et de synchronisation.\r\n\r\nD\u00E9pannage courant\r\nProbl\u00E8mes fr\u00E9quents et solutions :\n- Transfert refus\u00E9 : v\u00E9rifier allow-transfer sur le master, v\u00E9rifier les correspondances d\u0027IP et les r\u00E8gles de firewall. \n- Mismatch TSIG : v\u00E9rifier que la cl\u00E9, l\u0027algorithme et le secret sont identiques sur master et slave, et que la syntaxe est correcte. \n- Pas de notification : v\u00E9rifier \u0027notify yes\u0027 sur le master et que le master envoie des NOTIFY, v\u00E9rifier les logs. \n- Serial non mis \u00E0 jour : s\u0027assurer que le fichier de zone du master a bien \u00E9t\u00E9 modifi\u00E9 et que le serial a \u00E9t\u00E9 incr\u00E9ment\u00E9 selon la politique (p.ex. YYYYMMDDNN). \n- \u00C9chec d\u0027IXFR : le slave peut retomber sur AXFR si l\u0027historique d\u0027IXFR n\u0027est pas disponible ; v\u00E9rifier les fichiers .jnl et l\u0027espace disque. \nOutils utiles : dig, nslookup, rndc, tail/journalctl, tcpdump/tshark, nmap.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "\u00C9crire la configuration minimale d\u0027une zone en mode slave pour \u0027example.com\u0027 sur un serveur BIND dont le master a l\u0027IP 198.51.100.10 et le fichier local doit s\u0027appeler \u0027slaves/example.com.db\u0027.",
              "Answer": "zone \u0022example.com\u0022 {\n  type slave;\n  file \u0022slaves/example.com.db\u0022;\n  masters { 198.51.100.10; };\n};",
              "Explanation": "La directive \u0027type slave\u0027 indique que le serveur d\u00E9tient une copie en lecture seule. \u0027file\u0027 pr\u00E9cise le chemin local o\u00F9 sera stock\u00E9e la zone r\u00E9cup\u00E9r\u00E9e. \u0027masters\u0027 contient l\u0027IP du serveur ma\u00EEtre d\u0027o\u00F9 le slave r\u00E9cup\u00E9rera la zone."
            },
            {
              "Instruction": "Montrer comment configurer une cl\u00E9 TSIG nomm\u00E9e \u0027transfer-key\u0027 (algorithme HMAC-SHA256) et l\u0027utiliser sur le master pour autoriser un transfert uniquement depuis l\u0027IP 203.0.113.5.",
              "Answer": "key \u0022transfer-key\u0022 {\n  algorithm HMAC-SHA256;\n  secret \u0022BASE64_ENCODED_SECRET==\u0022;\n};\n\nzone \u0022example.com\u0022 {\n  type master;\n  file \u0022db.example.com\u0022;\n  allow-transfer { key \u0022transfer-key\u0022; 203.0.113.5; };\n  notify yes;\n};",
              "Explanation": "La cl\u00E9 TSIG est d\u00E9finie avec \u0027key\u0027 puis r\u00E9f\u00E9renc\u00E9e dans \u0027allow-transfer\u0027 pour restreindre et authentifier les transferts. Le m\u00EAme bloc \u0027key\u0027 doit \u00EAtre pr\u00E9sent et identique sur le slave pour qu\u0027il puisse utiliser la cl\u00E9 lors du transfert."
            },
            {
              "Instruction": "Quels sont les deux tests dig/commande essentiels pour v\u00E9rifier qu\u0027un slave est bien synchronis\u00E9 avec le master ? Donnez la commande et ce qu\u0027il faut comparer.",
              "Answer": "1) V\u00E9rifier le SOA et le serial : \u0027dig @master example.com SOA \u002Bshort\u0027 et \u0027dig @slave example.com SOA \u002Bshort\u0027 \u2014 comparer le num\u00E9ro de serial ;\n2) V\u00E9rifier le contenu de la zone (si autoris\u00E9) : \u0027dig @slave example.com AXFR\u0027 \u2014 s\u0027assurer que les enregistrements sont pr\u00E9sents et coh\u00E9rents.",
              "Explanation": "Le num\u00E9ro de serial dans l\u0027enregistrement SOA indique la version de la zone. Si master et slave ont le m\u00EAme serial, la synchronisation a eu lieu. Un AXFR complet permet de visualiser l\u0027int\u00E9gralit\u00E9 des enregistrements copi\u00E9s sur le slave."
            },
            {
              "Instruction": "Un transfert de zone \u00E9choue. Listez quatre v\u00E9rifications rapides pour identifier la cause la plus probable.",
              "Answer": "1) V\u00E9rifier les r\u00E8gles firewall : port 53 TCP/UDP ouvert entre master et slave ;\n2) V\u00E9rifier \u0027allow-transfer\u0027 sur le master pour l\u0027IP du slave ;\n3) V\u00E9rifier les cl\u00E9s TSIG et l\u0027algorithme si TSIG est utilis\u00E9 (m\u00EAme secret sur master et slave) ;\n4) Consulter les logs du master et du slave pour messages d\u0027erreur (permissions, refus, timeout).",
              "Explanation": "Les causes les plus fr\u00E9quentes sont les blocages r\u00E9seau (firewall), une configuration d\u0027autorisation incorrecte sur le master, des cl\u00E9s TSIG mal configur\u00E9es ou des erreurs visibles dans les logs. Les v\u00E9rifier permet d\u0027isoler rapidement la cat\u00E9gorie du probl\u00E8me."
            }
          ]
        },
        {
          "Title": "Transferts de zone : AXFR, IXFR et notifications",
          "Summary": "Explication des m\u00E9canismes AXFR/IXFR, fonctionnement des notifications (NOTIFY), optimisation des transferts et compatibilit\u00E9 entre serveurs.",
          "EstimatedMinutes": 30,
          "LearningObjectives": [],
          "Content": "Contenu default",
          "Exercises": []
        },
        {
          "Title": "S\u00E9curisation des transferts et authentification",
          "Summary": "Techniques pour s\u00E9curiser les transferts (TSIG, ACL, pare-feu), pr\u00E9vention des exfiltrations et bonnes pratiques pour limiter les risques li\u00E9s aux mises \u00E0 jour de zone.",
          "EstimatedMinutes": 75,
          "LearningObjectives": [
            "Comprendre les risques li\u00E9s aux transferts de zone (AXFR/IXFR) et aux mises \u00E0 jour DNS",
            "Savoir mettre en place l\u0027authentification des transferts avec TSIG et g\u00E9rer les cl\u00E9s en toute s\u00E9curit\u00E9",
            "Appliquer des contr\u00F4les d\u0027acc\u00E8s (ACL) et des r\u00E8gles serveur pour restreindre les transferts et notifications",
            "Configurer des r\u00E8gles de pare-feu et des limitations r\u00E9seau pour r\u00E9duire la surface d\u0027attaque",
            "Conna\u00EEtre les techniques de pr\u00E9vention des exfiltrations d\u0027information via DNS et les bonnes pratiques pour les mises \u00E0 jour de zone"
          ],
          "Content": "Contexte et risques li\u00E9s aux transferts et mises \u00E0 jour de zone\r\nLes transferts de zone (AXFR/IXFR) et les mises \u00E0 jour dynamiques exposent la copie ou la modification des donn\u00E9es DNS entre serveurs. Un transfert non autoris\u00E9 peut conduire \u00E0 une exfiltration compl\u00E8te d\u0027une zone (liste des h\u00F4tes, services internes), tandis qu\u0027une mise \u00E0 jour non contr\u00F4l\u00E9e permet l\u0027injection d\u0027enregistrements frauduleux. Il faut donc limiter qui peut demander AXFR/IXFR, qui peut notifier les serveurs secondaires et qui peut effectuer des mises \u00E0 jour dynamiques.\r\n\r\nTSIG : principe et usage pour authentifier transferts et mises \u00E0 jour\r\nTSIG (Transaction SIGnature) fournit l\u0027authentification HMAC pour les transactions DNS (y compris AXFR, IXFR, NOTIFY et mises \u00E0 jour RFC 2136). On cr\u00E9e une cl\u00E9 partag\u00E9e (nom \u002B secret) et on la configure sur le ma\u00EEtre et sur chaque esclave. Recommandations : utiliser un algorithme moderne (HMAC-SHA256/384/512), cl\u00E9s suffisamment longues, stocker les secrets avec contr\u00F4le d\u0027acc\u00E8s, et planifier une rotation p\u00E9riodique. TSIG prot\u00E8ge l\u0027origine et l\u0027int\u00E9grit\u00E9 des \u00E9changes, mais pas la confidentialit\u00E9 (les donn\u00E9es restent en clair).\r\n\r\nG\u00E9n\u00E9ration et configuration pratique d\u0027une cl\u00E9 TSIG (exemples)\r\nExemples courants : avec BIND, on g\u00E9n\u00E8re la cl\u00E9 avec dnssec-keygen ou openssl, puis on ins\u00E8re la cl\u00E9 dans named.conf. Exemple synth\u00E9tique : 1) dnssec-keygen -a HMAC-SHA256 -n HOST transfer-key 2) inclure la cl\u00E9 (le secret) dans named.conf: key \u0022transfer-key\u0022 { algorithm HMAC-SHA256; secret \u0022base64secret==\u0022; }; Puis restreindre les transferts: zone \u0022exemple.local\u0022 { type master; file \u0022...\u0022; allow-transfer { key \u0022transfer-key\u0022; }; notify yes; }; Et c\u00F4t\u00E9 esclave : server MASTER_IP { keys { \u0022transfer-key\u0022; }; }; Pour les mises \u00E0 jour dynamiques, placer la m\u00EAme cl\u00E9 dans allow-update et/ou utiliser TSIG sur les clients qui soumettent des mises \u00E0 jour.\r\n\r\nContr\u00F4les d\u0027acc\u00E8s (ACL) et configuration serveur\r\nAu-del\u00E0 de TSIG, utiliser les directives serveur pour limiter : - allow-transfer : limiter par adresse IP et/ou cl\u00E9 TSIG les serveurs qui peuvent demander AXFR/IXFR, - allow-notify : restreindre qui peut envoyer notifications de changement, - allow-update : limiter mises \u00E0 jour dynamiques aux cl\u00E9s ou adresses autoris\u00E9es, - allow-query/allow-recursion : limiter les requ\u00EAtes r\u00E9cursives et les r\u00E9ponses pour r\u00E9duire l\u0027exposition. Sur BIND, combinez ACL nomm\u00E9s et r\u00E8gles par zone. Principe : \u0022moindre privil\u00E8ge\u0022 \u2014 n\u0027autoriser que les IP et cl\u00E9s strictement n\u00E9cessaires.\r\n\r\nPare-feu et r\u00E8gles r\u00E9seau\r\nConfigurer le pare-feu pour n\u0027autoriser le trafic DNS qu\u0027entre entit\u00E9s connues : - Autoriser TCP port 53 (n\u00E9cessaire pour AXFR/IXFR) uniquement entre le ma\u00EEtre et les esclaves, - Autoriser UDP port 53 seulement aux r\u00E9solveurs/clients autoris\u00E9s, - Bloquer acc\u00E8s depuis Internet aux ports de management et aux interfaces internes, - Consid\u00E9rer la mise en place d\u0027un contr\u00F4le de flux et de limites (rate limiting) pour contrer l\u0027abus et le scanning. Exemple : sur un ma\u00EEtre, n\u0027accepter les connexions TCP:53 que depuis les adresses IP des serveurs secondaires.\r\n\r\nPr\u00E9vention des exfiltrations via DNS\r\nLes transferts de zone non autoris\u00E9s constituent la forme d\u0027exfiltration la plus directe. Moyens de pr\u00E9vention : - Bloquer AXFR depuis l\u0027ext\u00E9rieur ; autoriser seulement les IP/keys des esclaves, - Utiliser des zones s\u00E9par\u00E9es (split-horizon) pour ne jamais exposer les enregistrements internes dans la zone publique, - Ne pas stocker d\u0027informations sensibles (mots de passe, chemins internes) dans des enregistrements TXT, - Monitorer les requ\u00EAtes AXFR/IXFR et les tentatives \u00E9chou\u00E9es, - Auditer r\u00E9guli\u00E8rement les serveurs secondaires pour s\u0027assurer qu\u0027ils sont l\u00E9gitimes et prot\u00E9g\u00E9s.\r\n\r\nBonnes pratiques pour les mises \u00E0 jour de zone\r\nPour limiter les risques des mises \u00E0 jour (dynamiques) : - Exiger TSIG ou GSS-TSIG (Kerberos) pour authentifier les clients d\u0027update, - Restreindre allow-update aux cl\u00E9s ou aux adresses IP n\u00E9cessaires, - Pr\u00E9f\u00E9rer des processus centralis\u00E9s d\u0027automatisation (CI/CD) pour les changements plut\u00F4t que des mises \u00E0 jour ad hoc, - Tenir un journal (journal des mises \u00E0 jour) et activer la journalisation d\u00E9taill\u00E9e des mises \u00E0 jour pour audit, - Valider les changements (revues, tests) avant d\u00E9ploiement en production, - Envisager la d\u00E9sactivation des mises \u00E0 jour dynamiques si elles ne sont pas indispensables.\r\n\r\nSurveillance, journalisation et rotation de cl\u00E9s\r\nLa s\u00E9curit\u00E9 op\u00E9rationnelle est essentielle : - Activer la journalisation des transferts, des NOTIFY, des \u00E9checs d\u0027authentification TSIG et des mises \u00E0 jour, - D\u00E9ployer des alertes pour transferts de zones inhabituellement fr\u00E9quents ou vers des IP non reconnues, - Mettre en place une politique de rotation des cl\u00E9s TSIG (p\u00E9riodicit\u00E9 d\u00E9finie) et proc\u00E9dures de remplacement sans interruption (dupliquer la cl\u00E9 temporairement, basculer), - Proc\u00E9dures de gestion d\u0027incident : r\u00E9voquer cl\u00E9s compromises, r\u00E9voquer acc\u00E8s r\u00E9seau, forcer la restauration/replication vers esclaves de confiance.\r\n\r\nMesures avanc\u00E9es et limites\r\nCompl\u00E9ments utiles : - DNSSEC prot\u00E8ge l\u0027int\u00E9grit\u00E9 des enregistrements c\u00F4t\u00E9 r\u00E9solveur mais ne remplace pas TSIG pour authentifier les transferts entre serveurs, - GSS-TSIG est adapt\u00E9 aux environnements Kerberos/AD pour automatiser l\u0027authentification sans cl\u00E9 partag\u00E9e, - Chiffrement de transport (DoT/DoH) concerne principalement les r\u00E9solveurs clients, pas les transferts de zone standards, - Certaines solutions commercialis\u00E9es offrent XFR-over-TLS ou tunnels s\u00E9curis\u00E9s pour r\u00E9pliquer zones sur des liaisons non fiables.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "R\u00E9diger un extrait de configuration BIND pour une zone \u0022exemple.local\u0022 o\u00F9 les transferts sont autoris\u00E9s uniquement vers l\u0027IP 10.0.0.2 et via une cl\u00E9 TSIG nomm\u00E9e \u0022xfr-key\u0022.",
              "Answer": "key \u0022xfr-key\u0022 { algorithm HMAC-SHA256; secret \u0022INSERER_BASE64_SECRET==\u0022; };\nacl \u0022secondaires\u0022 { 10.0.0.2; }; \nzone \u0022exemple.local\u0022 { type master; file \u0022db.exemple.local\u0022; allow-transfer { key \u0022xfr-key\u0022; 10.0.0.2; }; allow-notify { 10.0.0.2; }; }; \nserver 10.0.0.2 { keys { \u0022xfr-key\u0022; }; };",
              "Explanation": "La configuration d\u00E9finit d\u0027abord la cl\u00E9 TSIG, puis une ACL pour l\u0027IP du serveur secondaire. Dans la zone, allow-transfer combine la restriction par cl\u00E9 et par IP. Le bloc server indique au ma\u00EEtre d\u0027utiliser la cl\u00E9 lorsqu\u0027il communique avec le secondaire. Ainsi, un transfert sera autoris\u00E9 seulement si la requ\u00EAte vient de 10.0.0.2 et s\u0027authentifie correctement avec la cl\u00E9 TSIG."
            },
            {
              "Instruction": "Donner une r\u00E8gle de pare-feu (nftables ou iptables) minimale pour n\u0027autoriser que le serveur secondaire (10.0.0.2) \u00E0 \u00E9tablir des connexions TCP:53 vers le ma\u00EEtre (10.0.0.1).",
              "Answer": "Exemple iptables :\niptables -A INPUT -p tcp --dport 53 -s 10.0.0.2 -j ACCEPT\niptables -A INPUT -p tcp --dport 53 -j DROP\n(S\u0027assurer d\u0027ajouter r\u00E8gles ESTABLISHED,RELATED et autoriser localhost/gestion.)",
              "Explanation": "La premi\u00E8re r\u00E8gle autorise explicitement TCP port 53 depuis l\u0027IP du secondaire. La seconde r\u00E8gle bloque les autres connexions TCP:53. Les transferts AXFR utilisent TCP, donc cette restriction emp\u00EAche des transferts non autoris\u00E9s depuis d\u0027autres IP. Il faut laisser intactes les r\u00E8gles concernant les connexions \u00E9tablies et le trafic d\u0027administration."
            },
            {
              "Instruction": "Vous recevez une demande d\u0027AXFR depuis une IP inconnue. D\u00E9crivez trois actions imm\u00E9diates \u00E0 effectuer et pourquoi.",
              "Answer": "1) Bloquer imm\u00E9diatement l\u0027IP au pare-feu ou ajouter une r\u00E8gle pour refuser les connexions TCP:53 depuis cette IP. 2) Examiner les logs du serveur DNS (transferts, TSIG) pour collecter l\u0027heure, le nom de la zone et les d\u00E9tails de la tentative. 3) V\u00E9rifier l\u0027\u00E9tat des cl\u00E9s TSIG et la configuration allow-transfer ; si une cl\u00E9 a \u00E9t\u00E9 compromise, la r\u00E9voquer et la remplacer. En parall\u00E8le, notifier l\u0027\u00E9quipe de s\u00E9curit\u00E9 et v\u00E9rifier s\u0027il y a eu transfert r\u00E9ussi vers d\u0027autres h\u00F4tes.",
              "Explanation": "Bloquer emp\u00EAche une exfiltration imm\u00E9diate. Les logs permettent d\u0027analyser la tentative et d\u0027\u00E9tablir un plan d\u0027investigation. R\u00E9voquer/r\u00E9initialiser des cl\u00E9s est n\u00E9cessaire si la tentative sugg\u00E8re une compromission. Informer l\u0027\u00E9quipe s\u00E9curit\u00E9 permet de coordonner r\u00E9ponse et r\u00E9cup\u00E9ration."
            }
          ]
        },
        {
          "Title": "Mises \u00E0 jour dynamiques et int\u00E9gration DNS/DHCP",
          "Summary": "Usage des mises \u00E0 jour dynamiques (RFC 2136), interactions avec DHCP, gestion des enregistrements \u00E9ph\u00E9m\u00E8res et strat\u00E9gies de conflits.",
          "EstimatedMinutes": 75,
          "LearningObjectives": [
            "Comprendre le fonctionnement des mises \u00E0 jour DNS dynamiques selon RFC 2136",
            "Conna\u00EEtre les m\u00E9canismes d\u0027authentification et de s\u00E9curit\u00E9 pour les mises \u00E0 jour dynamiques (TSIG, GSS-TSIG/KRB5)",
            "Savoir configurer l\u0027interaction entre un serveur DHCP et un serveur DNS pour les mises \u00E0 jour (A/AAAA et PTR)",
            "Apprendre \u00E0 g\u00E9rer les enregistrements \u00E9ph\u00E9m\u00E8res (cr\u00E9ation, expiration, suppression) et leurs implications TTL/lease",
            "Identifier et r\u00E9soudre les conflits d\u0027enregistrements DNS/DHCP (d\u00E9tection, strat\u00E9gies de r\u00E9solution, politiques d\u0027autorisation)",
            "Mettre en \u0153uvre des bonnes pratiques op\u00E9rationnelles : politiques d\u0027update, journalisation, supervision et tol\u00E9rance aux pannes"
          ],
          "Content": "Introduction aux mises \u00E0 jour dynamiques (RFC 2136)\r\nRFC 2136 d\u00E9finit un m\u00E9canisme qui permet \u00E0 des clients ou serveurs d\u0027envoyer des messages d\u0027update au serveur DNS pour ajouter, modifier ou supprimer des enregistrements sans \u00E9diter manuellement le fichier de zone. Les op\u00E9rations sont atomiques et peuvent inclure des pr\u00E9requis (prerequisites) afin d\u0027\u00E9viter d\u0027\u00E9craser involontairement des enregistrements. Les types d\u0027op\u00E9rations courants sont : add, delete et replace. Les mises \u00E0 jour dynamiques sont g\u00E9n\u00E9ralement utilis\u00E9es pour que des services automatis\u00E9s (comme DHCP) \u00E9crivent les enregistrements de noms (A/AAAA) et les enregistrements inverses (PTR).\r\n\r\nM\u00E9canismes d\u0027authentification et s\u00E9curit\u00E9\r\nAucune mise \u00E0 jour dynamique ne doit \u00EAtre accept\u00E9e sans contr\u00F4le d\u0027acc\u00E8s. Les m\u00E9canismes courants :\n- TSIG (RFC 2845) : cl\u00E9 partag\u00E9e HMAC utilis\u00E9e pour authentifier les mises \u00E0 jour. Simple et largement support\u00E9 pour serveur DNS/DHCP. Les cl\u00E9s TSIG sont r\u00E9f\u00E9renc\u00E9es dans allow-update/allow-transfer.\n- GSS-TSIG (bas\u00E9 sur Kerberos, RFC 3645) : permet un authentification Kerberos int\u00E9gr\u00E9e (utile dans les environnements Active Directory).\nBonnes pratiques : rotation r\u00E9guli\u00E8re des cl\u00E9s TSIG, restreindre les permissions (ne pas donner update global), limiter les cl\u00E9s aux clients DHCP/DNS autoris\u00E9s, et surveiller les op\u00E9rations d\u0027update.\r\n\r\nInteractions DHCP \u2194 DNS : principes et flux\r\nFlux typique : lorsqu\u0027un client obtient une adresse via DHCP, le serveur DHCP (ou le client) effectue une mise \u00E0 jour DNS pour ajouter/modifier l\u0027enregistrement A/AAAA et le PTR correspondant. Aspects \u00E0 prendre en compte :\n- Qui effectue la mise \u00E0 jour ? Le client DHCP (via dhclient ddns) ou le serveur DHCP (plus courant en entreprises).\n- Deux enregistrements doivent \u00EAtre coh\u00E9rents : forward (A/AAAA) et reverse (PTR).\n- Configuration ISC DHCP : ddns-update-style interim ; key et zone correspondantes ; update-static-leases pour contr\u00F4ler les baux statiques.\n- Sur Windows AD, le client peut effectuer lui-m\u00EAme la mise \u00E0 jour ou le serveur DHCP met \u00E0 jour sur son behalf selon les param\u00E8tres \u00AB secure updates \u00BB.\n- Pour IPv6, DHCPv6 dispose de m\u00E9canismes d\u00E9di\u00E9s et le client peut envoyer son FQDN (RFC 4702) pour mise \u00E0 jour.\r\n\r\nGestion des enregistrements \u00E9ph\u00E9m\u00E8res\r\nLes enregistrements cr\u00E9\u00E9s par DHCP ont une dur\u00E9e li\u00E9e au bail. Consid\u00E9rations cl\u00E9s :\n- TTL des enregistrements vs dur\u00E9e du bail : si TTL \u003E dur\u00E9e du bail, des r\u00E9solutions obsol\u00E8tes peuvent persister apr\u00E8s expiration du bail. Il est recommand\u00E9 d\u0027aligner ou d\u0027avoir un TTL plus court pour enregistrements dynamiques.\n- Suppression \u00E0 l\u0027expiration : le serveur DHCP devrait supprimer ou remplacer l\u0027enregistrement quand le bail est lib\u00E9r\u00E9/expire. Certains serveurs DNS ne suppriment pas automatiquement ; il faut configurer la suppression c\u00F4t\u00E9 DHCP ou mettre en place un m\u00E9canisme de scavenging/clean-up.\n- Enregistrements \u00AB prot\u00E9g\u00E9s \u00BB vs \u00AB dynamiques \u00BB : marquer certains enregistrements comme statiques pour qu\u0027ils ne soient pas effac\u00E9s par DDNS. Sous BIND, on contr\u00F4le l\u0027autorisation d\u0027update au niveau de la zone ; sous Windows DNS on a des drapeaux explicites d\u0027enregistrement.\n- Journaux de zone (journal files) : lorsque zones sont configur\u00E9es en dynamic, BIND \u00E9crit un fichier .jnl qui stocke les mises \u00E0 jour ; ne pas \u00E9diter manuellement la zone pendant que le mode dynamique est activ\u00E9.\r\n\r\nStrat\u00E9gies de d\u00E9tection et r\u00E9solution des conflits\r\nConflits typiques : deux clients/dhcp/serveurs essayent de cr\u00E9er des enregistrements identiques, un enregistrement existant appartenant \u00E0 un autre h\u00F4te, ou des PTR/A discordants. Strat\u00E9gies :\n- Pr\u00E9requis RFC 2136 : utiliser la section \u0027prerequisite\u0027 pour v\u00E9rifier l\u0027\u00E9tat avant de modifier (ex. supprimer seulement si le propri\u00E9taire correspond).\n- Politique c\u00F4t\u00E9 serveur DNS : d\u00E9finir update-policy (BIND) pour contr\u00F4ler qui peut modifier quoi (ex : permettre \u00E0 un serveur DHCP d\u0027\u00E9crire uniquement sous un sous-domaine pr\u00E9cis).\n- V\u00E9rification pr\u00E9-update : le serveur DHCP doit interroger DNS avant d\u0027\u00E9crire (r\u00E9soudre nom \u2192 adresse et inverse) et agir selon r\u00E9sultat : renommer, refuser, ou forcer suppression apr\u00E8s v\u00E9rification d\u0027appartenance.\n- Coordination entre serveurs DHCP en cluster/failover : utiliser m\u00E9canismes de r\u00E9plication/\u00E9changes d\u0027\u00E9tat pour \u00E9viter writes concurrentes (ISC DHCP failover, Microsoft DHCP split-scope ou clustering).\n- En cas de conflit d\u00E9tect\u00E9 : options de r\u00E9solution : renommer le nouvel h\u00F4te (ajouter suffixe), supprimer l\u0027ancien enregistrement si p\u00E9rim\u00E9, alerter l\u0027administrateur, ou appliquer r\u00E8gle de priorit\u00E9 (p. ex. serveur autoris\u00E9 vs non autoris\u00E9).\r\n\r\nConfiguration et options pratiques (BIND \u0026 ISC DHCP exemples conceptuels)\r\nPoints pratiques \u00E0 configurer :\n- BIND : zone d\u00E9clar\u00E9e master; allow-update { key \u0022dhcp-key\u0022; }; ou update-policy { grant dhcp-key name \u0022...\u0022 A; } ; activer notifications et transferts vers secondaires.\n- ISC DHCP (extraits conceptuels) : ddns-update-style interim; key \u0022dhcp-key\u0022 { algorithm HMAC-MD5.SIG-ALG.REG.INT; secret \u0022...\u0022; }; zone \u0022example.com\u0022 { primary 10.0.0.1; key dhcp-key; } ; zone for reverse similarly.\n- Outils : nsupdate (avec -k/TSIG ou -g/GSS-TSIG) pour tests et scripts ; rndc freeze/thaw pour interventions manuelles sur zone dynamique ; tcpdump/wireshark pour analyser les \u00E9changes DNS update.\n- Sauvegarde \u0026 reprise : faire des sauvegardes r\u00E9guli\u00E8res des fichiers de zone et des cl\u00E9s TSIG ; planifier proc\u00E9dures pour r\u00E9cup\u00E9rer une zone .jnl corrompue ou pour migrer cl\u00E9s.\r\n\r\nBonnes pratiques op\u00E9rationnelles\r\nSynth\u00E8se des pratiques recommand\u00E9es :\n- Restreindre les droits d\u0027update au plus petit p\u00E9rim\u00E8tre n\u00E9cessaire (cl\u00E9 \u002B update-policy).\n- Harmoniser TTL et dur\u00E9e de bail pour limiter cache stale.\n- Toujours mettre \u00E0 jour \u00E0 la fois A/AAAA et PTR. Pr\u00E9f\u00E9rer que le serveur DHCP fasse les deux op\u00E9rations atomiquement.\n- Prendre en charge la suppression/cleanup des enregistrements obsol\u00E8tes : configurer le serveur DHCP pour supprimer (delete) au release/expire ou mettre en place un nettoyage p\u00E9riodique contr\u00F4l\u00E9.\n- Surveiller et journaliser les updates dynamiques (audit des cl\u00E9s TSIG, alertes sur errors/deny).\n- Tester les sc\u00E9narios de failover DHCP/DNS et valider la coh\u00E9rence apr\u00E8s basculement.\n- Documenter les conventions de nommage pour \u00E9viter collisions (ex : base sur MAC ou inventaire centralis\u00E9).\r\n\r\nSurveillance et d\u00E9pannage\r\nActions de diagnostic courantes :\n- V\u00E9rifier les logs du serveur DNS (messages d\u0027error/notice pour updates rejet\u00E9s) et de DHCP pour erreurs d\u0027update.\n- Utiliser nsupdate en mode test pour reproduire une mise \u00E0 jour et observer la r\u00E9ponse du serveur.\n- V\u00E9rifier la correspondance cl\u00E9s TSIG (mismatch) et l\u0027heure/kerberos si GSS-TSIG (d\u00E9calage horaire cause d\u0027\u00E9chec).\n- Interroger DNS avant et apr\u00E8s le bail (dig A/PTR \u002B tcpdump) pour voir si les changements sont envoy\u00E9s et accept\u00E9s.\n- En cas de dissociation entre master et secondaire, forcer un zone transfer apr\u00E8s freeze/thaw, ou v\u00E9rifier que les notifications NOTIFY sont correctement envoy\u00E9es.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "R\u00E9diger la s\u00E9quence de commandes nsupdate (conceptuelle) pour ajouter un enregistrement A pour host1.example.com -\u003E 10.0.0.42 et son PTR dans la zone 0.0.10.in-addr.arpa en utilisant une cl\u00E9 TSIG nomm\u00E9e dhcp-key. Inclure l\u0027utilisation d\u0027un pr\u00E9requis qui n\u0027\u00E9crase pas un A existant diff\u00E9rent.",
              "Answer": "server dns.example.com\nkey dhcp-key \u003CTSIG-secret\u003E\n; Pr\u00E9requis : il n\u0027y a pas d\u0027A existant diff\u00E9rent\nprereq nxdomain host1.example.com\nupdate add host1.example.com. 3600 A 10.0.0.42\nupdate add 42.0.0.10.in-addr.arpa. 3600 PTR host1.example.com.\nsend",
              "Explanation": "La commande utilise un prereq nxdomain pour s\u0027assurer qu\u0027aucun A n\u0027existe d\u00E9j\u00E0 pour host1.example.com ; si un A existe, la mise \u00E0 jour est rejet\u00E9e, \u00E9vitant d\u0027\u00E9craser un enregistrement. La cl\u00E9 TSIG est sp\u00E9cifi\u00E9e pour authentifier l\u0027update. On ajoute ensuite l\u0027A et le PTR. En pratique on adaptera le format exact du secret/cl\u00E9 et les noms de serveur/zone; on peut aussi utiliser une prereq plus fine (par ex. v\u00E9rifier que la valeur concr\u00E8te n\u0027existe pas ou qu\u0027elle correspond \u00E0 une valeur attendue)."
            },
            {
              "Instruction": "Un serveur DHCP tente d\u0027ajouter un enregistrement A pour un client mais re\u00E7oit un conflit : le nom r\u00E9sout d\u00E9j\u00E0 vers une autre adresse IP active. Quelles actions devrait prendre un serveur DHCP bien con\u00E7u ? Donnez au moins trois options et la logique pour choisir parmi elles.",
              "Answer": "1) V\u00E9rifier l\u0027ancien enregistrement (date, TTL) : si l\u0027enregistrement existant est p\u00E9rim\u00E9/stale, supprimer et remplacer. 2) Refuser l\u0027attribution du nom et alerter/consigner pour intervention humaine. 3) G\u00E9n\u00E9rer un nom alternatif (suffixe unique) pour \u00E9viter collision et inscrire ce nom pour le client. 4) Tenter de contacter le propri\u00E9taire de l\u0027enregistrement existant (si identifi\u00E9) pour conciliation.\nLa logique de choix d\u00E9pend du contexte : si l\u0027enregistrement existant est r\u00E9cent et actif, ne pas l\u0027\u00E9craser automatiquement \u2014 privil\u00E9gier l\u0027alerte. Si l\u0027enregistrement est clairement stale (li\u00E9 \u00E0 un bail expir\u00E9), il peut \u00EAtre s\u00FBr de le remplacer automatiquement. Les politiques d\u0027entreprise (s\u00E9curit\u00E9) dictent si on peut supprimer automatiquement ou non.",
              "Explanation": "Un DHCP responsable doit \u00E9viter d\u0027\u00E9craser des enregistrements valides appartenant \u00E0 d\u0027autres h\u00F4tes. Les d\u00E9cisions se basent sur l\u0027\u00E2ge / TTL / \u00E9tat de bail et sur les politiques d\u0027autorisation. Une politique prudente est d\u0027alerter et d\u0027isoler les cas humains, ou d\u0027utiliser un nom alternatif automatique pour garantir la connectivit\u00E9 client sans casser la coh\u00E9rence globale."
            },
            {
              "Instruction": "D\u00E9crire comment configurer ISC DHCP et BIND pour que le serveur DHCP mette \u00E0 jour dynamiquement uniquement les enregistrements sous host-dhcp.example.com (sous-domaine d\u00E9di\u00E9) \u00E0 l\u0027aide d\u0027une cl\u00E9 TSIG. Enum\u00E9rer les param\u00E8tres cl\u00E9s c\u00F4t\u00E9 DHCP et c\u00F4t\u00E9 BIND (conceptuels).",
              "Answer": "C\u00F4t\u00E9 BIND :\n- D\u00E9clarer la zone host-dhcp.example.com comme master (zone \u0022host-dhcp.example.com\u0022 IN { type master; file \u0022...\u0022; allow-update { key \u0022dhcp-key\u0022; }; } ).\n- D\u00E9finir la cl\u00E9 TSIG (key \u0022dhcp-key\u0022 { algorithm ...; secret \u0022...\u0022; } ).\n- S\u0027assurer que les secondaires acceptent les transferts et notifications.\nC\u00F4t\u00E9 ISC DHCP :\n- D\u00E9finir la cl\u00E9 TSIG avec le m\u00EAme nom/secret dans le fichier dhcpd.conf (key \u0022dhcp-key\u0022 { algorithm ...; secret \u0022...\u0022; }).\n- Activer les DDNS : ddns-update-style interim;\n- D\u00E9clarer la zone \u00E0 mettre \u00E0 jour avec la cl\u00E9 : zone host-dhcp.example.com. { primary 10.0.0.1; key dhcp-key; }\n- Configurer les options de mise \u00E0 jour des PTR si n\u00E9cessaire (zone reverse avec la m\u00EAme cl\u00E9).\n- Optionnel : update-static-leases false pour \u00E9viter d\u0027\u00E9crire pour les baux statiques.\nEnsuite, red\u00E9marrer DHCP et BIND et tester via attribution d\u0027un bail et v\u00E9rification des enregistrements ajout\u00E9s sous host-dhcp.example.com.",
              "Explanation": "La cl\u00E9 TSIG doit \u00EAtre identique sur les deux syst\u00E8mes et l\u0027allow-update de la zone doit r\u00E9f\u00E9rencer cette cl\u00E9 pour autoriser uniquement le serveur DHCP. La configuration DHCP indique le style ddns et la zone \u00E0 mettre \u00E0 jour avec la correspondance de cl\u00E9. Garder une zone d\u00E9di\u00E9e r\u00E9duit le risque d\u0027\u00E9criture non-intentionnelle dans d\u0027autres parties de l\u0027espace de noms."
            }
          ]
        },
        {
          "Title": "Surveillance, maintenance et bonnes pratiques d\u0027administration",
          "Summary": "Outils et m\u00E9thodes de surveillance des zones (logs, alertes, v\u00E9rifications d\u0027int\u00E9grit\u00E9), maintenance courante, politiques de sauvegarde et proc\u00E9dures de restauration.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Comprendre les principaux outils et m\u00E9thodes pour surveiller des zones DNS primaires et secondaires (logs, m\u00E9triques, v\u00E9rifications d\u0027int\u00E9grit\u00E9).",
            "Savoir configurer des alertes pertinentes pour d\u00E9tecter les incidents de zone (\u00E9checs de transfert, incoh\u00E9rences, d\u00E9lais de r\u00E9ponse).",
            "Apprendre les op\u00E9rations de maintenance courante : rotations de logs, rechargements de zones, tests de r\u00E9plication et surveillance de performances.",
            "D\u00E9finir des politiques de sauvegarde adapt\u00E9es aux zones DNS et mettre en place des proc\u00E9dures de restauration test\u00E9es et reproductibles.",
            "Adopter des bonnes pratiques d\u0027administration : gestion des changements, audit, s\u00E9curit\u00E9 et automatisation."
          ],
          "Content": "Introduction et p\u00E9rim\u00E8tre\r\nCette le\u00E7on couvre la surveillance, la maintenance et les bonnes pratiques d\u0027administration pour les zones DNS configur\u00E9es en primaire et secondaire. Elle traite des \u00E9l\u00E9ments \u00E0 surveiller (int\u00E9grit\u00E9 des fichiers de zone, transferts AXFR/IXFR, logs de serveur, performances), des outils d\u0027observation, des op\u00E9rations de maintenance courante, des strat\u00E9gies de sauvegarde et des proc\u00E9dures de restauration et de reprise apr\u00E8s sinistre (DR).\r\n\r\nOutils et m\u00E9thodes de surveillance\r\nOutils typiques : syslog/journald pour logs syst\u00E8me, fichiers de logs du serveur DNS (BIND, PowerDNS, NSD), solutions centralis\u00E9es (ELK/EFK, Splunk), syst\u00E8mes de m\u00E9triques (Prometheus \u002B exporters), et solutions de supervision (Nagios, Zabbix, Icinga). M\u00E9thodes : collecte centralis\u00E9e des logs, instrumentation m\u00E9trique (latence de r\u00E9ponse, taux d\u0027erreur, nombre de requ\u00EAtes, nombre et succ\u00E8s/\u00E9chec des transferts de zone), sondes externes (monitoring DNS public, tests de r\u00E9solution), et v\u00E9rifications programm\u00E9es d\u0027int\u00E9grit\u00E9 des fichiers de zone (checksum, compare entre primaire/secondaires).\r\n\r\nLogs, \u00E9v\u00E9nements et analyse\r\nQue consigner : d\u00E9marrages/arr\u00EAts de serveurs, erreurs de parsing de zone, \u00E9checs de transfert (AXFR/IXFR), mises \u00E0 jour dynamiques (DDNS), mises en cache et r\u00E9ponses SERVFAIL/NXDOMAIN inhabituelles. Bonnes pratiques : timestamps en UTC, structure claire des messages, enrichissement (contextualisation par zone, serveur, transaction id), corr\u00E9lation des \u00E9v\u00E9nements (ex. pics d\u0027erreurs apr\u00E8s une modification). Utiliser des r\u00E8gles d\u0027indexation et des tableaux de bord pour visualiser tendances et incidents.\r\n\r\nAlertes et seuils pertinents\r\nExemples d\u0027alertes : \u00E9chec r\u00E9p\u00E9t\u00E9 d\u0027AXFR/IXFR pendant X minutes, diff\u00E9rence CRC/sha256 entre primaire et secondaire, augmentation anormale de SERVFAILs, perte d\u0027accessibilit\u00E9 d\u0027un serveur secondaire, int\u00E9grit\u00E9 de fichier de zone modifi\u00E9e sans ticket de changement. D\u00E9finir les seuils selon criticit\u00E9 : alerte critique pour perte de toutes les sauvegardes et \u00E9checs de transferts, alerte moyenne pour d\u00E9calages de donn\u00E9es ou latences \u00E9lev\u00E9es. Pr\u00E9voir escalades, propri\u00E9taires et playbooks associ\u00E9s. Eviter le bruit : mettre en place fen\u00EAtres de maintenance et alertes agr\u00E9g\u00E9es.\r\n\r\nV\u00E9rifications d\u0027int\u00E9grit\u00E9 et tests de coh\u00E9rence\r\nContr\u00F4les automatis\u00E9s : calcul r\u00E9gulier de hash (sha256) des fichiers de zone et comparaison inter-serveurs, ex\u00E9cution de named-checkzone (ou \u00E9quivalent) apr\u00E8s chaque modification, tests de r\u00E9solution (dig \u002Btrace, dig AXFR quand autoris\u00E9) et controler SOA serial pour progression des transfers. Tests de non-r\u00E9gression : v\u00E9rifier que les enregistrements critiques (MX, NS, SOA) restent pr\u00E9sents et que les TTL/valeurs RDATA sont conformes aux attentes.\r\n\r\nMaintenance courante\r\nT\u00E2ches r\u00E9guli\u00E8res : rotation et archivage des logs, purge de fichiers temporaires, v\u00E9rification des mises \u00E0 jour de s\u00E9curit\u00E9 pour le logiciel DNS, validation des signatures DNSSEC (si utilis\u00E9), synchronisation des heures (NTP/Chrony), v\u00E9rification des ACL et des configurations de transfert. Processus de changement : v\u00E9rifier en environnement de test, revue par les pairs, maintenance programm\u00E9e avec notifications, et \u00E9tapes d\u0027abandon (rollback). Documenter toutes les op\u00E9rations.\r\n\r\nPolitiques de sauvegarde\r\nQue sauvegarder : fichiers de zone (formats ma\u00EEtres), configurations serveur (named.conf, db files, keys), cl\u00E9s DNSSEC, scripts d\u0027automatisation et bases de donn\u00E9es si DNS est pilot\u00E9 par une BD (PowerDNS). Fr\u00E9quence : sauvegarde compl\u00E8te quotidienne pour zones actives, avec snapshots horaires pour zones tr\u00E8s dynamiques; r\u00E9tention adapt\u00E9e (ex. 30 jours) et copies hors site. M\u00E9thodes : exports atomiques (dump), snapshots de syst\u00E8me de fichiers coh\u00E9rents, export vers stockage chiffr\u00E9. Tester r\u00E9guli\u00E8rement l\u0027int\u00E9grit\u00E9 des sauvegardes et les acc\u00E8s aux archives.\r\n\r\nProc\u00E9dures de restauration\r\nPr\u00E9parer et documenter les proc\u00E9dures pas \u00E0 pas : identifier la source de sauvegarde pertinente (horodatage), restaurer les fichiers de zone et configurations en environnement isol\u00E9, v\u00E9rifier la syntaxe (named-checkzone), recharger le serveur (rndc reload / systemctl restart selon le cas), forcer un incr\u00E9ment de SOA serial si n\u00E9cessaire, et d\u00E9clencher des transferts vers les secondaires. Tests post-restauration : v\u00E9rifier la r\u00E9solution publique, ex\u00E9cuter audits de coh\u00E9rence et monitorer alertes. Maintenir un playbook DR avec r\u00F4les et contacts.\r\n\r\nS\u00E9curit\u00E9, contr\u00F4les d\u0027acc\u00E8s et gestion des changements\r\nLimiter les acc\u00E8s aux syst\u00E8mes masters et consoles d\u0027administration, utiliser authentification forte et gestion des cl\u00E9s, tenir un journal d\u0027audit des modifications (qui, quoi, quand), signer les changements via process de ticketing, et monitorer les modifications de fichiers de zone (inotify, git pour fichiers de zone). Chiffrer les sauvegardes sensibles (cl\u00E9 DNSSEC). Revoir r\u00E9guli\u00E8rement ACL de transfert (allow-transfer) et politiques de mise \u00E0 jour dynamique.\r\n\r\nAutomatisation, tests et bonnes pratiques\r\nAutomatiser t\u00E2ches r\u00E9currentes : backups, checksums, tests de transfert, d\u00E9ploiement via CI/CD pour modifications de zones. Int\u00E9grer tests unitaires pour les modifications de zone (syntaxe, conflits d\u0027enregistrements), et pr\u00E9-production (staging) pour valider. Documenter runbooks pour incidents courants. Liste de v\u00E9rification (checklist) avant modification : sauvegarde, revue, test syntaxe, pr\u00E9paration rollback, notifications. Planifier exercices DR r\u00E9guliers.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Vous constatez que l\u0027un des serveurs secondaires n\u0027a pas re\u00E7u de mise \u00E0 jour de zone depuis 24 heures. D\u00E9crivez les \u00E9tapes pour diagnostiquer la cause et corriger le probl\u00E8me.",
              "Answer": "1) V\u00E9rifier les logs du secondaire pour erreurs de transfert (ex. refus, timeout). 2) Contr\u00F4ler la connectivit\u00E9 r\u00E9seau entre secondaire et primaire (ping, traceroute, tests firewall). 3) V\u00E9rifier que le primaire autorise le transfert vers le secondaire (allow-transfer / ACL). 4) Comparer le SOA serial entre primaire et secondaire (dig SOA @primaire zone; dig SOA @secondaire zone). 5) Tester un AXFR manuellement si autoris\u00E9 (dig AXFR). 6) Si fichier de zone corrompu, restaurer la derni\u00E8re sauvegarde valide puis forcer un reload sur secondaire. 7) Documenter l\u0027incident et mettre en place une alerte pour r\u00E9currence.",
              "Explanation": "La d\u00E9marche va du log \u00E0 la connectivit\u00E9, \u00E0 la configuration d\u0027autorisation, puis \u00E0 la v\u00E9rification de la coh\u00E9rence des donn\u00E9es (SOA serial). Tester AXFR identifie si le transfert est possible et la restauration r\u00E8gle les cas de corruption. La documentation et l\u0027alerte aident \u00E0 pr\u00E9venir r\u00E9p\u00E9tition."
            },
            {
              "Instruction": "Concevez une politique de sauvegarde minimale pour un ensemble de zones critiques (24/7) et expliquez pourquoi vous avez choisi ces fr\u00E9quences et r\u00E9tentions.",
              "Answer": "Politique minimale propos\u00E9e : sauvegarde compl\u00E8te des fichiers de zone et configurations toutes les 6 heures; snapshot syst\u00E8me horaire pour 48 heures; sauvegarde quotidienne chiffr\u00E9e conserv\u00E9e 30 jours; sauvegarde hors site (r\u00E9plication) quotidienne; conservation des 7 derniers snapshots horaires pour restaurations rapides. Tests de restauration trimestriels. Raison : zones 24/7 peuvent avoir modifications fr\u00E9quentes et n\u00E9cessitent RPO court (6h) ; snapshots horaires pour permettre restauration granulaire en cas de changement r\u00E9cent ; r\u00E9tention 30 jours pour se prot\u00E9ger contre erreurs persistantes ou attaques non d\u00E9tect\u00E9es; sauvegarde hors site pour r\u00E9silience g\u00E9ographique.",
              "Explanation": "Le compromis vise \u00E0 r\u00E9duire le RPO/RTO tout en limitant co\u00FBts de stockage. Sauvegardes plus fr\u00E9quentes et tests assurent restauration fiable. Chiffrement et hors site r\u00E9pondent aux exigences de s\u00E9curit\u00E9 et disponibilit\u00E9."
            },
            {
              "Instruction": "\u00C9crire une r\u00E8gle d\u0027alerte simple (en pseudo-configuration pour un syst\u00E8me de monitoring) qui d\u00E9clenche une alerte critique si trois transferts AXFR \u00E9chouent en 10 minutes pour une zone donn\u00E9e.",
              "Answer": "Pseudo-r\u00E8gle : check: axfr_transfer_failures metric: axfr_fail_count(labels: {zone: \u0027example.com\u0027, server: \u0027primary\u0027}) condition: sum_over_time(axfr_fail_count[10m]) \u003E= 3 severity: critical notify: oncall_dns_team, ticket_queue: dns_incidents",
              "Explanation": "La r\u00E8gle agr\u00E8ge les \u00E9checs sur une fen\u00EAtre de 10 minutes et d\u00E9clenche une alerte si la somme atteint 3, limitant les faux positifs et capturant un probl\u00E8me r\u00E9p\u00E9t\u00E9. Elle cible zone et serveur pour faciliter le diagnostic et inclut destinataires pour r\u00E9solution rapide."
            },
            {
              "Instruction": "Vous devez restaurer une zone corrompue \u00E0 partir d\u0027une sauvegarde. Indiquez la proc\u00E9dure pas \u00E0 pas, incluant v\u00E9rifications avant et apr\u00E8s restauration.",
              "Answer": "1) Identifier la sauvegarde la plus r\u00E9cente et valide (horodatage). 2) Isoler le serveur ou restaurer dans un environnement de test. 3) Restaurer le fichier de zone et la configuration associ\u00E9e depuis l\u0027archive chiffr\u00E9e. 4) Ex\u00E9cuter named-checkzone (ou outil \u00E9quivalent) pour v\u00E9rifier la syntaxe. 5) Si DNSSEC utilis\u00E9, restaurer et v\u00E9rifier les cl\u00E9s, signer si n\u00E9cessaire. 6) Incr\u00E9menter le SOA serial si la sauvegarde contient un serial inf\u00E9rieur ou \u00E9gal au secondaire. 7) Recharger le serveur (rndc reload) et surveiller les logs pour erreurs. 8) Forcer des transferts vers des secondaires et v\u00E9rifier les SOA serial chez eux. 9) Effectuer tests de r\u00E9solution publics (dig) et surveiller m\u00E9triques/alertes. 10) Documenter l\u0027op\u00E9ration et analyser la cause de la corruption pour actions pr\u00E9ventives.",
              "Explanation": "La proc\u00E9dure assure restauration s\u00FBre (test avant production), v\u00E9rification de syntaxe et de signatures, et coh\u00E9rence inter-serveurs via SOA serial. L\u0027incr\u00E9ment du serial \u00E9vite que les secondaires n\u0027ignorent la restauration. La documentation et l\u0027analyse post-mortem r\u00E9duisent risques futurs."
            }
          ]
        },
        {
          "Title": "Atelier pratique : cr\u00E9ation compl\u00E8te et d\u00E9ploiement d\u0027une zone primaire/secondaire",
          "Summary": "Exercice guid\u00E9 de bout en bout : cr\u00E9ation de la zone sur un primaire, configuration d\u0027un secondaire, test de transferts, s\u00E9curisation et validation finale.",
          "EstimatedMinutes": 150,
          "LearningObjectives": [
            "Comprendre la diff\u00E9rence entre une zone primaire et une zone secondaire",
            "Savoir cr\u00E9er et d\u00E9ployer une zone DNS primaire (BIND) et sa zone de donn\u00E9es",
            "Savoir configurer une zone secondaire et v\u00E9rifier les transferts (AXFR/IXFR)",
            "Ma\u00EEtriser les tests de validation (dig, host, nslookup) et le d\u00E9pannage courant",
            "Appliquer des m\u00E9canismes de s\u00E9curisation des transferts de zone (ACL, allow-transfer, TSIG)",
            "Valider l\u2019int\u00E9grit\u00E9 op\u00E9rationnelle apr\u00E8s d\u00E9ploiement (SOA, num\u00E9ros de s\u00E9rie, r\u00E9solution r\u00E9cursive)"
          ],
          "Content": "Introduction et contexte\r\nObjectif de l\u0027atelier : r\u00E9aliser de bout en bout la cr\u00E9ation d\u0027une zone DNS primaire, la configuration d\u0027un ou plusieurs serveurs secondaires, tester et s\u00E9curiser les transferts de zone, puis valider le fonctionnement. Ce module illustre les actions sur BIND9 (Linux) \u2014 adaptation possible pour d\u0027autres impl\u00E9mentations (Windows DNS, PowerDNS).\r\n\r\nPr\u00E9requis\r\nServeurs accessibles (ex. nomm\u00E9-primary et named-secondary) avec BIND9 install\u00E9 et ports UDP/TCP 53 ouverts entre eux. Acc\u00E8s root/administrateur. Outils clients : dig, host, nslookup. Connaissances de base : structure d\u0027un fichier de zone (SOA, NS, A, PTR), format du fichier named.conf.\r\n\r\nPlan de travail (\u00E9tapes)\r\n1) Cr\u00E9er la zone primaire : entr\u00E9e de configuration et fichier de zone. 2) D\u00E9marrer/recharger le service. 3) Configurer la zone secondaire avec l\u0027IP du primaire. 4) Tester les transferts (AXFR/IXFR) et la r\u00E9solution. 5) S\u00E9curiser les transferts (restrict, allow-transfer, TSIG). 6) Validation finale et v\u00E9rifications post-d\u00E9ploiement.\r\n\r\nCr\u00E9ation de la zone primaire (BIND) \u2014 configuration\r\nAjouter dans named.conf.local (ou fichier d\u0027inclusions) une entr\u00E9e zone : zone \u0022example.test\u0022 IN { type master; file \u0022/etc/bind/db.example.test\u0022; allow-transfer { 192.0.2.2; }; }; Cr\u00E9er le fichier /etc/bind/db.example.test contenant un SOA valide, en commen\u00E7ant par un num\u00E9ro de s\u00E9rie conforme (YYYYMMDDnn). Exemple minimal :\n$TTL 3600\n@ IN SOA ns1.example.test. admin.example.test. (\n  2025101901 ; serial\n  7200       ; refresh\n  3600       ; retry\n  1209600    ; expire\n  3600 )     ; minimum\n@ IN NS ns1.example.test.\n@ IN NS ns2.example.test.\nns1 IN A 198.51.100.10\nns2 IN A 192.0.2.2\nwww IN A 198.51.100.20\n\nApr\u00E8s cr\u00E9ation, v\u00E9rifier la syntaxe : named-checkconf et named-checkzone example.test /etc/bind/db.example.test. Relancer ou recharger BIND : systemctl reload bind9 ou rndc reload.\r\n\r\nConfiguration de la zone secondaire (BIND)\r\nSur le serveur secondaire, ajouter dans named.conf.local : zone \u0022example.test\u0022 IN { type slave; file \u0022/var/cache/bind/db.example.test\u0022; masters { 198.51.100.10; }; }; Ici 198.51.100.10 est l\u0027IP du primaire. D\u00E9marrer ou recharger BIND sur le secondaire. Le serveur secondaire tentera un transfert de zone automatique (AXFR ou IXFR selon configuration). Les fichiers de zone sont stock\u00E9s dans le chemin indiqu\u00E9 (ou g\u00E9n\u00E9r\u00E9s dynamiquement).\r\n\r\nTests de transferts et validation\r\nSur le secondaire ou depuis un poste tiers, utiliser dig pour forcer et v\u00E9rifier un transfert : dig @198.51.100.10 example.test AXFR. R\u00E9sultat attendu : la liste compl\u00E8te des enregistrements de zone renvoy\u00E9e par le serveur primaire. On peut aussi interroger le secondaire : dig @192.0.2.2 www.example.test A pour v\u00E9rifier la r\u00E9solution via le secondaire. V\u00E9rifier SOA et num\u00E9ro de s\u00E9rie : dig @192.0.2.2 example.test SOA \u002Bshort et comparer au primaire. Pour v\u00E9rifier le type de transfert (AXFR vs IXFR), activer journalisation ou inspecter les logs (/var/log/syslog ou journalctl) et voir si la seconde r\u00E9cup\u00E8re une diff\u00E9rence (IXFR) ou une zone compl\u00E8te (AXFR).\r\n\r\nS\u00E9curisation des transferts\r\nM\u00E9canismes recommand\u00E9s :\n- Limiter allow-transfer par ACL (liste d\u0027IP des serveurs secondaires) dans la configuration de la zone pour refuser les transferts non autoris\u00E9s.\n- Utiliser TSIG pour signer et authentifier les transferts entre primaire et secondaire. Exemple de cl\u00E9 TSIG (BIND) :\nkey \u0022tsig-transfer\u0022 {\n  algorithm hmac-sha256;\n  secret \u0022BASE64_SECRET==\u0022;\n};\nPuis dans la zone primaire : allow-transfer { key tsig-transfer; } ; et dans la d\u00E9finition des masters du secondaire : masters { 198.51.100.10 key tsig-transfer; } . G\u00E9n\u00E9rer la cl\u00E9 avec dnssec-keygen ou avec rndc-confgen et distribuer en s\u00E9curit\u00E9.\n- Restreindre les requ\u00EAtes r\u00E9cursives/publices (allow-recursion/allow-query) si le serveur ne doit pas \u00EAtre r\u00E9solveur public.\n- Activer logs et surveiller les \u00E9checs de transfert pour d\u00E9tecter des tentatives non autoris\u00E9es.\r\n\r\nD\u00E9pannage courant\r\nSympt\u00F4mes et v\u00E9rifications :\n- Transfert refus\u00E9 : v\u00E9rifier allow-transfer et ACL/TSIG, regarder les logs pour messages d\u0027\u00E9chec et codes d\u0027erreur.\n- Num\u00E9ro de s\u00E9rie non augment\u00E9 : v\u00E9rifier que vous avez modifi\u00E9 le num\u00E9ro de s\u00E9rie dans le SOA avant rechargement ; named-checkzone signale les incoh\u00E9rences.\n- Secondaire ne r\u00E9cup\u00E8re pas la zone : v\u00E9rifier connectivit\u00E9 r\u00E9seau, firewall, r\u00E9solution d\u0027IP, et que le primaire \u00E9coute bien sur TCP 53 (AXFR n\u00E9cessite TCP).\n- Fichiers de zone corrompus : utiliser named-checkzone pour diagnostiquer. Sauvegarder les fichiers avant modification.\r\n\r\nValidation finale et bonnes pratiques\r\nV\u00E9rifications \u00E0 effectuer avant cl\u00F4turer l\u0027atelier :\n- dig @prim example.test SOA \u002Bshort et dig @sec example.test SOA \u002Bshort =\u003E m\u00EAmes num\u00E9ros de s\u00E9rie.\n- dig @sec www.example.test A =\u003E r\u00E9ponse attendue.\n- Test de transfert depuis une IP non autoris\u00E9e =\u003E refus.\n- V\u00E9rifier la pr\u00E9sence de la cl\u00E9 TSIG dans la config sur les deux serveurs et tester un transfert authentifi\u00E9.\n- Documenter la configuration, les chemins de fichiers, les ACL et la cl\u00E9 TSIG et conserver une copie s\u00E9curis\u00E9e. Planifier la supervision (alerte sur \u00E9chec de transfert ou d\u00E9rive de num\u00E9ros de s\u00E9rie).\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 Cr\u00E9er la zone primaire BIND. Sur le serveur primaire (198.51.100.10), ajoutez la zone example.test avec un fichier de zone minimal. V\u00E9rifiez la syntaxe et rechargez le service. Donnez la configuration de named.conf.local et un exemple de fichier de zone valide avec un num\u00E9ro de s\u00E9rie 2025101901.",
              "Answer": "{\n  \u0022named_conf_local\u0022: \u0022zone \\\u0022example.test\\\u0022 IN {\\n  type master;\\n  file \\\u0022/etc/bind/db.example.test\\\u0022;\\n  allow-transfer { 192.0.2.2; };\\n};\u0022,\n  \u0022zone_file\u0022: \u0022$TTL 3600\\n@ IN SOA ns1.example.test. admin.example.test. (\\n  2025101901 ; serial\\n  7200       ; refresh\\n  3600       ; retry\\n  1209600    ; expire\\n  3600 )     ; minimum\\n@ IN NS ns1.example.test.\\n@ IN NS ns2.example.test.\\nns1 IN A 198.51.100.10\\nns2 IN A 192.0.2.2\\nwww IN A 198.51.100.20\u0022,\n  \u0022commands\u0022: [\u0022named-checkconf\u0022,\u0022named-checkzone example.test /etc/bind/db.example.test\u0022,\u0022systemctl reload bind9 || rndc reload\u0022]\n}",
              "Explanation": "La configuration montre la d\u00E9claration de zone master et l\u0027autorisation de transfert vers l\u0027IP du secondaire. Le fichier de zone contient un SOA avec un num\u00E9ro de s\u00E9rie au format YYYYMMDDnn. Les commandes permettent de v\u00E9rifier la syntaxe et de recharger BIND sans interrompre le service."
            },
            {
              "Instruction": "Exercice 2 \u2014 Configurer le secondaire et tester un transfert. Sur le serveur secondaire (192.0.2.2), cr\u00E9ez la zone en mode slave pointant vers le primaire 198.51.100.10. D\u00E9clenchez un transfert et montrez la commande dig pour forcer un AXFR depuis le primaire. Quel est le r\u00E9sultat attendu ?",
              "Answer": "{\n  \u0022named_conf_local_secondary\u0022: \u0022zone \\\u0022example.test\\\u0022 IN {\\n  type slave;\\n  file \\\u0022/var/cache/bind/db.example.test\\\u0022;\\n  masters { 198.51.100.10; };\\n};\u0022,\n  \u0022dig_command\u0022: \u0022dig @198.51.100.10 example.test AXFR\u0022,\n  \u0022expected_result\u0022: \u0022Une liste compl\u00E8te des enregistrements de la zone example.test (SOA, NS, A, etc.). La r\u00E9ponse contient plusieurs RR et se termine par le SOA final. Pas d\u0027erreur REFUSED ou SERVFAIL.\u0022 \n}",
              "Explanation": "La d\u00E9finition en mode slave indique au secondaire d\u0027interroger le primaire pour r\u00E9cup\u00E9rer la zone. La commande dig AXFR doit retourner tous les enregistrements si le primaire autorise le transfert \u00E0 partir de l\u0027IP du secondaire et si TCP/53 est ouvert."
            },
            {
              "Instruction": "Exercice 3 \u2014 S\u00E9curiser le transfert avec TSIG. D\u00E9crivez les \u00E9tapes pour g\u00E9n\u00E9rer une cl\u00E9 TSIG sur le primaire, l\u0027ajouter aux configurations primaire et secondaire, et tester un transfert sign\u00E9. Donnez un exemple de bloc key et les modifications \u00E0 apporter dans la zone et la section masters.",
              "Answer": "{\n  \u0022generate_key_command\u0022: \u0022dnssec-keygen -a HMAC-SHA256 -b 256 -n HOST tsig-transfer\u0022,\n  \u0022key_block_example\u0022: \u0022key \\\u0022tsig-transfer\\\u0022 {\\n  algorithm hmac-sha256;\\n  secret \\\u0022BASE64_SECRET==\\\u0022;\\n};\u0022,\n  \u0022primary_change\u0022: \u0022zone \\\u0022example.test\\\u0022 { type master; file \\\u0022/etc/bind/db.example.test\\\u0022; allow-transfer { key tsig-transfer; }; };\u0022,\n  \u0022secondary_change\u0022: \u0022key \\\u0022tsig-transfer\\\u0022 { algorithm hmac-sha256; secret \\\u0022BASE64_SECRET==\\\u0022; }; zone \\\u0022example.test\\\u0022 { type slave; file \\\u0022/var/cache/bind/db.example.test\\\u0022; masters { 198.51.100.10 key tsig-transfer; }; };\u0022,\n  \u0022test_command\u0022: \u0022dig @198.51.100.10 example.test AXFR \u002Btsig=tsig-transfer:BASE64_SECRET==\u0022,\n  \u0022expected_result\u0022: \u0022Transfert accept\u00E9 et zone renvoy\u00E9e. Les transferts non sign\u00E9s depuis IP qui n\u0027est pas autoris\u00E9e ou sans la cl\u00E9 doivent \u00EAtre refus\u00E9s.\u0022\n}",
              "Explanation": "La cl\u00E9 TSIG doit \u00EAtre identique sur les deux c\u00F4t\u00E9s. On g\u00E9n\u00E8re la cl\u00E9, on la copie en s\u00E9curit\u00E9 sur l\u0027autre serveur, on l\u0027ins\u00E8re dans named.conf et on utilise la directive allow-transfer { key ... } sur le primaire et masters { ip key ... } sur le secondaire. Le test doit montrer l\u0027\u00E9change authentifi\u00E9. Sur certaines versions de BIND, la commande dig doit inclure l\u0027option \u002Btsig pour tester manuellement."
            },
            {
              "Instruction": "Exercice 4 \u2014 Validation finale et contr\u00F4le d\u0027int\u00E9grit\u00E9. Listez trois commandes de v\u00E9rification \u00E0 ex\u00E9cuter apr\u00E8s d\u00E9ploiement et l\u0027interpr\u00E9tation attendue de leurs sorties.",
              "Answer": "{\n  \u0022checks\u0022: [\n    {\u0022cmd\u0022: \u0022dig @198.51.100.10 example.test SOA \u002Bshort\u0022, \u0022expected\u0022: \u0022Affiche le SOA du primaire avec le num\u00E9ro de s\u00E9rie (ex: ns1.example.test. admin.example.test. 2025101901 ...)\u0022},\n    {\u0022cmd\u0022: \u0022dig @192.0.2.2 example.test SOA \u002Bshort\u0022, \u0022expected\u0022: \u0022Affiche le m\u00EAme SOA / m\u00EAme num\u00E9ro de s\u00E9rie que le primaire \u2014 confirme que le secondaire est synchronis\u00E9.\u0022},\n    {\u0022cmd\u0022: \u0022dig @192.0.2.2 www.example.test A \u002Bshort\u0022, \u0022expected\u0022: \u0022Affiche l\u0027adresse IP configur\u00E9e (ex: 198.51.100.20).\u0022}\n  ]\n}",
              "Explanation": "Comparer les SOA permet de v\u00E9rifier la synchronisation des num\u00E9ros de s\u00E9rie. Interroger les enregistrements via le secondaire confirme la capacit\u00E9 de r\u00E9solution. Si les sorties divergent, il faut relire les logs et v\u00E9rifier les transferts et la connectivit\u00E9."
            }
          ]
        }
      ]
    },
    {
      "Title": "Gestion des cl\u00E9s et signature de zones (manuelle \u0026 automatique)",
      "Description": "G\u00E9n\u00E9ration et rotation de cl\u00E9s KSK/ZSK, strat\u00E9gies de stockage, signatures manuelles avec dnssec-signzone et signatures automatiques (BIND, OpenDNSSEC).",
      "EstimatedHours": 2,
      "Lessons": [
        {
          "Title": "Introduction \u00E0 DNSSEC et aux r\u00F4les KSK/ZSK",
          "Summary": "Pr\u00E9sentation des principes de DNSSEC, distinction entre Key Signing Key (KSK) et Zone Signing Key (ZSK), et compr\u00E9hension de leur r\u00F4le dans la cha\u00EEne de confiance.",
          "EstimatedMinutes": 60,
          "LearningObjectives": [
            "Comprendre les objectifs et principes de base de DNSSEC : authenticit\u00E9, int\u00E9grit\u00E9 et non-r\u00E9pudiation des donn\u00E9es DNS.",
            "Identifier et expliquer les enregistrements DNSSEC essentiels : DNSKEY, RRSIG, DS, NSEC / NSEC3.",
            "Distinguer les deux types de cl\u00E9s utilis\u00E9s en pratique : Key Signing Key (KSK) et Zone Signing Key (ZSK), et comprendre leurs r\u00F4les respectifs.",
            "Comprendre la notion de cha\u00EEne de confiance entre zones parentes et enfants et le r\u00F4le du DS et du trust anchor.",
            "Conna\u00EEtre les bonnes pratiques de gestion des cl\u00E9s : g\u00E9n\u00E9ration, stockage, signature, rotation (rollover) et r\u00E9vocation, en contextes manuel et automatique.",
            "Savoir planifier et ex\u00E9cuter un rollover de ZSK et de KSK en minimisant l\u0027impact sur la r\u00E9solution.",
            "\u00CAtre capable d\u0027\u00E9valuer risques, attaques possibles (p. ex. remplacement de cl\u00E9, downgrade, replay) et mesures d\u0027att\u00E9nuation."
          ],
          "Content": "Pourquoi DNSSEC ? Objectifs et principes\r\nDNSSEC ajoute une couche cryptographique au DNS pour permettre aux r\u00E9solveurs authentiques de v\u00E9rifier que les r\u00E9ponses DNS proviennent bien de la zone autoritative et qu\u0027elles n\u0027ont pas \u00E9t\u00E9 alt\u00E9r\u00E9es en transit. DNSSEC ne chiffre pas les donn\u00E9es : il signe les enregistrements de ressources (RRset) et fournit l\u0027authenticit\u00E9 et l\u0027int\u00E9grit\u00E9 via des signatures num\u00E9riques (RRSIG).\r\n\r\nLes enregistrements DNSSEC essentiels\r\nDNSKEY : contient les cl\u00E9s publiques utilis\u00E9es pour v\u00E9rifier les signatures. RRSIG : signature num\u00E9rique d\u0027un RRset. DS : r\u00E9sum\u00E9 (digest) d\u0027une cl\u00E9 publique d\u0027une zone enfant, publi\u00E9 dans la zone parente pour \u00E9tablir la cha\u00EEne de confiance. NSEC / NSEC3 : permettent de prouver l\u0027absence d\u0027un nom ou d\u0027un type d\u0027enregistrement sans exposer la liste compl\u00E8te des noms (NSEC3 ajoute hashing pour protection contre l\u0027\u00E9num\u00E9ration).\r\n\r\nPrincipe de fonctionnement (cha\u00EEne de confiance)\r\nLa validation commence avec un trust anchor (g\u00E9n\u00E9ralement la cl\u00E9 publique de la racine ou d\u0027une zone configur\u00E9e). Les r\u00E9solveurs valident une zone en v\u00E9rifiant la signature RRSIG \u00E0 l\u0027aide d\u0027une cl\u00E9 DNSKEY. Pour relier la confiance entre parent et enfant, la zone enfant publie sa DNSKEY, la zone parente publie un DS contenant le digest de la DNSKEY enfant ; le r\u00E9solveur v\u00E9rifie que le DS correspond \u00E0 la DNSKEY enfant, ce qui \u00E9tablit la continuit\u00E9 de confiance.\r\n\r\nKSK et ZSK : d\u00E9finitions et diff\u00E9rences\r\nZSK (Zone Signing Key) : cl\u00E9 principalement utilis\u00E9e pour signer les enregistrements de la zone (RRset) et produire les RRSIG. KSK (Key Signing Key) : cl\u00E9 utilis\u00E9e pour signer uniquement l\u0027enregistrement DNSKEY (c\u0027est-\u00E0-dire les cl\u00E9s de la zone). Le DS publi\u00E9 par la zone parente contient le digest de la KSK de la zone enfant dans le mod\u00E8le classique (KSK-centric), ce qui fait de la KSK la cl\u00E9 d\u0027ancrage pour la d\u00E9l\u00E9gation.\r\n\r\nPourquoi s\u00E9parer KSK et ZSK ?\r\nS\u00E9parer les responsabilit\u00E9s permet d\u0027optimiser s\u00E9curit\u00E9 et performances. La ZSK est utilis\u00E9e fr\u00E9quemment (beaucoup de signatures et renouvellements) ; on choisit donc une taille et un cycle de rotation favorisant performance. La KSK est utilis\u00E9e peu souvent (signature de l\u0027ensemble DNSKEY) ; elle peut \u00EAtre plus forte et conserv\u00E9e dans un coffre plus s\u00FBr avec des rotations peu fr\u00E9quentes, r\u00E9duisant l\u0027exposition.\r\n\r\nGestion des cl\u00E9s et rollovers (concepts)\r\nRollover ZSK : type courant, implique g\u00E9n\u00E9rer une nouvelle ZSK, publier sa DNSKEY, signer la zone avec la nouvelle ZSK puis retirer l\u0027ancienne apr\u00E8s p\u00E9riode de propagation. Rollover KSK : plus d\u00E9licat car affecte le DS chez le parent. Processus typique : g\u00E9n\u00E9rer nouvelle KSK, publier sa DNSKEY (double-DNSKEY coexistence), signer DNSKEY avec la nouvelle KSK (ou ancienne selon m\u00E9thode), obtenir mise \u00E0 jour du DS chez parent (via transfert de l\u0027ancien vers le nouveau digest) puis retirer l\u0027ancienne KSK. Il existe plusieurs m\u00E9thodes document\u00E9es par les RFC (double-signature, etc.).\r\n\r\nFlux de travail manuel vs automatique\r\nManuel : l\u0027administrateur cr\u00E9e et stocke cl\u00E9s, lance l\u0027outil de signature, met \u00E0 jour DS chez le registrar, g\u00E8re rollovers manuellement. Automatique : solutions comme OpenDNSSEC ou processus int\u00E9gr\u00E9 aux serveurs DNS g\u00E8rent g\u00E9n\u00E9ration, stockage, signatures p\u00E9riodiques et rollovers selon des politiques. L\u0027automatisation r\u00E9duit erreurs humaines mais n\u00E9cessite confiance dans l\u0027outil et le stockage des cl\u00E9s (HSM recommand\u00E9 pour KSK).\r\n\r\nConsid\u00E9rations op\u00E9rationnelles et bonnes pratiques\r\nUtiliser HSMs pour stocker les KSKs sensibles ; d\u00E9finir politiques de rotation adapt\u00E9es (ZSK plus fr\u00E9quente, KSK moins fr\u00E9quente) ; tester rollovers dans un environnement non productif ; surveiller TTLs et windows de propagation ; maintenir des proc\u00E9dures de r\u00E9cup\u00E9ration et de r\u00E9vocation ; suivre les recommandations de RFC pertinentes (p. ex. RFC 6781, RFC 8078 pour rollovers automatiques).\r\n\r\nRisques et attaques courantes\r\nAttaques : remplacement de cl\u00E9 (si DS compromis), attaques de type downgrade (si validateurs acceptent zones non sign\u00E9es), replay d\u0027anciennes signatures, attaques par vol de cl\u00E9 priv\u00E9e. Mitigations : prot\u00E9ger les cl\u00E9s priv\u00E9es, contr\u00F4ler acc\u00E8s au registrar pour modifications DS, utiliser audit et monitoring, d\u00E9ployer NSEC3 pour limiter l\u0027\u00E9num\u00E9ration.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 Identifier les enregistrements : On vous donne une zone sign\u00E9e. Quels sont les enregistrements DNSSEC que vous recherchez pour v\u00E9rifier la cha\u00EEne de confiance et pourquoi ?",
              "Answer": "Rechercher DNSKEY (contient les cl\u00E9s publiques), RRSIG (signatures des RRset), DS (dans la zone parente pour relier la confiance), et NSEC / NSEC3 (preuves d\u0027absence).",
              "Explanation": "Pour valider, il faut les cl\u00E9s publiques (DNSKEY) et les signatures qui prouvent l\u0027authenticit\u00E9 des RRset (RRSIG). Le DS dans la zone parente relie la cl\u00E9 de la zone enfant \u00E0 la zone parente, \u00E9tablissant la cha\u00EEne. NSEC/NSEC3 servent \u00E0 prouver l\u0027absence d\u0027un nom/type."
            },
            {
              "Instruction": "Exercice 2 \u2014 Qui signe quoi ? Indiquez si la KSK ou la ZSK signe chacun des \u00E9l\u00E9ments suivants : 1) enregistrements A/AAAA/NS/\u2026 d\u0027une zone, 2) l\u0027enregistrement DNSKEY de la zone (la liste des cl\u00E9s publiques), 3) le DS publi\u00E9 dans la zone parente.",
              "Answer": "1) ZSK signe les RRset de la zone (A/AAAA/NS/\u2026). 2) KSK signe l\u0027enregistrement DNSKEY (produit un RRSIG sur le RRset DNSKEY). 3) Le DS est publi\u00E9 par la zone parente ; il n\u0027est pas sign\u00E9 par la zone enfant mais correspond au digest d\u0027une cl\u00E9 (g\u00E9n\u00E9ralement la KSK) \u2014 la KSK est l\u0027\u00E9l\u00E9ment sign\u00E9 c\u00F4t\u00E9 enfant qui se lie au DS c\u00F4t\u00E9 parent.",
              "Explanation": "La s\u00E9paration des cl\u00E9s impose que les signatures des donn\u00E9es de la zone soient faites par la ZSK pour performance. La KSK a pour r\u00F4le sp\u00E9cifique de signer la RRset DNSKEY afin de permettre la d\u00E9l\u00E9gation via le DS. Le DS n\u0027est pas un enregistrement sign\u00E9 dans la zone parente ; il sert d\u0027ancre dans la zone parente."
            },
            {
              "Instruction": "Exercice 3 \u2014 Planifier un rollover ZSK simple : Donnez les \u00E9tapes minimales (ordre chronologique) pour remplacer une ZSK sans casser la validation.",
              "Answer": "1) G\u00E9n\u00E9rer la nouvelle ZSK et publier sa DNSKEY en parall\u00E8le (double-DNSKEY). 2) Signer la zone avec la nouvelle ZSK (la zone contient signatures des deux ZSK pendant transition). 3) Attendre au moins la dur\u00E9e de TTL \u002B dur\u00E9e de propagation des validateurs pour s\u0027assurer que les r\u00E9solveurs voient la nouvelle signature. 4) Retirer l\u0027ancienne ZSK et ses signatures apr\u00E8s la p\u00E9riode de s\u00E9curit\u00E9.",
              "Explanation": "La coexistence des cl\u00E9s (ancienne et nouvelle) pendant la fen\u00EAtre de transition garantit que les r\u00E9solveurs ayant encore en cache les anciennes signatures pourront encore valider. Attendre au moins TTL et p\u00E9riode de signature couvre le temps o\u00F9 des caches utilisent les anciennes donn\u00E9es."
            },
            {
              "Instruction": "Exercice 4 \u2014 Rollover KSK et DS chez le parent : quel est l\u0027\u00E9l\u00E9ment cl\u00E9 \u00E0 coordonner avec le registrar/parent et pourquoi ?",
              "Answer": "Il faut coordonner la mise \u00E0 jour du DS dans la zone parente/chez le registrar pour refl\u00E9ter le digest de la nouvelle KSK. Cette mise \u00E0 jour est critique car sans elle la cha\u00EEne de confiance est rompue et les validateurs \u00E9choueront \u00E0 valider la zone.",
              "Explanation": "Le DS dans la zone parente est ce que les validateurs utilisent pour lier la zone enfant. Lors d\u0027un KSK rollover, si le parent continue d\u0027avoir l\u0027ancien DS alors que la zone ne publie plus la KSK correspondante, la validation \u00E9choue. La coordination (et souvent approbation manuelle chez le registrar) est donc n\u00E9cessaire."
            }
          ]
        },
        {
          "Title": "Politiques de gestion des cl\u00E9s et cycle de vie",
          "Summary": "D\u00E9finition de politiques de cr\u00E9ation, usage, rotation et destruction des cl\u00E9s ; crit\u00E8res pour d\u00E9finir la dur\u00E9e de vie et les strat\u00E9gies de rollover.",
          "EstimatedMinutes": 75,
          "LearningObjectives": [
            "Comprendre les composantes d\u0027une politique de gestion des cl\u00E9s (cr\u00E9ation, usage, rotation, destruction)",
            "Savoir d\u00E9finir des dur\u00E9es de vie adapt\u00E9es pour les cl\u00E9s (KSK vs ZSK) en fonction d\u0027algorithme, taille, TTL et menace",
            "Conna\u00EEtre et distinguer les strat\u00E9gies de rollover (pr\u00E9-publication, double-signature, roll-over d\u0027urgence, automatiques vs manuels)",
            "D\u00E9finir proc\u00E9dures op\u00E9rationnelles : g\u00E9n\u00E9ration s\u00E9curis\u00E9e, stockage, acc\u00E8s, journalisation, tests et reprise apr\u00E8s incident",
            "Int\u00E9grer les contraintes parentales (DS) et les impacts sur le calendrier de rollover",
            "Savoir automatiser de fa\u00E7on s\u00FBre (HSM/KMS, cl\u00E9s de protection, s\u00E9paration des r\u00F4les) et quand pr\u00E9f\u00E9rer une intervention manuelle",
            "Savoir r\u00E9diger et appliquer un plan de destruction s\u00E9curis\u00E9 et d\u0027archivage des preuves (audit)"
          ],
          "Content": "1. Introduction et port\u00E9e\r\nCette section d\u00E9finit l\u0027objectif d\u0027une politique de gestion des cl\u00E9s pour la signature de zones (DNSSEC) : garantir la disponibilit\u00E9 et l\u0027int\u00E9grit\u00E9 des signatures tout en ma\u00EEtrisant le risque li\u00E9 \u00E0 la compromission ou l\u0027obsolescence cryptographique. La politique couvre la g\u00E9n\u00E9ration, l\u0027usage, la rotation (rollover), la r\u00E9vocation/retour d\u0027urgence et la destruction des cl\u00E9s, ainsi que les r\u00F4les, responsabilit\u00E9s et proc\u00E9dures d\u0027audit.\r\n\r\n2. Composantes d\u0027une politique de gestion des cl\u00E9s\r\nUne politique doit inclure : champ d\u0027application (zones, environnements), responsabilit\u00E9s (propri\u00E9taire de cl\u00E9, op\u00E9rateur, auditeur), exigences de s\u00E9curit\u00E9 physique et logique (HSM, KMS, acc\u00E8s multi-personnes), param\u00E8tres cryptographiques (algorithme, taille, param\u00E8tres de g\u00E9n\u00E9ration), dur\u00E9e de vie, strat\u00E9gie de rollover, proc\u00E9dures d\u0027urgence, journalisation et conservation des preuves, et processus de test et de v\u00E9rification.\r\n\r\n3. G\u00E9n\u00E9ration et cr\u00E9ation des cl\u00E9s\r\nPrincipes : g\u00E9n\u00E9rer les cl\u00E9s dans un environnement de confiance (HSM/KMS ou machine verrouill\u00E9e), utiliser des g\u00E9n\u00E9rateurs certifi\u00E9s, appliquer une s\u00E9paration des fonctions (au moins deux op\u00E9rateurs pour extraction de mat\u00E9riel sensible), enregistrer m\u00E9tadonn\u00E9es (date, op\u00E9rateur, algorithme, identifiant), \u00E9tablir provenance et preuve d\u0027int\u00E9grit\u00E9. Param\u00E8tres \u00E0 choisir : algorithme (RSA, ECDSA, ED25519...), taille (2048/3072 pour RSA, courbes recommand\u00E9es pour ECC), et flags DNSSEC (KSK vs ZSK).\r\n\r\n4. Usage des cl\u00E9s : KSK vs ZSK et bonnes pratiques\r\nDistinguer KSK (Key Signing Key) signant uniquement les cl\u00E9s publiques de la zone (et dont le DS est publi\u00E9 au parent) et ZSK (Zone Signing Key) signant les enregistrements de la zone. Bonnes pratiques : limiter l\u0027exposition du KSK (usage minimal, rotation moins fr\u00E9quente), laisser le ZSK changer plus souvent pour r\u00E9duire la fen\u00EAtre de compromission. Restreindre l\u0027utilisation aux finalit\u00E9s pr\u00E9vues, surveiller l\u0027utilisation et interdire exportations non autoris\u00E9es des cl\u00E9s priv\u00E9es.\r\n\r\n5. Crit\u00E8res pour d\u00E9finir la dur\u00E9e de vie des cl\u00E9s\r\nFacteurs \u00E0 consid\u00E9rer : algorithme et taille de cl\u00E9 (forces cryptographiques), cadence de menace (menaces externes et internes), volume et sensibilit\u00E9 des donn\u00E9es sign\u00E9es, TTLs DNS (impact sur propagation), d\u00E9lai d\u0027actualisation DS au parent, complexit\u00E9 op\u00E9rationnelle (d\u00E9lais d\u0027approbation), exigence r\u00E9glementaire ou contractuelle, capacit\u00E9 d\u0027automatisation et co\u00FBts. Exemple : ZSK courtes dur\u00E9es (90-180 jours) si automatis\u00E9 ; KSK plus longues (1-4 ans) selon politique et contrainte DS.\r\n\r\n6. Strat\u00E9gies de rollover (proc\u00E9dures et modes)\r\nRollover planifi\u00E9 : pr\u00E9-publication (publier nouvelle cl\u00E9 publique avant de commencer \u00E0 l\u0027utiliser), double-signature (signer avec ancienne et nouvelle pendant p\u00E9riode de transition), retrait (arr\u00EAter d\u0027utiliser l\u0027ancienne puis la supprimer apr\u00E8s d\u00E9lai s\u00FBr). Rollover KSK implique coordination avec le parent (mise \u00E0 jour du DS) et n\u00E9cessite fen\u00EAtres temporelles plus larges. Strat\u00E9gies automatiques : gestion via CD/CI,d\u00E9ploiement orchestration et HSM APIs ; manuelles : proc\u00E9dure pas-\u00E0-pas et contr\u00F4les d\u0027acc\u00E8s humains. Rollover d\u0027urgence : r\u00E9voquer imm\u00E9diatement, publier des records NSEC/NSEC3 si n\u00E9cessaire, demander retrait du DS au parent si compromis du KSK.\r\n\r\n7. \u00C9tapes d\u00E9taill\u00E9es d\u0027un rollover KSK (exemple standard)\r\n1) G\u00E9n\u00E9rer nouvelle KSK et pr\u00E9-publier la cl\u00E9 publique dans la zone (CDS/CSYNC/manifest selon prise en charge). 2) Demander au parent d\u0027ajouter le DS correspondant et attendre confirmation. 3) Une fois DS actif au parent et propagation suffisante (plusieurs fois le TTL parent/zone), signer la zone avec la nouvelle KSK (double-signature si n\u00E9cessaire). 4) Retirer l\u0027ancienne KSK apr\u00E8s fen\u00EAtre de chevauchement. 5) R\u00E9voquer et d\u00E9truire l\u0027ancienne cl\u00E9 selon proc\u00E9dure s\u00E9curis\u00E9e et tenir un journal d\u0027\u00E9v\u00E9nements.\r\n\r\n8. Rollover ZSK : pratique et calendrier\r\nZSK peut \u00EAtre roul\u00E9 plus fr\u00E9quemment et souvent automatiquement. M\u00E9thode courante : pr\u00E9-publier la nouvelle ZSK en l\u0027ajoutant \u00E0 la cl\u00E9set, re-signer la zone avec nouvelle ZSK (double-signature), attendre la p\u00E9riode de remise \u00E0 jour des caches (quelques TTL), puis supprimer l\u0027ancienne ZSK. Quand TTLs sont courts, les rotations peuvent \u00EAtre fr\u00E9quentes ; si TTLs longs, planifier fenetres de chevauchement plus longues. V\u00E9rifier la compatibilit\u00E9 des validateurs et des caches.\r\n\r\n9. S\u00E9curisation du stockage et acc\u00E8s aux cl\u00E9s\r\nUtiliser HSM ou KMS afin d\u0027emp\u00EAcher extraction non autoris\u00E9e des cl\u00E9s priv\u00E9es. Appliquer contr\u00F4le d\u0027acc\u00E8s minimal, s\u00E9paration des t\u00E2ches (cr\u00E9ateur, op\u00E9rateur, auditeur), approbation multi-signatures pour actions sensibles (g\u00E9n\u00E9ration, export, destruction). Chiffrement des sauvegardes, gestion des cl\u00E9s de chiffrement de sauvegarde et rotation. Journalisation immuable (logs horodat\u00E9s sign\u00E9s) et audits r\u00E9guliers.\r\n\r\n10. Destruction et archivage\r\nProc\u00E9dure de fin de vie : marquer cl\u00E9 comme retir\u00E9e, interrompre toute utilisation, supprimer traces de d\u00E9ploiement, ex\u00E9cuter destruction s\u00E9curis\u00E9e selon m\u00E9dias (HSM purge, effacement conforme standards RGPD/ISO), conserver m\u00E9tadonn\u00E9es d\u0027audit (qui, quand, pourquoi) pendant p\u00E9riode d\u00E9finie. Ne pas conserver cl\u00E9 priv\u00E9e en clair ; l\u0027archivage doit \u00EAtre limit\u00E9 aux preuves n\u00E9cessaires et chiffr\u00E9.\r\n\r\n11. Automatisation vs op\u00E9rations manuelles\r\nAutomatisation r\u00E9duit erreurs humaines et permet rotations fr\u00E9quentes (ex : ZSK auto tous les 30-90 jours). N\u00E9cessite pipeline s\u00E9curis\u00E9 (CI/CD, HSM APIs, signatures d\u0027acteurs). Maintenir proc\u00E9dures manuelles pour rollovers KSK ou situations d\u0027urgence ou lorsque le parent exige action humaine. Tester r\u00E9guli\u00E8rement les processus automatis\u00E9s en environnement de pr\u00E9-production.\r\n\r\n12. Journalisation, tests et audits\r\nConserver journaux d\u0027op\u00E9rations sur g\u00E9n\u00E9rations/rotations/destructions, signatures et modifications DNS, preuves d\u0027approbation et interactions avec le parent (DS). Effectuer tests de rollover simul\u00E9s, v\u00E9rifier r\u00E9versibilit\u00E9 (plan de r\u00E9tablissement) et valider backups/keys escrow. Audits p\u00E9riodiques (internes/externes) pour conformit\u00E9 aux politiques.\r\n\r\n13. Sc\u00E9narios d\u0027incident et plan d\u0027urgence\r\nD\u00E9finir proc\u00E9dures en cas de compromission : \u00E9valuer port\u00E9e, ex\u00E9cuter rollback ou rollover d\u0027urgence, coordonner avec registrar/parent pour suppression du DS si KSK compromis, communiquer avec parties prenantes, r\u00E9\u00E9mettre signatures, et mener post-mortem. Avoir playbooks clairs et contacts d\u0027urgence.\r\n\r\n14. Exemple de dur\u00E9es et r\u00E8gles pratiques (exemples indicatifs)\r\nExemples couramment utilis\u00E9s (\u00E0 adapter au contexte) : ZSK automatique : 30-180 jours (si automatis\u00E9), ZSK manuel : 180-365 jours ; KSK : 1-4 ans selon exigence DS et capacit\u00E9 d\u0027approbation ; Fen\u00EAtre de chevauchement : 2-4 fois le TTL de la zone ; D\u00E9lai d\u0027attente apr\u00E8s d\u00E9p\u00F4t DS au parent : jusqu\u0027\u00E0 2-3 fois le TTL parent ou selon SLA registrar. Ces valeurs doivent \u00EAtre valid\u00E9es par l\u0027analyse de risque organisationnelle.\r\n\r\n15. R\u00E9daction op\u00E9rationnelle d\u0027une politique - checklist\r\nChecklist pour formaliser une politique : 1) port\u00E9e et autorit\u00E9s, 2) param\u00E8tres cryptographiques, 3) dur\u00E9e de vie et calendrier de rollover, 4) proc\u00E9dures d\u00E9taill\u00E9es pour g\u00E9n\u00E9ration/stockage/usage/rotation/destruction, 5) r\u00F4les et approbations, 6) int\u00E9gration avec parent (DS), 7) automatisation et tests, 8) journalisation et audits, 9) communication et proc\u00E9dures d\u0027incident, 10) r\u00E9visions p\u00E9riodiques de la politique.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Vous g\u00E9rez une zone DNS avec TTL de 3600s. Vous utilisez ECDSA P-256 pour ZSK et ED25519 pour KSK. Proposez des dur\u00E9es de vie (en jours) recommand\u00E9es pour ZSK et KSK et justifiez bri\u00E8vement.",
              "Answer": "ZSK : 90 jours. KSK : 730 jours (2 ans).",
              "Explanation": "ECDSA P-256 a bonne s\u00E9curit\u00E9 et permet rotations fr\u00E9quentes ; avec TTL 3600s un chevauchement de quelques heures est suffisant, donc ZSK \u00E0 90 jours est raisonnable si automatis\u00E9. ED25519 est plus r\u00E9sistant, et KSK n\u00E9cessite coordination avec le parent (DS), donc une dur\u00E9e plus longue (2 ans) r\u00E9duit la fr\u00E9quence des op\u00E9rations sensibles tout en restant prudente face \u00E0 l\u0027\u00E9volution des menaces."
            },
            {
              "Instruction": "D\u00E9crivez les \u00E9tapes cl\u00E9s pour effectuer un rollover KSK planifi\u00E9 impliquant une mise \u00E0 jour du DS aupr\u00E8s du parent (ordre chronologique).",
              "Answer": "1) G\u00E9n\u00E9rer nouvelle KSK dans un HSM et enregistrer m\u00E9tadonn\u00E9es. 2) Pr\u00E9-publier la nouvelle cl\u00E9 publique dans la zone (exposer la cl\u00E9 publique au parent via CDS/CSYNC ou fournir DS). 3) Demander au parent d\u0027ajouter le DS correspondant et attendre confirmation/propgation. 4) Apr\u00E8s propagation suffisante (selon TTL et SLA), commencer \u00E0 signer la zone avec la nouvelle KSK (double-signature si besoin). 5) Retirer l\u0027ancienne KSK apr\u00E8s fen\u00EAtre de chevauchement. 6) R\u00E9voquer et d\u00E9truire l\u0027ancienne cl\u00E9 et consigner toutes les op\u00E9rations.",
              "Explanation": "La s\u00E9quence garantit que les validateurs disposent du DS au parent avant que la KSK active ne devienne indispensable. Le chevauchement r\u00E9duit les risques d\u0027\u00E9chec de validation pendant la transition."
            },
            {
              "Instruction": "Sc\u00E9nario : vous suspectez la compromission d\u0027une ZSK. Quelles actions imm\u00E9diates prenez-vous et pourquoi ?",
              "Answer": "Actions : 1) Retirer imm\u00E9diatement la cl\u00E9 compromise de l\u0027utilisation (ne plus signer avec). 2) G\u00E9n\u00E9rer une nouvelle ZSK dans un HSM s\u00E9curis\u00E9. 3) Pr\u00E9-publier et activer la nouvelle ZSK en re-signant la zone (double-signature si possible). 4) Publier des informations de compromission si exig\u00E9 et effectuer post-mortem. 5) Auditer acc\u00E8s et restaurer proc\u00E9dures pour emp\u00EAcher nouvelle compromission.",
              "Explanation": "La priorit\u00E9 est de stopper la diffusion de signatures issues de la cl\u00E9 compromise et de r\u00E9tablir l\u0027int\u00E9grit\u00E9 en rempla\u00E7ant la cl\u00E9. Le ZSK n\u0027implique pas forc\u00E9ment le parent (DS), donc le remplacement peut \u00EAtre rapide. L\u0027audit permet de comprendre la fuite et corriger la proc\u00E9dure."
            },
            {
              "Instruction": "Donnez trois crit\u00E8res techniques et deux crit\u00E8res organisationnels \u00E0 \u00E9valuer pour choisir la dur\u00E9e de vie d\u0027une cl\u00E9.",
              "Answer": "Crit\u00E8res techniques : algorithme et taille de cl\u00E9 (force cryptographique), TTL de la zone (impact sur propagation), et exigence de compatibilit\u00E9/interop\u00E9rabilit\u00E9. Crit\u00E8res organisationnels : capacit\u00E9 d\u0027op\u00E9ration (automatisation vs proc\u00E9dures manuelles) et exigences r\u00E9glementaires ou contractuelles.",
              "Explanation": "Les crit\u00E8res techniques d\u00E9terminent la r\u00E9sistance cryptographique et l\u0027impact op\u00E9rationnel du rollover ; les crit\u00E8res organisationnels d\u00E9finissent la faisabilit\u00E9 et les contraintes pratiques de mettre en oeuvre la fr\u00E9quence de rotation choisie."
            }
          ]
        },
        {
          "Title": "G\u00E9n\u00E9ration des cl\u00E9s KSK et ZSK avec dnssec-keygen",
          "Summary": "Ateliers pratiques sur la g\u00E9n\u00E9ration de cl\u00E9s avec dnssec-keygen, choix des algorithmes et longueurs, et compr\u00E9hension des param\u00E8tres de s\u00E9curit\u00E9.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Comprendre la diff\u00E9rence de r\u00F4le entre KSK (Key Signing Key) et ZSK (Zone Signing Key).",
            "Savoir choisir un algorithme et une longueur de cl\u00E9 adapt\u00E9s aux contraintes de s\u00E9curit\u00E9 et performance.",
            "Ma\u00EEtriser les options fondamentales de l\u0027outil dnssec-keygen pour g\u00E9n\u00E9rer des cl\u00E9s KSK et ZSK.",
            "Interpr\u00E9ter les fichiers produits (fichiers .key et .private) et les flags DNSKEY (SEP/KSK).",
            "Conna\u00EEtre les bonnes pratiques op\u00E9rationnelles (rouleaux de cl\u00E9s, utilisation de HSM/entropie, publication des DNSKEY).",
            "Pouvoir diagnostiquer des probl\u00E8mes courants li\u00E9s \u00E0 la g\u00E9n\u00E9ration et \u00E0 l\u2019int\u00E9gration des cl\u00E9s DNSSEC."
          ],
          "Content": "Introduction et contexte\r\nDnssec-keygen est l\u0027outil historique fourni avec BIND pour g\u00E9n\u00E9rer des paires de cl\u00E9s DNSSEC (fichiers .key et .private). Dans une strat\u00E9gie de signature de zone, on distingue la KSK (Key Signing Key) qui signe l\u0027ensemble des enregistrements DNSKEY de la zone et la ZSK (Zone Signing Key) qui signe les autres RRset de la zone. La s\u00E9paration permet d\u0027optimiser la s\u00E9curit\u00E9 (KSK plus prot\u00E9g\u00E9e, rollovers moins fr\u00E9quents) et la performance (ZSK rotation plus fr\u00E9quente).\r\n\r\nR\u00F4les : KSK vs ZSK\r\nKSK : signe uniquement l\u0027ensemble DNSKEY. Doit \u00EAtre stock\u00E9e avec un niveau \u00E9lev\u00E9 de protection (HSM recommand\u00E9), chang\u00E9e rarement (p. ex. annuel). ZSK : signe les autres RRset de la zone, changement plus fr\u00E9quent (p. ex. tous les 1\u20133 mois). Les DNS resolvers utilisent la DS (delegation signer) publi\u00E9e au parent, qui r\u00E9f\u00E9rence la KSK (ou sa cl\u00E9 publique).\r\n\r\nOptions essentielles de dnssec-keygen\r\nSyntaxe de base : dnssec-keygen -a \u003Calgorithme\u003E -b \u003Cbits\u003E -n ZONE [-f KSK] \u003Cnom_de_zone\u003E\n- -a : algorithme (RSASHA256, RSASHA512, ECDSAP256SHA256, ECDSAP384SHA384, ED25519, ED448, etc.)\n- -b : taille en bits (pour RSA), pour ECDSA/Ed ne changez g\u00E9n\u00E9ralement pas la taille\n- -n ZONE : type d\u0027objet g\u00E9n\u00E9r\u00E9 (ZONE pour les cl\u00E9s de zone)\n- -f KSK : indique que la cl\u00E9 doit \u00EAtre marqu\u00E9e SEP/KSK (sinon c\u0027est une ZSK)\n- -r \u003Cfichier\u003E : sp\u00E9cifier une source d\u0027entropie (optionnel selon la version)\nLes commandes produisent deux fichiers : K\u003Czone\u003E\u002B\u003Calg\u003E\u002B\u003Cid\u003E.key et K\u003Czone\u003E\u002B\u003Calg\u003E\u002B\u003Cid\u003E.private.\r\n\r\nChoix d\u0027algorithme et tailles recommand\u00E9es (2025)\r\nAlgorithmes modernes recommand\u00E9s :\n- Ed25519 : s\u00E9curit\u00E9 \u00E9lev\u00E9e, petite taille, performances excellentes \u2014 tr\u00E8s recommand\u00E9 si support\u00E9.\n- ECDSA P-256 (ECDSAP256SHA256) : bon compromis s\u00E9curit\u00E9/perf.\n- RSA (RSASHA256 / RSASHA512) : compatibilit\u00E9 maximale, mais cl\u00E9s plus volumineuses et signatures plus lentes.\nTailles usuelles :\n- ZSK (RSA) : 2048 bits si on utilise RSA ; auparavant 1024 \u00E9tait courant mais n\u0027est plus recommand\u00E9.\n- KSK (RSA) : 2048 \u00E0 4096 bits selon le niveau de s\u00E9curit\u00E9 souhait\u00E9 (4096 = plus s\u00FBr mais plus lent et plus volumineux).\n- ECDSA/Ed : utiliser les tailles natives (P-256 / P-384 / Ed25519) \u2014 pas de bits personnalis\u00E9s.\nConseil : privil\u00E9gier Ed25519 ou ECDSA si l\u0027\u00E9cosyst\u00E8me (registrar, parent, r\u00E9solveurs) les supporte.\r\n\r\nExemples de commandes pratiques\r\nG\u00E9n\u00E9rer une ZSK RSA 2048 pour example.com :\n dnssec-keygen -a RSASHA256 -b 2048 -n ZONE example.com\nG\u00E9n\u00E9rer une KSK RSA 4096 pour example.com :\n dnssec-keygen -a RSASHA256 -b 4096 -n ZONE -f KSK example.com\nG\u00E9n\u00E9rer une KSK Ed25519 :\n dnssec-keygen -a ED25519 -n ZONE -f KSK example.com\nG\u00E9n\u00E9rer une ZSK ECDSA P-256 :\n dnssec-keygen -a ECDSAP256SHA256 -n ZONE example.com\nRemarques : les noms de fichiers cr\u00E9\u00E9s auront le pr\u00E9fixe K et contiendront l\u0027identifiant d\u0027algorithme et un keytag (id). Le fichier .key contient la cl\u00E9 publique \u00E0 publier dans la zone, le .private contient la cl\u00E9 priv\u00E9e \u00E0 prot\u00E9ger.\r\n\r\nPublication et flags DNSKEY\r\nApr\u00E8s g\u00E9n\u00E9ration :\n- Publier le contenu du fichier .key dans la zone (ajouter l\u0027enregistrement DNSKEY dans la zone). Pour une KSK, le flag SEP (Secure Entry Point) doit \u00EAtre pr\u00E9sent (dnssec-keygen -f KSK le marque automatiquement).\n- Calculer et soumettre la DS aupr\u00E8s du parent (registrar) selon la politique (g\u00E9n\u00E9ralement \u00E0 partir de la KSK). Le DS est le lien de confiance entre parent et enfant.\n- S\u0027assurer que BIND (ou autre signer) utilise la cl\u00E9 priv\u00E9e .private pour signer la zone. Outils comme dnssec-signzone prendront les cl\u00E9s publi\u00E9es localement pour produire un fichier sign\u00E9 (.signed).\r\n\r\nAspects op\u00E9rationnels : rollovers et gestion de cl\u00E9s\r\nRollover ZSK : fr\u00E9quence plus \u00E9lev\u00E9e ; proc\u00E9der par publication de la nouvelle ZSK, signer, promouvoir, puis retirer l\u0027ancienne apr\u00E8s une p\u00E9riode de confiance.\nRollover KSK : plus d\u00E9licat car implique le parent (update DS). Deux strat\u00E9gies : double-signing (introduire la nouvelle KSK en plus de l\u0027ancienne, publier DS du nouveau au parent, puis retirer l\u0027ancienne) ou RFC-compliant procedure ; planifiez windows temporelles (propagation DNS, TTLs, latences). Toujours tester dans un environnement non critique avant production.\nHSM : pour KSK (fortement recommand\u00E9). Stockage s\u00E9curis\u00E9, op\u00E9rations de signature hors ligne possible. Assurez-vous que dnssec-keygen / signer supporte l\u0027int\u00E9gration HSM (pkcs11...).\r\n\r\nS\u00E9curit\u00E9, entropie et bonnes pratiques\r\n- Utiliser un g\u00E9n\u00E9rateur d\u0027entropie fiable (kernel RNG, /dev/random ou HSM) ; \u00E9viter les g\u00E9n\u00E9rateurs faibles.\n- Restreindre les permissions sur les fichiers .private (lecture seule root ou processus du signer).\n- Documenter politiques de rotation, proc\u00E9dures d\u0027urgence (compromission de cl\u00E9), et tests de restauration.\n- Tenir un inventaire des cl\u00E9s et de leurs p\u00E9riodes de validit\u00E9. Automatiser la g\u00E9n\u00E9ration et le rollover si possible via des outils g\u00E9rant l\u0027orchestration (ex : OpenDNSSEC, scripts robustes).\r\n\r\nV\u00E9rification et d\u00E9pannage\r\nV\u00E9rifier les cl\u00E9s cr\u00E9\u00E9es : inspecter les fichiers .key (contenu RDATA) et .private. Utiliser dnssec-dsfromkey pour g\u00E9n\u00E9rer le DS \u00E0 transmettre au registrar : dnssec-dsfromkey Kexample.com.\u002B008\u002B12345.key\nContr\u00F4les courants : flags DNSKEY (256 pour ZSK, 257 pour KSK/SEP), algorithme, keytag, correspondance entre .key et .private. En cas d\u0027erreur de signature, v\u00E9rifier que le signer a acc\u00E8s \u00E0 la cl\u00E9 priv\u00E9e et que les permissions sont correctes.\r\n\r\nSynth\u00E8se et recommandations rapides\r\n- Pour une nouvelle zone : privil\u00E9gier Ed25519 ou ECDSA si compatibles ; sinon utiliser RSA (2048 ZSK, 2048\u20134096 KSK).\n- Marquer explicitement la KSK avec -f KSK et prot\u00E9ger le fichier .private.\n- Planifier les rollovers (ZSK fr\u00E9quence \u00E9lev\u00E9e, KSK moins fr\u00E9quent) et documenter la proc\u00E9dure de publication du DS.\n- Utiliser HSM pour les KSK en production critique.\n- Tester toujours les proc\u00E9dures de rollover et de reprise sur un environnement de test avant d\u00E9ploiement.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Commande : g\u00E9n\u00E9rez (virtuellement) une KSK Ed25519 et une ZSK RSA 2048 pour la zone example.net avec dnssec-keygen. Indiquez les commandes exactes \u00E0 lancer et les fichiers attendus en sortie.",
              "Answer": "Commande KSK Ed25519 : dnssec-keygen -a ED25519 -n ZONE -f KSK example.net\nCommande ZSK RSA 2048 : dnssec-keygen -a RSASHA256 -b 2048 -n ZONE example.net\nFichiers attendus (exemples de pattern) : Kexample.net\u002B\u003Calgnum\u003E\u002B\u003Ckeyid\u003E.key et Kexample.net\u002B\u003Calgnum\u003E\u002B\u003Ckeyid\u003E.private (deux fichiers par cl\u00E9).",
              "Explanation": "La commande -a sp\u00E9cifie l\u0027algorithme, -b la taille (pour RSA), -n ZONE indique qu\u0027on cr\u00E9e une cl\u00E9 de zone, et -f KSK marque la cl\u00E9 comme KSK/SEP. L\u0027outil cr\u00E9e un couple .key (publique) et .private (priv\u00E9e). Les identifiants algnum/keyid sont g\u00E9n\u00E9r\u00E9s automatiquement et varient \u00E0 chaque ex\u00E9cution."
            },
            {
              "Instruction": "Comment produire le DS \u00E0 transmettre au registrar \u00E0 partir d\u0027un fichier .key produit par dnssec-keygen ? Indiquez la commande et son but.",
              "Answer": "Utiliser : dnssec-dsfromkey Kexample.net\u002B008\u002B12345.key (remplacer par le nom r\u00E9el du fichier .key).\nBut : la commande g\u00E9n\u00E8re l\u0027enregistrement DS (digest) qui doit \u00EAtre fourni au registrar/parent pour \u00E9tablir la cha\u00EEne de confiance entre parent et zone enfant.",
              "Explanation": "dnssec-dsfromkey calcule le digest (SHA-1, SHA-256 ou SHA-384 selon options) du DNSKEY public et formate l\u0027enregistrement DS pr\u00EAt \u00E0 \u00EAtre publi\u00E9 chez le registrar. Le DS r\u00E9f\u00E8re normalement \u00E0 la KSK (cl\u00E9 signant les DNSKEY)."
            },
            {
              "Instruction": "Exercice conceptuel : vous avez une ZSK RSA 2048 et une KSK RSA 4096. Expliquez pourquoi on ne veut pas renouveler la KSK aussi souvent que la ZSK et donnez une fr\u00E9quence courante de rollover pour chaque.",
              "Answer": "La KSK est la racine de confiance (via DS au parent) ; la changer implique coordination avec le parent et des windows de propagation plus longues. Le KSK doit \u00EAtre fortement prot\u00E9g\u00E9, id\u00E9alement en HSM. Fr\u00E9quences courantes : ZSK tous les 1\u20133 mois (voire 90 jours), KSK tous les 1 an ou 2\u20133 ans selon politique et contraintes op\u00E9rationnelles.",
              "Explanation": "Renouveler fr\u00E9quemment la KSK augmente la complexit\u00E9 op\u00E9rationnelle (update DS, double-signing, risques d\u0027erreurs). La ZSK peut \u00EAtre chang\u00E9e plus souvent pour limiter l\u0027exposition des cl\u00E9s signantes r\u00E9guli\u00E8res tout en gardant la KSK stable comme point de confiance."
            },
            {
              "Instruction": "Vous trouvez un fichier .private avec des permissions publiques (par ex. 0644). Quelle est la bonne action et pourquoi ?",
              "Answer": "Restreindre imm\u00E9diatement les permissions (p. ex. chmod 0600 Kzone\u002B... .private) et limiter la propri\u00E9t\u00E9 au compte du service de signature ou root. V\u00E9rifier les logs et envisager un rollover si la cl\u00E9 priv\u00E9e a pu \u00EAtre compromise.",
              "Explanation": "Les fichiers .private contiennent la cl\u00E9 priv\u00E9e de signature ; si accessibles \u00E0 d\u0027autres comptes, il y a un risque de compromission. Une fois les permissions corrig\u00E9es, \u00E9valuer si un compromis a eu lieu et si un rollover doit \u00EAtre d\u00E9clench\u00E9 pour \u00E9viter une attaque avec la cl\u00E9 expos\u00E9e."
            }
          ]
        },
        {
          "Title": "Rotation et rollover des cl\u00E9s : proc\u00E9dures KSK et ZSK",
          "Summary": "Proc\u00E9dure d\u00E9taill\u00E9e de rollover (in-band/out-of-band), \u00E9tapes pour remplacer KSK et ZSK sans casser la cha\u00EEne de confiance, et planification des op\u00E9rations.",
          "EstimatedMinutes": 30,
          "LearningObjectives": [],
          "Content": "Contenu default",
          "Exercises": []
        },
        {
          "Title": "Strat\u00E9gies de stockage s\u00E9curis\u00E9 des cl\u00E9s (HSM, tupes, chiffrage)",
          "Summary": "Comparaison des options de stockage (HSM, modules logiciels, smartcards, fichiers chiffr\u00E9s), bonnes pratiques d\u0027acc\u00E8s, sauvegarde et contr\u00F4le d\u0027acc\u00E8s.",
          "EstimatedMinutes": 75,
          "LearningObjectives": [
            "Comprendre les principales options de stockage de cl\u00E9s (HSM, tokens/smartcards, modules logiciels, fichiers chiffr\u00E9s) et leurs compromis en termes de s\u00E9curit\u00E9, co\u00FBt et op\u00E9rabilit\u00E9.",
            "Savoir appliquer les bonnes pratiques d\u0027acc\u00E8s et de s\u00E9paration des r\u00F4les pour r\u00E9duire le risque de compromission des cl\u00E9s.",
            "\u00CAtre capable de d\u00E9finir une strat\u00E9gie de sauvegarde et de r\u00E9cup\u00E9ration s\u00E9curis\u00E9e des cl\u00E9s incluant chiffrage, redondance et tests r\u00E9guliers.",
            "Conna\u00EEtre les contr\u00F4les d\u0027acc\u00E8s, l\u0027audit et les mesures op\u00E9rationnelles (rotation, p\u00E9riodicit\u00E9, r\u00E9activit\u00E9 en cas d\u0027incident) pour la gestion des cl\u00E9s de signature de zones.",
            "Pouvoir choisir et justifier une solution adapt\u00E9e \u00E0 un contexte (exigences de conformit\u00E9, budget, performance, automatisation) et r\u00E9diger une proc\u00E9dure op\u00E9rationnelle."
          ],
          "Content": "1) Vue d\u0027ensemble : r\u00F4le et exigences pour le stockage des cl\u00E9s\r\nLes cl\u00E9s de signature (ex. DNSSEC KSK/ZSK, cl\u00E9s de CA, cl\u00E9s d\u0027authentification) exigent confidentialit\u00E9, int\u00E9grit\u00E9 et disponibilit\u00E9. Le stockage doit emp\u00EAcher l\u0027extraction non autoris\u00E9e des cl\u00E9s priv\u00E9es, permettre l\u0027usage autoris\u00E9 (signer) et assurer r\u00E9cup\u00E9ration en cas de perte mat\u00E9rielle ou op\u00E9rateur. Les exigences pratiques incluent: protection contre vol/exfiltration, s\u00E9paration des pouvoirs, tra\u00E7abilit\u00E9 des op\u00E9rations, capacit\u00E9s d\u0027automatisation (API si rotation automatique), et conformit\u00E9 aux politiques (ex : conformit\u00E9 r\u00E9glementaire ou audits).\r\n\r\n2) Comparaison des options de stockage\r\nHSM (Hardware Security Module): fournit un environnement mat\u00E9riel s\u00E9curis\u00E9 pour la g\u00E9n\u00E9ration, stockage et op\u00E9rations cryptographiques sans exposer la cl\u00E9 priv\u00E9e. Avantages: tr\u00E8s \u00E9lev\u00E9 niveau de s\u00E9curit\u00E9, performance pour signatures, certification FIPS/CC possible, gestion de politiques d\u0027acc\u00E8s. Inconv\u00E9nients: co\u00FBt, complexit\u00E9 d\u0027int\u00E9gration, d\u00E9pendance mat\u00E9rielle.\nTokens / Smartcards / USB tokens: forme de HSM minimaliste ou p\u00E9riph\u00E9rique PKCS#11/PKCS#15. Avantages: portabilit\u00E9, co\u00FBt inf\u00E9rieur, bon pour cl\u00E9s d\u0027op\u00E9rateur/administrateur. Inconv\u00E9nients: limites de performance, facilit\u00E9 de perte physique, parfois moins robuste que HSM r\u00E9seau.\nModules logiciels (cl\u00E9 dans le syst\u00E8me de fichiers / KMIP without HSM): flexibilit\u00E9 et co\u00FBt faible, facile \u00E0 int\u00E9grer et \u00E0 automatiser. Risque: la cl\u00E9 est accessible au syst\u00E8me h\u00F4te; n\u00E9cessite durcissement, chiffrement et contr\u00F4les d\u0027acc\u00E8s stricts pour se rapprocher d\u0027un HSM.\nFichiers chiffr\u00E9s / key wrapping: la cl\u00E9 priv\u00E9e est stock\u00E9e chiffr\u00E9e (par exemple AES-GCM) avec une cl\u00E9 de wrapping stock\u00E9e s\u00E9par\u00E9ment (mot de passe, HSM, KMS). Avantages: solution simple, portable, facile \u00E0 sauvegarder. Inconv\u00E9nients: s\u00E9curit\u00E9 d\u00E9pend de la protection de la cl\u00E9 de wrapping; gestion des mots de passe et des secrets devient critique.\nCrit\u00E8res de choix: niveau de menace, volume et latence des op\u00E9rations, co\u00FBts, besoins d\u0027audit, redondance g\u00E9ographique, exigences de conformit\u00E9, facilit\u00E9 d\u0027automatisation.\r\n\r\n3) HSM \u2014 bonnes pratiques d\u0027usage\r\nS\u00E9lection et configuration: pr\u00E9f\u00E9rer HSM certifi\u00E9s (FIPS 140-2/3, Common Criteria) si requis par la politique. Choisir mod\u00E8le (on-premises, appliance r\u00E9seau ou cloud HSM) selon latence et disponibilit\u00E9.\nGestion des cl\u00E9s: g\u00E9n\u00E9ration \u00E0 l\u0027int\u00E9rieur du HSM, cl\u00E9s non exportables si possible, d\u00E9finir politiques de cl\u00E9 (usage, dur\u00E9e de vie, rotation). Utiliser modules PKCS#11/PKCS#11-over-network ou interfaces g\u00E9r\u00E9es par fournisseur.\nS\u00E9curit\u00E9 op\u00E9rationnelle: s\u00E9paration des r\u00F4les (administrateur d\u0027HSM, op\u00E9rateur de signature, auditeur), authentification multi-personne (MFA ou quorum pour op\u00E9rations sensibles), journalisation immuable des actions et int\u00E9gration SIEM. Proc\u00E9dures de maintenance et mises \u00E0 jour test\u00E9es en environnement contr\u00F4l\u00E9.\nHaute disponibilit\u00E9: redondance active/passive ou clustering selon l\u0027offre; attention \u00E0 la r\u00E9plication des cl\u00E9s (r\u00E9plication s\u00E9curis\u00E9e, audits) afin d\u0027\u00E9viter surface d\u0027attaque accrue.\r\n\r\n4) Smartcards et tokens \u2014 utilisations et limites\r\nSont adapt\u00E9s pour l\u0027authentification des personnes et la signature \u00E0 faible volume. Bon usage: stockage d\u0027identit\u00E9s d\u0027op\u00E9rateurs, protection de cl\u00E9s d\u0027acc\u00E8s admin, usage pour op\u00E9rations manuelles de mise \u00E0 jour (ex : rotation manuelle de KSK). Limites: fragilit\u00E9, risque de perte, n\u00E9cessit\u00E9 de PIN/PIN retry lock, performances limit\u00E9es pour signatures en masse. Les proc\u00E9dures doivent inclure inventaire des tokens, proc\u00E9dures de d\u00E9sactivation imm\u00E9diate en cas de perte, et respect du principe de moindre privil\u00E8ge.\r\n\r\n5) Fichiers chiffr\u00E9s et key wrapping \u2014 pattern op\u00E9rationnel\r\nStocker la cl\u00E9 priv\u00E9e dans un fichier chiffr\u00E9 est courant pour d\u00E9ploiements simples ou automatiques. Points cl\u00E9s: utiliser algorithmes modernes (ex : AES-GCM ou AES-SIV), gestion rigoureuse des IV/nonce, prot\u00E9ger la cl\u00E9 de chiffrement (wrapping key) dans un composant plus s\u00FBr (HSM, cloud KMS ou token). Utiliser d\u00E9rivation de cl\u00E9 forte (PBKDF2/Argon2) si la wrapping key est un mot de passe. Mettre en place contr\u00F4le d\u0027acc\u00E8s bas\u00E9 sur ACL, chiffrement au repos et en transit pour les backups, et rotation r\u00E9guli\u00E8re de la cl\u00E9 de wrapping.\r\n\r\n6) Bonnes pratiques d\u0027acc\u00E8s et s\u00E9paration des r\u00F4les\r\nPrincipe de moindre privil\u00E8ge : seuls les r\u00F4les minimalement n\u00E9cessaires doivent acc\u00E9der aux op\u00E9rations de cl\u00E9s. S\u00E9parer les r\u00F4les: propri\u00E9taire de cl\u00E9, op\u00E9rateur de signature, administrateur HSM, auditeur. Exiger MFA pour acc\u00E8s sensible, sessions administratives limit\u00E9es et surveill\u00E9es. Utiliser proc\u00E9dures \u00E0 plusieurs personnes (split knowledge / quorum) pour les op\u00E9rations critiques (import/export, mise hors service d\u0027une cl\u00E9). Documenter et approuver toutes modifications par processus formel.\r\n\r\n7) Sauvegarde, r\u00E9cup\u00E9ration et redondance\r\nSauvegarder les cl\u00E9s de fa\u00E7on chiffr\u00E9e et distribu\u00E9e : utiliser plusieurs copies chiffr\u00E9es stock\u00E9es sur supports s\u00E9par\u00E9s et sites g\u00E9ographiques diff\u00E9rents. Pour HSM, suivre les m\u00E9canismes de backup/support vendor (m\u00E9canismes de \u0027key export\u0027 s\u00E9curis\u00E9 ou cl\u00E9s de sauvegarde sous forme de \u0027key shares\u0027  \u2014 ex : Shamir Secret Sharing). Tester r\u00E9guli\u00E8rement les proc\u00E9dures de restauration dans un environnement contr\u00F4l\u00E9. Maintenir plan de reprise d\u0027activit\u00E9 (RTO/RPO), inventorier et chiffrer les backups, prot\u00E9ger les acc\u00E8s aux backups (MFA, stockage hors-ligne pour copies sensibles). Assurer compensation pour p\u00E9riph\u00E9riques perdus (tokens) par proc\u00E9dures de r\u00E9vocation et r\u00E9\u00E9mission.\r\n\r\n8) Contr\u00F4le d\u0027acc\u00E8s, audit et conformit\u00E9\r\nMettre en place journalisation d\u00E9taill\u00E9e (qui, quoi, quand) des op\u00E9rations sur les cl\u00E9s. Prot\u00E9ger les logs (int\u00E9grit\u00E9, horodatage, stockage s\u00E9par\u00E9). Revoir p\u00E9riodiquement les acc\u00E8s et r\u00F4les (revocation, least-privilege). Int\u00E9grer tests d\u0027intrusion et audits r\u00E9guliers. Conserver preuves pour conformit\u00E9: politique de gestion des cl\u00E9s, inventaires, proc\u00E9dures de rotation, incidents et r\u00E9ponses. Automatiser alertes sur comportements anormaux et anomalies d\u0027audit.\r\n\r\n9) Op\u00E9rations courantes et proc\u00E9dures d\u0027incident\r\nRotation: d\u00E9finir fr\u00E9quence en fonction du risque et de l\u0027usage (ZSK fr\u00E9quemment, KSK plus rare), automatiser si possible. R\u00E9vocation et rekeying: proc\u00E9dures claires pour scenarios de compromission (imm\u00E9diate publication/rollover, communication aux parties prenantes). Compromission: isolation, collecte d\u0027artefacts, \u00E9valuation de l\u0027impact, d\u00E9clenchement du plan de rekeying, notification selon politique. Tester r\u00E9guli\u00E8rement ces proc\u00E9dures et tenir les jeux de r\u00F4le (tabletop exercises).\r\n\r\n10) Choisir une solution selon le contexte\r\nFacteurs \u00E0 peser: sensibilit\u00E9 des cl\u00E9s et menace, budget, besoin d\u0027automatisation et d\u0027int\u00E9gration (API), contraintes de latence/performance, exigences l\u00E9gales et d\u0027audit, capacit\u00E9 \u00E0 g\u00E9rer cycle de vie (regen, rotation). Exemple de d\u00E9cisions: DNSSEC \u00E0 l\u0027\u00E9chelle d\u0027une ccTLD -\u003E HSM certifi\u00E9 et proc\u00E9dures multi-personnes; petit service interne -\u003E fichiers chiffr\u00E9s avec KMS cloud \u002B backups chiffr\u00E9s et contr\u00F4les stricts; op\u00E9rations manuelles et mobiles -\u003E tokens/smartcards avec proc\u00E9dures de perte.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "1) Vous administrez la signature DNSSEC d\u0027une zone de production importante. On vous propose deux options : (A) HSM r\u00E9seau certifi\u00E9, co\u00FBt \u00E9lev\u00E9 ; (B) Fichiers chiffr\u00E9s sur serveur durci avec backups chiffr\u00E9s. Choisissez une option et justifiez bri\u00E8vement en listant au moins 3 avantages et 2 inconv\u00E9nients de votre choix.",
              "Answer": "Choix recommand\u00E9: (A) HSM r\u00E9seau certifi\u00E9. Avantages: tr\u00E8s haute r\u00E9sistance \u00E0 l\u0027extraction des cl\u00E9s (s\u00E9curit\u00E9 mat\u00E9rielle), meilleures capacit\u00E9s d\u0027audit et s\u00E9paration des r\u00F4les, performances et disponibilit\u00E9 adapt\u00E9es aux signatures automatiques \u00E0 fort volume. Inconv\u00E9nients: co\u00FBt d\u0027acquisition et d\u0027exploitation \u00E9lev\u00E9, complexit\u00E9 d\u0027int\u00E9gration et de gestion (maintenance, redondance).",
              "Explanation": "Une zone de production importante pr\u00E9sente un fort risque op\u00E9rationnel et d\u0027impact en cas de compromission : l\u0027investissement dans un HSM se justifie pour r\u00E9duire le risque d\u0027exfiltration, fournir des m\u00E9canismes d\u0027audit et d\u0027acc\u00E8s contr\u00F4l\u00E9. Les fichiers chiffr\u00E9s peuvent fonctionner mais d\u00E9pendent fortement de la s\u00E9curit\u00E9 du serveur h\u00F4te et de la gestion des cl\u00E9s de wrapping, ce qui augmente la surface d\u0027attaque."
            },
            {
              "Instruction": "2) D\u00E9crivez une proc\u00E9dure courte (5 \u00E9tapes maximum) pour sauvegarder une cl\u00E9 priv\u00E9e critique stock\u00E9e dans un HSM afin de garantir r\u00E9cup\u00E9ration et s\u00E9curit\u00E9. Soyez pr\u00E9cis sur le chiffrage et le contr\u00F4le d\u0027acc\u00E8s.",
              "Answer": "Proc\u00E9dure: 1) G\u00E9n\u00E9rer et exporter la sauvegarde de la cl\u00E9 via l\u0027outil officiel HSM en mode cl\u00E9 prot\u00E9g\u00E9e/partag\u00E9e (ex: key shares) ; 2) Chiffrer imm\u00E9diatement chaque share avec une cl\u00E9 de wrapping stock\u00E9e dans un autre HSM ou KMS, ou prot\u00E9ger par Shamir\u002Bpassphrases distribu\u00E9es ; 3) Stocker les copies chiffr\u00E9es sur au moins deux sites distincts (supports physiques s\u00E9curis\u00E9s ou coffre-fort \u00E9lectronique) ; 4) Restreindre l\u0027acc\u00E8s aux shares par s\u00E9paration des r\u00F4les et MFA, consigner toute op\u00E9ration dans un registre d\u0027audit ; 5) Tester p\u00E9riodiquement la restauration dans un bac \u00E0 sable et renouveler les passphrases/parts selon la politique.",
              "Explanation": "L\u0027export/backup d\u0027une cl\u00E9 HSM doit \u00E9viter d\u0027exposer la cl\u00E9 en clair. L\u0027usage de m\u00E9canismes de backup propos\u00E9 par le fournisseur (export chiffr\u00E9, key shares) ou Shamir Secret Sharing \u00E9vite qu\u0027une seule personne ou un seul emplacement fasse faillite. Le chiffrement avec une cl\u00E9 externe/KMS et la distribution g\u00E9ographique apportent redondance et r\u00E9sistances aux incidents. Les tests garantissent que le plan fonctionne lors d\u0027un r\u00E9el sinistre."
            },
            {
              "Instruction": "3) Sc\u00E9nario d\u0027incident : un op\u00E9rateur signale la perte d\u0027un token USB contenant un fragment d\u0027une cl\u00E9 (utilis\u00E9e dans un sch\u00E9ma \u00E0 quorum). Quelle est la proc\u00E9dure imm\u00E9diate et quelles mesures de mitigation doivent \u00EAtre prises ?",
              "Answer": "Proc\u00E9dure imm\u00E9diate: 1) Consid\u00E9rer le fragment comme potentiellement compromis et le r\u00E9voquer de l\u0027inventaire ; 2) Evaluer si le quorum minimal peut encore \u00EAtre atteint ; si non, initier proc\u00E9dure de r\u00E9cup\u00E9ration (restauration des shares valides) ou d\u00E9clencher rekeying si compromission probable ; 3) R\u00E9voquer et remplacer le token perdu (\u00E9mission d\u0027un nouveau share/token) et, si n\u00E9cessaire, r\u00E9g\u00E9n\u00E9rer shares via proc\u00E9dure s\u00E9curis\u00E9e ; 4) Documenter l\u0027incident, notifier parties prenantes, et conduire analyse d\u0027impact et post-mortem.\nMesures de mitigation: verrouillage des comptes associ\u00E9s, audits d\u0027acc\u00E8s r\u00E9cents, augmentation temporaire de surveillance, intensifier contr\u00F4les d\u0027acc\u00E8s et sensibilisation des op\u00E9rateurs.",
              "Explanation": "Un fragment perdu ne signifie pas forc\u00E9ment compromission si le sch\u00E9ma n\u00E9cessite plusieurs parts pour reconstruire la cl\u00E9. Cependant, il faut traiter la perte comme s\u00E9rieuse : r\u00E9voquer, v\u00E9rifier l\u0027int\u00E9grit\u00E9 du quorum et r\u00E9cup\u00E9rer ou rekeyer selon l\u0027\u00E9valuation. La documentation et l\u0027audit permettent de comprendre l\u0027incident et d\u0027am\u00E9liorer les proc\u00E9dures."
            }
          ]
        },
        {
          "Title": "Signature manuelle de zones avec dnssec-signzone",
          "Summary": "Workflow pas-\u00E0-pas pour signer une zone avec dnssec-signzone, options courantes, gestion des TTL, et publication des enregistrements RRSIG/DS.",
          "EstimatedMinutes": 45,
          "LearningObjectives": [
            "Comprendre le r\u00F4le de dnssec-signzone dans le flux de signature manuelle d\u0027une zone DNS",
            "Savoir g\u00E9n\u00E9rer correctement une paire KSK/ZSK avec dnssec-keygen et comprendre leurs usages respectifs",
            "Ex\u00E9cuter un workflow pas-\u00E0-pas pour signer une zone avec dnssec-signzone et produire un fichier de zone sign\u00E9",
            "Conna\u00EEtre les options courantes de dnssec-signzone et leur impact (fichier de sortie, gestion du serial, NSEC/NSEC3, sel al\u00E9atoire, etc.)",
            "G\u00E9rer correctement les TTL vis\u2011\u00E0\u2011vis des RRSIG et comprendre pourquoi on doit resigner si on change des TTL",
            "Pr\u00E9parer et publier les enregistrements DS au parent (registrar / zone parente) et v\u00E9rifier la cha\u00EEne de confiance",
            "Diagnostiquer les erreurs courantes apr\u00E8s signature et appliquer des bonnes pratiques (rotation de cl\u00E9s, politiques de signature, automatisation)"
          ],
          "Content": "Introduction et contexte\r\nObjectif : savoir signer manuellement une zone DNS en utilisant les utilitaires fournis par BIND (dnssec-keygen, dnssec-signzone, dnssec-dsfromkey, etc.). Dans une signature manuelle, vous g\u00E9n\u00E9rez et conservez vos cl\u00E9s localement, ex\u00E9cutez la commande de signature, contr\u00F4lez le fichier sign\u00E9 et publiez les enregistrements n\u00E9cessaires (DNSKEY et RRSIG dans la zone, DS au parent).\r\n\r\nPr\u00E9-requis\r\nAvoir BIND (outils bind-tools) install\u00E9 et accessibles (dnssec-keygen, dnssec-signzone, dnssec-dsfromkey, rndc si besoin). Disposer du fichier de zone non sign\u00E9 (par ex. example.com.zone), acc\u00E8s en \u00E9criture au r\u00E9pertoire o\u00F9 se trouvent les fichiers .key/.private et possibilit\u00E9 d\u0027augmenter le SOA serial. Conna\u00EEtre l\u0027algorithme et tailles de cl\u00E9s que vous souhaitez utiliser (ex. RSASHA256 2048 pour ZSK, RSASHA256 4096 pour KSK).\r\n\r\nG\u00E9n\u00E9ration des cl\u00E9s (KSK et ZSK) - commandes types\r\nG\u00E9n\u00E9rer une ZSK : dnssec-keygen -a RSASHA256 -b 2048 -n ZONE example.com\nG\u00E9n\u00E9rer une KSK (avec drapeau KSK) : dnssec-keygen -a RSASHA256 -b 4096 -n ZONE -f KSK example.com\nR\u00E9sultat : pour chaque appel, vous obtiendrez deux fichiers Kexample.com.\u002Balg\u002Btag.key et Kexample.com.\u002Balg\u002Btag.private. Conserver les .private en lieu s\u00FBr (KSK surtout). Le .key est \u00E0 publier dans la zone (il contient la cl\u00E9 publique) et servira de base au calcul du DS.\r\n\r\nWorkflow pas-\u00E0-pas pour signer une zone avec dnssec-signzone\r\n1) Pr\u00E9parer le fichier de zone non sign\u00E9 et s\u0027assurer que le SOA serial est correct/incr\u00E9mente si n\u00E9cessaire.\n2) Placer ou copier les fichiers .key et .private produits par dnssec-keygen dans le r\u00E9pertoire de travail.\n3) Lancer dnssec-signzone (exemple minimal) : dnssec-signzone -o example.com -k Kexample.com.\u002B008\u002B12345 example.com.zone\n   - L\u0027option -o indique l\u0027origin (nom de zone). -k permet d\u0027indiquer la KSK \u00E0 utiliser pour signer la cl\u00E9 DNSKEY (le programme retrouvera aussi les ZSK disponibles et les utilisera).\n4) La commande produit un fichier sign\u00E9 (par d\u00E9faut example.com.zone.signed) contenant : les enregistrements DNSKEY, les RRSIG pour chaque RRset, et NSEC/NSEC3 (selon configuration).\n5) V\u00E9rifier l\u0027int\u00E9grit\u00E9 : named-checkzone -D example.com example.com.zone.signed (ou named-checkzone -S si disponible) et consulter le fichier de sortie en cas d\u0027erreur.\n6) D\u00E9ployer : remplacer le fichier de zone charg\u00E9 par le serveur DNS (ou indiquer au serveur le fichier sign\u00E9) et recharger la zone (rndc reload example.com).\n7) Publier le DS correspondant au KSK aupr\u00E8s du parent (registrar) : utiliser dnssec-dsfromkey Kexample.com.\u002B008\u002B12345.key pour obtenir le DS, puis transmettre au registrar.\r\n\r\nOptions courantes de dnssec-signzone (et leur utilit\u00E9)\r\nVoici les options fr\u00E9quemment utilis\u00E9es et leur r\u00F4le :\n- -o origin : nom de la zone (obligatoire si le fichier de zone ne contient pas suffisamment d\u0027information)\n- -k keyfile/keyname : indiquer le ou les KSK \u00E0 utiliser (le programme cherchera les .key/.private associ\u00E9es) ; on peut aussi lister plusieurs cl\u00E9s\n- -f signedfile : nom du fichier de zone sign\u00E9 de sortie (ex. -f example.com.zone.signed)\n- -N {increment|unixtime|date} : contr\u00F4le du SOA serial automatiquement modifi\u00E9 par l\u0027outil ; \u0027increment\u0027 incr\u00E9mente le serial, \u0027unixtime\u0027 ou \u0027date\u0027 peuvent fixer un format d\u00E9terministe\n- -r rndfile : utiliser un fichier al\u00E9atoire sp\u00E9cifique (utile pour tests reproductibles et pour NSEC3 salt)\n- -3 : activer NSEC3 (si vous souhaitez NSEC3 au lieu de NSEC)\n- -S : force la signature sans modifier le serial (utile si vous pr\u00E9f\u00E9rez g\u00E9rer le serial vous\u2011m\u00EAme)\n- -A : auto-g\u00E9n\u00E9rer une nouvelle signature si n\u00E9cessaire (option li\u00E9e \u00E0 certaines versions/gestions automatis\u00E9es)\n- -P policyfile : appliquer une politique de signature (si vous utilisez une configuration de politique)\nNote : la disponibilit\u00E9 / nom exact des options peuvent varier selon la version de BIND. Toujours consulter man dnssec-signzone sur votre syst\u00E8me.\r\n\r\nGestion des TTL et impact sur les signatures\r\nR\u00E8gles essentielles :\n- Chaque RRSIG inclut dans son en-t\u00EAte une valeur \u0022original TTL\u0022 (le TTL du RRset couvert au moment de la signature). De plus, l\u0027enregistrement RRSIG publi\u00E9 doit avoir la m\u00EAme valeur TTL que l\u0027ensemble d\u0027enregistrements qu\u0027il couvre (conform\u00E9ment \u00E0 la RFC).\n- Si vous modifiez le TTL d\u0027un RRset apr\u00E8s la signature sans resigner, vous cr\u00E9ez une incoh\u00E9rence (TTL des RRset != TTL des RRSIG) qui peut provoquer des probl\u00E8mes de validation chez certains validateurs.\nBonnes pratiques :\n- D\u00E9finir les TTL d\u00E9finitifs avant la signature et limiter les changements de TTL fr\u00E9quents.\n- Si vous devez changer les TTL : planifier une nouvelle signature (resign) apr\u00E8s le changement.\n- Pour minimiser les op\u00E9rations, choisissez des TTLs adapt\u00E9s \u00E0 votre cycle de d\u00E9ploiement (ex. TTL plus court pendant des p\u00E9riodes de changement intensif, puis allonger apr\u00E8s stabilisation).\n- Attention aux TTL et \u00E0 la dur\u00E9e de validit\u00E9 (inception/expiration) des signatures : planifier la rotation des cl\u00E9s et la re-signature avant expiration.\r\n\r\nPublication des enregistrements RRSIG / DNSKEY / DS\r\nCe qui est publi\u00E9 dans la zone sign\u00E9e :\n- DNSKEY : la ou les cl\u00E9s publiques (KSK et ZSK si pr\u00E9sent\u00E9es) apparaissent dans la zone sign\u00E9e ; ces enregistrements permettent aux validateurs de v\u00E9rifier les signatures.\n- RRSIG : pour chaque RRset sign\u00E9, un RRSIG est ajout\u00E9; il contient la signature, la cl\u00E9 utilis\u00E9e (key tag), la p\u00E9riode de validit\u00E9, et la valeur original TTL.\n- NSEC/NSEC3 : pour prouver l\u0027absence d\u0027enregistrements.\nPublication du DS (au parent) :\n1) G\u00E9n\u00E9rer le DS depuis la cl\u00E9 KSK : dnssec-dsfromkey -f SHA256 Kexample.com.\u002B008\u002B12345.key (ou dnssec-dsfromkey K... pour la valeur par d\u00E9faut)\n2) Obtenir la cha\u00EEne DS (digest et key tag) et transmettre cette valeur \u00E0 votre registrar ou op\u00E9rateur de la zone parente.\n3) Une fois le DS publi\u00E9 au parent, la cha\u00EEne de confiance est \u00E9tablie : les validateurs seront capables de remonter depuis la racine/parent jusqu\u0027\u00E0 votre DNSKEY.\nRemarque : lorsque vous effectuez une rotation de KSK, suivez la proc\u00E9dure en deux \u00E9tapes : publier la nouvelle cl\u00E9 dans la zone (double-publish si n\u00E9cessaire), publier le DS au parent, attendre la r\u00E9plication/propagation, puis retirer l\u0027ancienne cl\u00E9.\r\n\r\nV\u00E9rification post-signature et diagnostics\r\nContr\u00F4les \u00E0 effectuer :\n- named-checkzone example.com example.com.zone.signed pour v\u00E9rifier la syntaxe et la coh\u00E9rence.\n- V\u00E9rifier que les RRSIG ont des dates d\u0027expiration/inception correctes et que les key tags correspondent aux DNSKEY.\n- Utiliser dig \u002Bdnssec @serveur example.com ANY pour v\u00E9rifier que le serveur sert bien la zone sign\u00E9e et retourne les DNSKEY/RRSIG.\n- Tester la validation c\u00F4t\u00E9 client (ex. dig \u002Bdnssec \u002Bmulti) ou avec des validateurs externes (ex. DNSViz) pour s\u0027assurer que la cha\u00EEne de confiance est correcte.\nErreurs courantes : cl\u00E9 .private manquante (impossibilit\u00E9 de signer), mismatch de serial, TTL chang\u00E9 sans re-sign, DS non publi\u00E9 ou incorrect au niveau du parent.\r\n\r\nBonnes pratiques et automatisation\r\nPour r\u00E9duire la charge op\u00E9rationnelle et les risques :\n- Automatiser la rotation des ZSK et la re-signature via des outils (ex. ksmtuned, scripts, ou une solution de gestion de cl\u00E9s) ; garder la rotation du KSK plus prudente et planifi\u00E9e.\n- Conserver un inventaire des cl\u00E9s (dates de g\u00E9n\u00E9ration, validity windows, where published DS, etc.).\n- Tester chaque \u00E9tape sur une zone de test avant production.\n- Pr\u00E9voir des cr\u00E9neaux de maintenance pour les rotations KSK/DS (les changements chez le parent prennent du temps \u00E0 se propager).\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "1) Commandes : indiquez les commandes pour g\u00E9n\u00E9rer une ZSK (RSASHA256 2048) et une KSK (RSASHA256 4096) pour la zone example.com, puis la commande pour signer la zone example.com.zone en utilisant la KSK g\u00E9n\u00E9r\u00E9e et en produisant un fichier de sortie example.com.zone.signed.",
              "Answer": "G\u00E9n\u00E9rer ZSK : dnssec-keygen -a RSASHA256 -b 2048 -n ZONE example.com\nG\u00E9n\u00E9rer KSK : dnssec-keygen -a RSASHA256 -b 4096 -n ZONE -f KSK example.com\nSigner la zone : dnssec-signzone -o example.com -k Kexample.com.\u002B008\u002B\u003CKSKtag\u003E -f example.com.zone.signed example.com.zone\n( Remplacer \u003CKSKtag\u003E par le tag num\u00E9rique extrait du nom de fichier produit par dnssec-keygen )",
              "Explanation": "dnssec-keygen produit des fichiers K\u003Czone\u003E.\u002B\u003Calg\u003E\u002B\u003Ctag\u003E.key et .private. La commande dnssec-signzone prend le nom de la zone (-o), la KSK \u00E0 utiliser (-k) et le fichier de zone source. L\u0027option -f permet de choisir le nom du fichier sign\u00E9 de sortie. Le tag de cl\u00E9 est celui pr\u00E9sent dans le nom du fichier .key produit."
            },
            {
              "Instruction": "2) TTL : vous avez sign\u00E9 une zone. Plus tard, vous changez le TTL d\u0027un enregistrement A de 3600 \u00E0 600 et rechargez la zone sans resigner. Quels probl\u00E8mes peuvent survenir et que devez-vous faire ?",
              "Answer": "Probl\u00E8me : le TTL des RRSIG existants risque de ne plus correspondre au TTL du RRset modifi\u00E9 (incoh\u00E9rence entre TTL des RRset et TTL des RRSIG). Cela peut entra\u00EEner des probl\u00E8mes de validation ou des comportements ind\u00E9termin\u00E9s chez certains validateurs. Solution : resigner la zone (ex\u00E9cuter dnssec-signzone \u00E0 nouveau pour r\u00E9g\u00E9n\u00E9rer les RRSIG avec le nouveau TTL) et d\u00E9ployer le fichier sign\u00E9, puis reload du serveur.",
              "Explanation": "Conform\u00E9ment aux sp\u00E9cifications, le TTL de l\u0027enregistrement RRSIG publi\u00E9 doit \u00EAtre \u00E9gal au TTL de l\u0027ensemble d\u0027enregistrements qu\u0027il couvre. Modifier le TTL sans reg\u00E9n\u00E9rer les signatures cr\u00E9e une divergence. La fa\u00E7on correcte est donc de planifier les modifications de TTL et de resigner apr\u00E8s les changements."
            },
            {
              "Instruction": "3) DS et publication : d\u00E9crire la commande pour obtenir l\u0027enregistrement DS \u00E0 partir du fichier .key de la KSK et la proc\u00E9dure suivante pour int\u00E9grer le DS dans la cha\u00EEne de confiance.",
              "Answer": "Commande pour produire le DS (SHA-256) : dnssec-dsfromkey -f SHA256 Kexample.com.\u002B008\u002B\u003CKSKtag\u003E.key\nProc\u00E9dure :\n1) Ex\u00E9cuter la commande et r\u00E9cup\u00E9rer la valeur DS (key tag \u002B alg \u002B digest).\n2) Transmettre/formuler cette valeur au registrar / administrateur de la zone parente pour qu\u0027il l\u0027ajoute comme enregistrement DS dans la zone parente.\n3) Attendre la propagation du DS au niveau parent et v\u00E9rifier qu\u0027il est visible (ex. dig DS example.com @serveur_parent).\n4) V\u00E9rifier la validation c\u00F4t\u00E9 r\u00E9solveur pour confirmer la cha\u00EEne de confiance (ex. dig \u002Bdnssec @resolver example.com).\n",
              "Explanation": "Le DS est calcul\u00E9 \u00E0 partir de la cl\u00E9 publique KSK. Le DS doit \u00EAtre publi\u00E9 dans la zone parente pour que les validateurs puissent remonter la cha\u00EEne de confiance depuis le parent vers votre DNSKEY. Sans DS publi\u00E9 correctement, la zone ne sera pas valid\u00E9e par les r\u00E9solveurs qui exigent la cha\u00EEne de confiance."
            }
          ]
        },
        {
          "Title": "Automatisation des signatures avec BIND",
          "Summary": "Configuration de BIND pour la signature automatique des zones (auto-dnssec, keys-dir), int\u00E9gration des cl\u00E9s et gestion des rollovers automatiques.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre le r\u00F4le de BIND dans l\u0027automatisation de la signature DNSSEC des zones",
            "Savoir configurer les options principales de named.conf pour la signature automatique (auto-dnssec, inline-signing, keys-dir)",
            "Apprendre \u00E0 utiliser dnssec-policy pour automatiser la g\u00E9n\u00E9ration et le rollover des cl\u00E9s (KSK/ZSK)",
            "Savoir int\u00E9grer des cl\u00E9s manuelles (import/export) et coordonner avec l\u0027op\u00E9rateur parent pour la publication des DS",
            "Conna\u00EEtre le cycle de vie d\u0027une cl\u00E9 DNSSEC et les meilleures pratiques pour les rollovers automatiques et la gestion des fichiers sur disque",
            "\u00CAtre capable de diagnostiquer les probl\u00E8mes courants li\u00E9s \u00E0 la signature automatique et aux permissions des r\u00E9pertoires de cl\u00E9s"
          ],
          "Content": "Introduction et pr\u00E9requis\r\nObjectif de la le\u00E7on : automatiser la signature DNSSEC des zones dans BIND. Pr\u00E9requis : connaissance de base de BIND9, DNSSEC (KSK/ZSK, DS) et acc\u00E8s \u00E0 un serveur ex\u00E9cutant une version de BIND supportant dnssec-policy (recommand\u00E9 9.11\u002B ; 9.16\u002B pour fonctionnalit\u00E9s compl\u00E8tes). Acc\u00E8s root pour cr\u00E9er r\u00E9pertoires de cl\u00E9s et modifier named.conf.\r\n\r\nPrincipes rapides : auto-signature vs signature manuelle\r\nSignature manuelle : g\u00E9n\u00E9ration des cl\u00E9s avec dnssec-keygen, signature avec dnssec-signzone, et gestion manuelle des rollovers. Signature automatique : BIND g\u00E9n\u00E8re, stocke et fait tourner les cl\u00E9s selon une politique. Avantages de l\u0027automatisation : r\u00E9duction des erreurs humaines, rollovers programm\u00E9s, int\u00E9gration transparente avec la mise \u00E0 jour des fichiers d\u0027instance. Limites : n\u00E9cessit\u00E9 d\u0027une bonne configuration de policy, coordination manuelle possible pour la publication DS chez le parent (surtout pour KSK) et gestion des sauvegardes/cl\u00E9s priv\u00E9es.\r\n\r\nOptions cl\u00E9s dans named.conf pour l\u0027automatisation\r\nParam\u00E8tres importants :\n- keys-dir : r\u00E9pertoire o\u00F9 BIND place les cl\u00E9s priv\u00E9es et publiques g\u00E9n\u00E9r\u00E9es automatiquement (par exemple \u0022/var/lib/bind/keys\u0022). BIND doit avoir les droits d\u0027\u00E9criture.\n- auto-dnssec : peut \u00EAtre \u0027maintain\u0027 ou \u0027off\u0027. \u0027maintain\u0027 demande \u00E0 BIND de signer automatiquement la zone selon la policy configur\u00E9e.\n- inline-signing : true/false. Si true, BIND maintient une version sign\u00E9e en m\u00E9moire et sur disque (zonefile restant la version non-sign\u00E9e), utile pour signer dynamique et zone-exports.\n- dnssec-policy : nom de la politique appliqu\u00E9e \u00E0 la zone (voir section d\u00E9di\u00E9e). Exemple minimal de zone : zone \u0022example.net\u0022 { type master; file \u0022db.example.net\u0022; auto-dnssec maintain; inline-signing yes; dnssec-policy \u0022standard\u0022; }\r\n\r\nExemple de configuration (named.conf) et explication\r\nExtrait :\noptions {\n  directory \u0022/var/cache/bind\u0022;\n  keys-dir \u0022/var/lib/bind/keys\u0022;  // emplacement des cl\u00E9s automatiques\n};\n\n// d\u00E9claration d\u0027une dnssec-policy\ndnssec-policy \u0022standard\u0022 {\n  keys {\n    ksk-keysize 2048;\n    ksk-algorithm rsasha256;\n    ksk-lifetime P365D;        // dur\u00E9e de vie KSK\n\n    zsk-keysize 1024;\n    zsk-algorithm rsasha256;\n    zsk-lifetime P30D;         // dur\u00E9e de vie ZSK\n  }\n  repository \u0022file\u0022;          // o\u00F9 stocker (par d\u00E9faut file)\n};\n\nzone \u0022example.net\u0022 {\n  type master;\n  file \u0022db.example.net\u0022;\n  auto-dnssec maintain;\n  inline-signing yes;\n  dnssec-policy \u0022standard\u0022;\n};\n\nExplication : keys-dir indique o\u00F9 BIND \u00E9crira les fichiers KSK/ZSK (.private/.key). auto-dnssec maintain active l\u0027automatisation. inline-signing permet de servir la zone sign\u00E9e tout en conservant le fichier d\u0027origine non sign\u00E9. dnssec-policy d\u00E9finit tailles, algos et dur\u00E9es de cl\u00E9s et pilote les rollovers automatiques.\r\n\r\nFormat et emplacement des cl\u00E9s (keys-dir)\r\nBIND cr\u00E9e pour chaque cl\u00E9 des fichiers .private (cl\u00E9 priv\u00E9e), .key (cl\u00E9 publique/pubkey au format DNSKEY), et parfois .state. Le r\u00E9pertoire doit \u00EAtre s\u00E9curis\u00E9 (droits restreints), appartenir \u00E0 l\u0027utilisateur et groupe ex\u00E9cutant named (souvent \u0027bind\u0027 ou \u0027named\u0027). Exemple :\nls -l /var/lib/bind/keys\n-rw------- 1 bind bind 1700 ... Kexample.net.\u002B005\u002B12345.private\n-rw-r--r-- 1 bind bind  400 ... Kexample.net.\u002B005\u002B12345.key\nConseils : sauvegarder les .private hors site, restreindre l\u0027acc\u00E8s en lecture/\u00E9criture, et \u00E9viter les syst\u00E8mes de fichiers non compatibles (ex : certaines options NFS qui brisent les permissions).\r\n\r\ndnssec-policy : param\u00E8tres et comportements\r\ndnssec-policy permet de d\u00E9crire la strat\u00E9gie de g\u00E9n\u00E9ration et de rollover pour KSK et ZSK. Param\u00E8tres courants :\n- ksk-keysize, zsk-keysize : taille des cl\u00E9s\n- ksk-algorithm, zsk-algorithm : algorithme (rsasha256, ecdsap256sha256, etc.)\n- ksk-lifetime, zsk-lifetime : p\u00E9riode totale d\u0027une cl\u00E9 (notation ISO8601 PnD/PnM)\n- repository : \u0027file\u0027 par d\u00E9faut\n- ksk-prepublish, zsk-prepublish, resign, publish, retire : options fines (selon version BIND) pour contr\u00F4ler les phases de rollover\nComportement : BIND va cr\u00E9er les cl\u00E9s selon ces param\u00E8tres, publier les DNSKEY n\u00E9cessaires pour la phase de pr\u00E9-publication, signer les RRsets, et effectuer le rollover automatiquement en respectant les dur\u00E9es d\u00E9finies.\r\n\r\nRollovers automatiques : flux et phases\r\nCycle typique d\u0027un rollover automatique (ZSK) :\n1) Publication pr\u00E9coce : BIND cr\u00E9e une nouvelle ZSK et la rend visible (publie la DNSKEY) sans retirer l\u0027ancienne cl\u00E9 (pr\u00E9-publication). Cela permet aux validateurs de d\u00E9couvrir la nouvelle cl\u00E9.\n2) Signature : BIND commence \u00E0 signer la zone avec la nouvelle ZSK (et conserve signatures faites avec l\u0027ancienne selon la p\u00E9riode de r\u00E9signation pour assurer recouvrement).\n3) Retrait : une fois la p\u00E9riode de transition \u00E9coul\u00E9e, l\u0027ancienne ZSK est retir\u00E9e.\nPour KSK, en plus, il faut g\u00E9rer DS aupr\u00E8s du parent : soit on publie la nouvelle DS (si coordination automatique n\u0027existe pas), soit on suit une \u0027double-signature\u0027 et attendre que le parent mette \u00E0 jour le DS avant de retirer l\u0027ancienne KSK. BIND peut g\u00E9rer un rollover KSK automatique si l\u0027op\u00E9rateur parent accepte la publication automatique du DS (rare).\r\n\r\nInt\u00E9gration des cl\u00E9s manuelles et publication DS\r\nSc\u00E9narios mixtes : vous pouvez g\u00E9n\u00E9rer un KSK manuellement et laisser BIND g\u00E9rer la ZSK automatiquement. Pour utiliser une cl\u00E9 manuelle, placez la paire .private/.key dans keys-dir et ajustez permissions. Si KSK est manuelle, configurez la zone pour utiliser cette cl\u00E9 (d\u00E9clarer managed-keys ou ajouter la cl\u00E9 au fichier zone signing si n\u00E9cessaire). Publication du DS : pour qu\u0027un domaine soit valide \u00E0 la racine/parent, le DS correspondant au KSK doit \u00EAtre publi\u00E9 chez le parent. Cette op\u00E9ration est souvent manuelle (via registrar) -\u003E il faut coordonner le rollover KSK pour \u00E9viter rupture de validation.\r\n\r\nInline-signing vs fichiers sign\u00E9s (pratiques et impacts)\r\ninline-signing yes : BIND conserve le fichier de zone non sign\u00E9 et expose/sert une version sign\u00E9e automatiquement. Avantages : facile pour zones dynamiques, pas de travail manuel de resigne. Inconv\u00E9nients : d\u00E9pendances \u00E0 keys-dir, permissions, et complexit\u00E9 lors d\u0027export de zone sign\u00E9e.\ninline-signing no : BIND \u00E9crira des fichiers .signed et vous devrez g\u00E9rer les signatures vous-m\u00EAme ou via dnssec-signzone. Utile si vous pr\u00E9f\u00E9rez contr\u00F4le total ou si votre processus requiert des fichiers signed s\u00E9par\u00E9s.\r\n\r\nS\u00E9curit\u00E9 et bonnes pratiques\r\nRecommandations :\n- s\u00E9curiser keys-dir (chmod 700, owner bind)\n- sauvegarder .private hors site et limitant l\u0027acc\u00E8s\n- surveiller les logs rndc et named pour \u00E9v\u00E8nements de rollover\n- tester les rollovers dans un environnement non productif\n- documenter la proc\u00E9dure de publication DS aupr\u00E8s du registrar/parent\n- utiliser algorithmes modernes (ECDSA si support\u00E9) et tailles adapt\u00E9es\n- maintenir la version de BIND \u00E0 jour pour profiter des correctifs et fonctionnalit\u00E9s dnssec-policy\r\n\r\nD\u00E9tection et r\u00E9solution des probl\u00E8mes courants\r\nSympt\u00F4mes et actions :\n- Pas de fichiers .private cr\u00E9\u00E9s : v\u00E9rifier keys-dir et permissions, v\u00E9rifier owner du processus named.\n- Zone non sign\u00E9e malgr\u00E9 auto-dnssec maintain : v\u00E9rifier dnssec-policy valide, logs de named pour erreurs d\u0027algorithme ou d\u0027\u00E9criture, v\u00E9rifiez inline-signing.\n- Cl\u00E9s g\u00E9n\u00E9r\u00E9es mais zone servie non-validable : v\u00E9rifier publication DS au parent, v\u00E9rifier que la DNSKEY publi\u00E9e correspond au DS.\n- Rollovers qui \u00E9chouent : consulter logs, v\u00E9rifier qu\u0027il y a assez de temps de chevauchement (prepublish/publish/resign) et que l\u0027horloge syst\u00E8me est correcte.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "1) \u00C9crire un extrait de named.conf qui active la signature automatique pour la zone example.org en stockant les cl\u00E9s dans /var/lib/bind/keys, en activant inline-signing et en appliquant une dnssec-policy nomm\u00E9e \u0027auto\u0027.",
              "Answer": "options {\n  keys-dir \u0022/var/lib/bind/keys\u0022;\n};\n\ndnssec-policy \u0022auto\u0022 {\n  keys {\n    ksk-keysize 2048;\n    ksk-algorithm rsasha256;\n    ksk-lifetime P365D;\n\n    zsk-keysize 1024;\n    zsk-algorithm rsasha256;\n    zsk-lifetime P30D;\n  }\n};\n\nzone \u0022example.org\u0022 {\n  type master;\n  file \u0022db.example.org\u0022;\n  auto-dnssec maintain;\n  inline-signing yes;\n  dnssec-policy \u0022auto\u0022;\n};",
              "Explanation": "La configuration montre keys-dir global, d\u00E9finit une dnssec-policy \u0027auto\u0027 avec param\u00E8tres pour KSK/ZSK, puis la zone utilise auto-dnssec maintain et inline-signing pour permettre \u00E0 BIND de g\u00E9n\u00E9rer et g\u00E9rer automatiquement les cl\u00E9s et signatures."
            },
            {
              "Instruction": "2) Vous constatez que BIND n\u0027a pas cr\u00E9\u00E9 de fichiers .private dans /var/lib/bind/keys apr\u00E8s avoir activ\u00E9 keys-dir. Quelles sont les v\u00E9rifications \u00E0 effectuer en priorit\u00E9 ?",
              "Answer": "V\u00E9rifier les permissions et propri\u00E9taire de /var/lib/bind/keys (doit appartenir \u00E0 l\u0027utilisateur qui ex\u00E9cute named, p. ex. \u0027bind\u0027). V\u00E9rifier que named a les droits d\u0027\u00E9criture (chmod 700). Consulter les logs de named (souvent /var/log/syslog ou journalctl) pour messages d\u0027erreur relatifs \u00E0 la cr\u00E9ation des cl\u00E9s. V\u00E9rifier que dnssec-policy est correctement d\u00E9finie et que auto-dnssec est \u0027maintain\u0027 sur la zone. V\u00E9rifier que la version de BIND supporte dnssec-policy et keys-dir.",
              "Explanation": "Les probl\u00E8mes les plus fr\u00E9quents sont des permissions incorrectes emp\u00EAchant named d\u0027\u00E9crire, une politique mal configur\u00E9e emp\u00EAchant la cr\u00E9ation de cl\u00E9s, ou une version de BIND trop ancienne. Les logs donnent en g\u00E9n\u00E9ral la cause pr\u00E9cise."
            },
            {
              "Instruction": "3) D\u00E9crivez succinctement le flux d\u0027un rollover automatique de ZSK et indiquez pourquoi la publication d\u0027une nouvelle DNSKEY avant de l\u0027utiliser est importante.",
              "Answer": "Flux : BIND g\u00E9n\u00E8re une nouvelle ZSK -\u003E publie sa DNSKEY (pr\u00E9-publication) -\u003E commence \u00E0 signer les RRsets avec la nouvelle ZSK (tout en conservant l\u0027ancienne pour la r\u00E9signation) -\u003E apr\u00E8s une p\u00E9riode de transition, retire l\u0027ancienne ZSK. Publication pr\u00E9alable de la DNSKEY : permet aux validateurs (resolvers) de d\u00E9couvrir la nouvelle cl\u00E9 et la mettre en cache avant que les signatures correspondantes apparaissent. Sans cette pr\u00E9-publication, les validateurs pourraient rechuter car ils n\u0027auraient pas la cl\u00E9 publique n\u00E9cessaire pour v\u00E9rifier les nouvelles signatures.",
              "Explanation": "Le chevauchement (prepublish) est essentiel pour assurer l\u0027interop\u00E9rabilit\u00E9 pendant un rollover : il \u00E9vite qu\u0027un resolver, encore ignorant de la nouvelle cl\u00E9, rejette les signatures sign\u00E9es par celle-ci."
            },
            {
              "Instruction": "4) Vous souhaitez conserver un KSK g\u00E9n\u00E9r\u00E9 manuellement tout en laissant BIND g\u00E9rer automatiquement la ZSK. Quelles actions faire pour int\u00E9grer correctement la KSK manuelle ?",
              "Answer": "Placer les fichiers KSK (.private et .key) dans le r\u00E9pertoire keys-dir avec permissions appropri\u00E9es et owner \u0027bind\u0027. S\u0027assurer que le fichier .key est reconnu par BIND (il le d\u00E9tectera si format et nom corrects). Publier le DS correspondant chez le parent si n\u00E9cessaire (ou v\u00E9rifier qu\u0027il est d\u00E9j\u00E0 pr\u00E9sent). Configurer la zone pour dnssec-policy qui g\u00E8re seulement la ZSK ou d\u00E9sactiver la g\u00E9n\u00E9ration automatique de KSK dans la policy si possible. Tester la reconnaissance de la KSK via rndc dumpzone ou logs.",
              "Explanation": "L\u0027int\u00E9gration d\u0027une KSK manuelle n\u00E9cessite la pr\u00E9sence physique des fichiers priv\u00E9s/publiques dans keys-dir et la publication du DS c\u00F4t\u00E9 parent pour assurer la validation. Il faut aussi s\u0027assurer que la dnssec-policy n\u0027\u00E9crase pas la cl\u00E9 manuelle (certaines versions permettent de sp\u00E9cifier \u0027manual\u0027 pour KSK)."
            }
          ]
        },
        {
          "Title": "OpenDNSSEC : installation, architecture et int\u00E9gration",
          "Summary": "Pr\u00E9sentation d\u0027OpenDNSSEC, ses composants (SoftHSM, enforcer, signer), d\u00E9ploiement, workflows d\u0027int\u00E9gration avec serveurs DNS et gestion centralis\u00E9e des cl\u00E9s.",
          "EstimatedMinutes": 120,
          "LearningObjectives": [
            "Comprendre le r\u00F4le et l\u0027int\u00E9r\u00EAt d\u0027OpenDNSSEC dans la gestion DNSSEC des zones",
            "Identifier et expliquer les composants cl\u00E9s d\u0027OpenDNSSEC (SoftHSM, enforcer, signer, keystores, uds/transfer)",
            "Installer et configurer OpenDNSSEC dans un environnement de test (SoftHSM pour les HSM logiciels)",
            "D\u00E9ployer une architecture d\u0027int\u00E9gration entre OpenDNSSEC et serveurs DNS (BIND, NSD, PowerDNS)",
            "Distinguer et mettre en \u0153uvre les workflows de signature manuelle et automatique",
            "Mettre en place une gestion centralis\u00E9e des cl\u00E9s et des politiques de signature (policy.xml)",
            "Appliquer les bonnes pratiques de s\u00E9curit\u00E9, de sauvegarde et de rotation des cl\u00E9s",
            "Diagnostiquer et r\u00E9soudre les probl\u00E8mes courants li\u00E9s \u00E0 OpenDNSSEC"
          ],
          "Content": "Pr\u00E9sentation d\u0027OpenDNSSEC\r\nOpenDNSSEC est une suite logicielle open source destin\u00E9e \u00E0 automatiser la gestion des cl\u00E9s DNSSEC et la signature des zones. Elle d\u00E9couple la gestion des cl\u00E9s (enforcer) de l\u0027acte de signature (signer), permet d\u0027utiliser des HSM via PKCS#11 (SoftHSM en laboratoire), et offre des m\u00E9canismes pour int\u00E9grer des flux de zones vers des serveurs DNS. L\u0027objectif est d\u0027assurer conformit\u00E9, s\u00E9curit\u00E9 et tra\u00E7abilit\u00E9 du cycle de vie des cl\u00E9s tout en r\u00E9duisant les erreurs humaines.\r\n\r\nComposants principaux\r\nPrincipaux composants: 1) Enforcer: g\u00E8re le cycle de vie des cl\u00E9s (g\u00E9n\u00E9ration, rollover, archivage) selon la policy.xml et stocke les cl\u00E9s dans un keystore (HSM ou SoftHSM). 2) Signer: consomme les cl\u00E9s du keystore et signe les zones selon la configuration. 3) SoftHSM: impl\u00E9mentation logicielle d\u0027un HSM compatible PKCS#11 utilis\u00E9e en d\u00E9veloppement et test. 4) ods-control / ods-enforcerctl: outils d\u0027administration pour contr\u00F4ler les services. 5) Keystore/AXFR endpoints: emplacement d\u0027entr\u00E9e/sortie des zones (par fichier, AXFR, ou via push). 6) Bases de donn\u00E9es internes: gestion des m\u00E9tadonn\u00E9es et statut des zones (sqlite/postgresql selon l\u0027installation).\r\n\r\nPr\u00E9requis et installation\r\nPr\u00E9requis typiques: syst\u00E8me Linux (Debian/Ubuntu/CentOS), paquets OpenDNSSEC \u002B d\u00E9pendances (libhsm, libdb, sqlite/postgres), SoftHSM2 pour tests, PKCS#11 tooling (p11tool, pkcs11-tool), et serveur DNS pour int\u00E9grer la sortie sign\u00E9e. \u00C9tapes d\u0027installation: 1) installer SoftHSM2 et initialiser un token PKCS#11; 2) installer OpenDNSSEC (paquets ou compilation); 3) configurer les fichiers principaux: conf.xml, enforcer.conf, signer.conf et policy.xml; 4) initialiser la base locale et le keystore; 5) d\u00E9marrer enforcer puis signer. Attention aux permissions et au chemin du module PKCS#11.\r\n\r\nD\u00E9ploiement pas \u00E0 pas (exemple simplifi\u00E9)\r\n1) Installer et configurer SoftHSM2: cr\u00E9er un token et noter le PIN et l\u0027ID. 2) Configurer conf.xml pour indiquer le module PKCS#11 et les emplacements des r\u00E9pertoires (input, signed, temp). 3) \u00C9diter policy.xml pour d\u00E9finir algorithmes, lifetimes et timing des rollovers (KSK/ZSK, publication, retrait). 4) Lancer ods-enforcer et laisser g\u00E9n\u00E9rer les cl\u00E9s selon la policy. 5) Alimenter le flux de zones (d\u00E9poser des fichiers .zone dans le r\u00E9pertoire d\u0027entr\u00E9e ou permettre AXFR depuis le master). 6) Lancer ods-signerd et v\u00E9rifier que les zones sont sign\u00E9es et export\u00E9es vers le r\u00E9pertoire sign\u00E9. 7) Configurer le serveur DNS pour servir les zones sign\u00E9es et recharger la configuration.\r\n\r\nArchitecture et flux de donn\u00E9es\r\nArchitecture logique: un enforcer contr\u00F4le le keystore/HSM et g\u00E8re les politiques, il fournit les cl\u00E9s au signer. Le signer r\u00E9cup\u00E8re les zones non sign\u00E9es depuis un point d\u0027entr\u00E9e (r\u00E9pertoire, AXFR, API), applique la signature avec les cl\u00E9s pr\u00E9sentes dans le keystore, et \u00E9crit les zones sign\u00E9es dans un r\u00E9pertoire de sortie ou pousse vers le serveur DNS. En production, on s\u00E9pare souvent les r\u00F4les: enforcer dans un r\u00E9seau s\u00E9curis\u00E9 avec acc\u00E8s HSM, signer(s) en front-office proches des serveurs DNS. Les communications doivent \u00EAtre s\u00E9curis\u00E9es (TLS/SSH pour transferts, ACL pour acc\u00E8s filesystem).\r\n\r\nWorkflows d\u0027int\u00E9gration avec serveurs DNS\r\nInt\u00E9gration par fichiers (simple): OpenDNSSEC \u00E9crit des fichiers sign\u00E9s que le serveur DNS (BIND/NSD) sert; on configure le serveur pour pointer vers le r\u00E9pertoire signed et on automatise le rechargement (rndc reload pour BIND). Int\u00E9gration par transfert AXFR: le signer peut demander AXFR \u00E0 un master, signer la zone puis transf\u00E9rer la zone sign\u00E9e (notify \u002B AXFR) vers esclaves ou vers le serveur de production. Int\u00E9gration via API/plug-in: certains serveurs (PowerDNS) peuvent consommer directement la sortie sign\u00E9e via scripts ou modules. Sc\u00E9nario recommand\u00E9 en production: signer(s) proches des serveurs de noms autoritaires pour minimiser latence et complexit\u00E9 r\u00E9seau, enforcer centralis\u00E9 avec HSM.\r\n\r\nGestion centralis\u00E9e des cl\u00E9s\r\nLa centralisation s\u0027appuie sur un HSM (ou SoftHSM en test) pour conserver les cl\u00E9s priv\u00E9es en dehors des serveurs de signatures. L\u0027enforcer applique la policy.xml pour g\u00E9n\u00E9rer KSK et ZSK, effectuer rollovers planifi\u00E9s et archiver les anciennes cl\u00E9s. Strat\u00E9gies: s\u00E9parer KSK et ZSK sur diff\u00E9rents tokens/HSM, d\u00E9finir p\u00E9riodes de publication et retrait, conserver export des cl\u00E9s publiques et DS pour la publication dans le parent. Sauvegardes: exporter m\u00E9tadonn\u00E9es et backups chiffr\u00E9s, documenter proc\u00E9dures de restauration et rotations d\u0027urgence. Contr\u00F4les d\u0027acc\u00E8s et audit: journaux d\u0027enforcer et HSM, gestion des PINs/roles, rotation des secrets d\u0027administration.\r\n\r\nS\u00E9curit\u00E9, maintenance et bonnes pratiques\r\nPrincipes: 1) utiliser un HSM en production et minimiser l\u0027exposition des cl\u00E9s priv\u00E9es; 2) tenir la policy.xml sous contr\u00F4le de version et tester les rollovers en environnement staging; 3) automatiser les tests de signature et la validation DNSSEC (dig \u002B dnssec-tools); 4) surveiller les services ods-enforcer/ods-signerd et les logs pour erreurs de PKCS#11, permissions, ou time skew; 5) planifier la rotation et conserver les archives des cl\u00E9s pour la validation historique; 6) tester la restauration d\u0027un keystore et la synchronisation des DS si rollover KSK.\r\n\r\nD\u00E9pannage courant\r\nErreurs fr\u00E9quentes: 1) module PKCS#11 non trouv\u00E9 ou acc\u00E8s refus\u00E9 \u2192 v\u00E9rifier le chemin du module et les permissions; 2) tokens non initialis\u00E9s \u2192 v\u00E9rifier SoftHSM init et PIN; 3) time skew entre signer et parent \u2192 synchroniser NTP; 4) policy mal configur\u00E9e provoquant rollovers fr\u00E9quents \u2192 valider policy.xml; 5) serveurs DNS servant encore des zones non sign\u00E9es \u2192 v\u00E9rifier chemins et droits de fichiers, scripts d\u0027export. Outils utiles: ods-control, ods-enforcerctl, ods-signerd status, logs syslog/journalctl et utilitaires PKCS#11.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Nommez et d\u00E9crivez bri\u00E8vement les trois composants principaux d\u0027OpenDNSSEC et leur r\u00F4le dans le processus de signature.",
              "Answer": "Enforcer: g\u00E8re le cycle de vie des cl\u00E9s (g\u00E9n\u00E9ration, rollover, archivage) et stocke les cl\u00E9s dans le keystore/HSM. Signer: utilise les cl\u00E9s fournies par l\u0027enforcer pour signer les zones et exporter les zones sign\u00E9es vers le serveur DNS. SoftHSM (HSM): impl\u00E9mentation PKCS#11 pour stocker de fa\u00E7on s\u00E9curis\u00E9e les cl\u00E9s priv\u00E9es; en production un HSM mat\u00E9riel remplace SoftHSM.",
              "Explanation": "Cette r\u00E9ponse montre la s\u00E9paration des responsabilit\u00E9s: enforcer = gestion des cl\u00E9s et politique; signer = op\u00E9ration de signature; HSM/SoftHSM = stockage s\u00E9curis\u00E9 des cl\u00E9s. Cette s\u00E9paration est fondamentale pour la s\u00E9curit\u00E9 et l\u0027\u00E9volutivit\u00E9."
            },
            {
              "Instruction": "Donnez les \u00E9tapes essentielles pour initialiser SoftHSM2 et pr\u00E9parer OpenDNSSEC pour g\u00E9n\u00E9rer des cl\u00E9s (commande simplifi\u00E9e pour un environnement de test).",
              "Answer": "1) Installer SoftHSM2. 2) Initialiser un token: softhsm2-util --init-token --slot 0 --label \u0027ods-token\u0027 --pin 1234 --so-pin 5678. 3) Noter le label/PIN et v\u00E9rifier le module PKCS#11: find /usr -name libsofthsm2.so. 4) Configurer conf.xml d\u0027OpenDNSSEC pour pointer vers le module PKCS#11 et le keystore. 5) D\u00E9marrer ods-enforcer; il g\u00E9n\u00E9rera les cl\u00E9s selon policy.xml.",
              "Explanation": "L\u0027initialisation du token cr\u00E9e un emplacement s\u00E9curis\u00E9 pour les cl\u00E9s. Configurer conf.xml est n\u00E9cessaire pour que l\u0027enforcer puisse communiquer avec le module PKCS#11. Les PINs doivent \u00EAtre stock\u00E9s de fa\u00E7on s\u00E9curis\u00E9e en production; ici l\u0027exemple est simplifi\u00E9 pour un labo."
            },
            {
              "Instruction": "D\u00E9crivez un workflow d\u0027int\u00E9gration simple entre OpenDNSSEC et BIND en mode fichier (comment la zone passe de non sign\u00E9e \u00E0 servie sign\u00E9e).",
              "Answer": "1) D\u00E9poser la zone non sign\u00E9e dans le r\u00E9pertoire d\u0027entr\u00E9e d\u0027OpenDNSSEC (ou configurer AXFR depuis le master). 2) Le signer r\u00E9cup\u00E8re la zone, applique la signature avec les cl\u00E9s du keystore et \u00E9crit la zone sign\u00E9e dans le r\u00E9pertoire \u0027signed\u0027. 3) Le serveur BIND est configur\u00E9 pour lire la zone depuis ce r\u00E9pertoire \u0027signed\u0027. 4) Apr\u00E8s mise \u00E0 jour des fichiers, ex\u00E9cuter rndc reload (ou automatiser via inotify/script) pour que BIND prenne en compte la zone sign\u00E9e.",
              "Explanation": "Ce workflow illustre le mod\u00E8le le plus simple: OpenDNSSEC transforme des fichiers d\u0027entr\u00E9e en sorties sign\u00E9es, et BIND sert ces fichiers. L\u0027automatisation du rechargement est importante pour la disponibilit\u00E9."
            },
            {
              "Instruction": "Un administrateur voit l\u0027erreur \u0027PKCS#11 token not found\u0027 dans les logs d\u0027ods-enforcer. Donnez trois v\u00E9rifications \u00E0 effectuer et la raison de chacune.",
              "Answer": "1) V\u00E9rifier que le chemin du module PKCS#11 dans conf.xml est correct (sinon l\u0027enforcer ne trouve pas le module). 2) V\u00E9rifier que le token SoftHSM est initialis\u00E9 (softhsm2-util --show-slots) et que le label/PIN correspondent \u00E0 la config (sinon pas de token disponible). 3) V\u00E9rifier les permissions du fichier de module et de l\u0027user ex\u00E9cutant ods-enforcer (sinon acc\u00E8s refus\u00E9), et s\u0027assurer que le service a acc\u00E8s aux variables d\u0027environnement n\u00E9cessaires.",
              "Explanation": "Ces v\u00E9rifications couvrent les causes les plus courantes: module absent/mauvais chemin, token non-initialis\u00E9 et probl\u00E8mes de permissions. Corriger chacune permet \u00E0 l\u0027enforcer d\u0027acc\u00E9der au HSM pour g\u00E9n\u00E9rer/utiliser les cl\u00E9s."
            }
          ]
        },
        {
          "Title": "Surveillance, validation et d\u00E9pannage des signatures DNSSEC",
          "Summary": "Outils et m\u00E9thodes pour valider les signatures (dig \u002Bdnssec, ldns-verify, validate-tool), surveiller l\u0027\u00E9tat des cl\u00E9s et diagnostiquer les erreurs de cha\u00EEne de confiance.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Comprendre les principes de validation DNSSEC et la cha\u00EEne de confiance (DNSKEY, RRSIG, DS au parent).",
            "Savoir utiliser dig (\u002Bdnssec) pour v\u00E9rifier l\u2019\u00E9tat des signatures et rep\u00E9rer les sympt\u00F4mes courants d\u2019un probl\u00E8me DNSSEC.",
            "Savoir utiliser ldns-verify pour valider une zone sign\u00E9e localement et interpr\u00E9ter ses rapports.",
            "Conna\u00EEtre l\u2019usage d\u2019un outil de validation automatis\u00E9e (validate-tool) pour tester la cha\u00EEne de confiance depuis un point de r\u00E9solution.",
            "Savoir surveiller l\u2019\u00E9tat des cl\u00E9s et signatures (expiration, fen\u00EAtre de validit\u00E9, rollover) et automatiser les contr\u00F4les.",
            "Savoir diagnostiquer et corriger les erreurs typiques (RRSIG expir\u00E9, DS manquant, algorithme non support\u00E9, horloge syst\u00E8me, incoh\u00E9rence DNSKEY/DS).",
            "\u00C9laborer une proc\u00E9dure d\u2019intervention et de test \u00E0 mettre en place en cas d\u2019incident DNSSEC."
          ],
          "Content": "1) Rappels rapides : \u00E9l\u00E9ments de la cha\u00EEne de confiance DNSSEC\r\nAvant d\u2019aborder les outils et proc\u00E9dures, rappeler les composants et leur r\u00F4le :\n- DNSKEY : cl\u00E9s publi\u00E9es dans la zone (flags indiquant KSK/SEP/zone-signing). Une zone peut contenir KSK et ZSK.\n- RRSIG : signatures appos\u00E9es sur les jeux d\u2019enregistrements (RRset). Chaque RRSIG a un champ d\u2019expiration (expiration) et de d\u00E9but de validit\u00E9 (inception).\n- DS : enregistrement stock\u00E9 au parent (zone parente) qui atteste une DNSKEY (identifiant \u002B algorithme \u002B digest). L\u2019absence ou la mauvaise correspondance DS casse la cha\u00EEne.\n- Trust anchor : cl\u00E9 de confiance, g\u00E9n\u00E9ralement la cl\u00E9 KSK du point d\u2019ancrage (ex : . ou zone interne) utilis\u00E9e par le r\u00E9solveur valideur.\n- R\u00E9solution valideur : le r\u00E9solveur doit v\u00E9rifier RRSIG avec DNSKEY, v\u00E9rifier que la DNSKEY est valid\u00E9e par un DS jusque-l\u00E0 connect\u00E9 \u00E0 la trust anchor.\r\n\r\n2) Utiliser dig (\u002Bdnssec) : commandes et interpr\u00E9tation\r\ndig est l\u0027outil le plus courant pour des v\u00E9rifications rapides.\nCommandes typiques :\n- V\u00E9rifier la pr\u00E9sence de signatures sur un RRset :\n  dig \u002Bdnssec example.com A @ns1.example.com\n  Interpr\u00E9tation : la section ANSWER contiendra des enregistrements RRSIG pour A si la zone est sign\u00E9e.\n- V\u00E9rifier les DNSKEY publi\u00E9s :\n  dig \u002Bdnssec example.com DNSKEY @ns1.example.com\n  Interpr\u00E9tation : regardez les flags (256 = ZSK, 257 = KSK/SEP), les algorithmes et la pr\u00E9sence attendue de la cl\u00E9 utilis\u00E9e par le DS.\n- Tester la validation par un r\u00E9solveur (r\u00E9ponse en cha\u00EEne) :\n  dig \u002Bdnssec @8.8.8.8 example.com\n  Interpr\u00E9tation : si le r\u00E9solveur est validant, une erreur de validation m\u00E8ne souvent \u00E0 STATUS = SERVFAIL. Si le drapeau AD (Authenticated Data) est pr\u00E9sent, la r\u00E9ponse a \u00E9t\u00E9 valid\u00E9e.\n- Tracer la r\u00E9solution compl\u00E8te :\n  dig \u002Bdnssec \u002Btrace example.com\n  Interpr\u00E9tation : utile pour voir quel serveur renvoie des donn\u00E9es non sign\u00E9es ou provoque la rupture.\nPoints d\u2019attention :\n- Absence de RRSIG sur un RRset attendu -\u003E zone non sign\u00E9e ou \u00E9chec de g\u00E9n\u00E9ration.\n- RRSIG pr\u00E9sent mais r\u00E9solution retourne SERVFAIL chez un r\u00E9solveur validateur -\u003E probables probl\u00E8mes de signature (expir\u00E9e), DS manquant, ou DNSKEY non valide.\n- AD flag (dans l\u2019en-t\u00EAte de la r\u00E9ponse) indique que le r\u00E9solveur local a valid\u00E9 la r\u00E9ponse.\nExemples d\u2019indices dans la sortie :\n- \u0022status: SERVFAIL\u0022 avec \u002Bdnssec -\u003E probable rupture de validation.\n- RRSIG avec une date d\u2019expiration pass\u00E9e -\u003E signatures expir\u00E9es.\r\n\r\n3) ldns-verify : valider une zone sign\u00E9e localement\r\nldns-verify (fourni par la suite ldns) est utilis\u00E9 pour v\u00E9rifier la coh\u00E9rence d\u2019un fichier de zone sign\u00E9 et la validit\u00E9 des signatures.\nUsages courants :\n- V\u00E9rifier un fichier de zone sign\u00E9 : ldns-verify zonefile.zone\n  Que v\u00E9rifie l\u2019outil : format, pr\u00E9sence de RRSIG pour chaque RRset, validit\u00E9 temporelle des signatures, coh\u00E9rence des NSEC/NSEC3.\n- Contr\u00F4les fr\u00E9quents et interpr\u00E9tation des messages :\n  - \u0022RRSIG expired\u0022 : la signature date est ant\u00E9rieure \u00E0 l\u2019horodatage d\u2019ex\u00E9cution -\u003E il faut resignature.\n  - \u0022No RRSIG for RRset X\u0022 : un RRset n\u2019est pas sign\u00E9 -\u003E probl\u00E8me au moment de la g\u00E9n\u00E9ration des signatures (script d\u2019horodatage/rsigner).\n  - \u0022DNSKEY mismatch\u0022 : les signatures ne correspondent pas aux clefs pr\u00E9sentes -\u003E peut indiquer un probl\u00E8me de rotation incompl\u00E8te.\nConseils pratiques :\n- Toujours v\u00E9rifier le fichier de zone final (apr\u00E8s signer) avant de le d\u00E9ployer chez l\u2019autorit\u00E9.\n- V\u00E9rifier l\u2019horloge de la machine effectuant la signature : une horloge incorrecte provoque des signatures non valides.\r\n\r\n4) validate-tool (outil de validation automatis\u00E9e) : principe et usage\r\nPar \u0022validate-tool\u0022 on entend un outil de validation qui simule la validation DNSSEC compl\u00E8te depuis un r\u00E9solveur (exemples g\u00E9n\u00E9riques : scripts bas\u00E9s sur ldns/Unbound, validate from BIND, ou outils tiers). L\u2019id\u00E9e : automatiser des tests r\u00E9guliers depuis l\u2019ext\u00E9rieur.\nFonctionnalit\u00E9s attendues :\n- Valider la cha\u00EEne de confiance compl\u00E8te (from root down to zone) en utilisant une trust anchor.\n- D\u00E9tecter : RRSIG expir\u00E9es, cl\u00E9s ou DS divergents, algorithmes non support\u00E9s, fragmentation entre serveurs.\n- Rapporter l\u2019\u00E9tat (OK/WARN/CRITICAL) et extraire diagnostics (message d\u2019erreur de validation).\nExemple d\u2019usage g\u00E9n\u00E9rique :\n- Lancer une validation compl\u00E8te et obtenir un rapport : validate-tool --trust-anchor=/etc/ta/ta.key --server=ns1.example.com example.com\n- Programme de tests automatis\u00E9s peut : r\u00E9cup\u00E9rer DNSKEY/DS, comparer le DS parent, v\u00E9rifier la date d\u2019expiration des RRSIG, effectuer r\u00E9solutions depuis plusieurs points.\nInt\u00E9gration :\n- Int\u00E9grer ces contr\u00F4les \u00E0 une plateforme de supervision (Nagios/Prometheus) pour des alertes automatiques.\r\n\r\n5) Surveillance : quoi mesurer et comment\r\nIndicateurs cl\u00E9s \u00E0 surveiller :\n- Expiration la plus proche des RRSIG pour chaque RRset (heure/TTL restant). Alertes \u00E0 J-7, J-2, J-1 ou seuils policy.\n- Age et \u00E9tat des cl\u00E9s : date de cr\u00E9ation, fen\u00EAtre de rollover, correspondance DS au parent.\n- R\u00E9solution par r\u00E9solveurs publics et internes (\u00E9chantillonnage g\u00E9ographique) : taux d\u2019\u00E9chec DNSSEC (SERVFAILs pour v\u00E9rit\u00E9 sign\u00E9e).\n- Changement de jeu d\u2019enregistrements des DNSKEY (nouvelle cl\u00E9 publi\u00E9e) : d\u00E9tection d\u2019un KSK rotation non finalis\u00E9e.\nM\u00E9thodes de collecte :\n- Requ\u00EAtes synthetic (synthetic queries) p\u00E9riodiques : DNSKEY, DS (via parent), RRSIG pour les RRset critiques (SOA, NS, A/AAAA pour les services), r\u00E9solution compl\u00E8te avec validation.\n- Exporter r\u00E9sultats vers Prometheus : metrics possibles : dnssec_rrsig_expires_seconds, dnssec_validation_status{resolver=...,zone=...} (0=OK,1=warn,2=fail), dnskey_count, ds_match.\nExemples d\u2019alertes :\n- Alerte CRITICAL si validation_status == 2 (\u00E9chec) sur \u003E 5 minutes.\n- WARN si la signature la plus proche d\u2019expirer est dans \u003C 48 heures.\n- WARN si un DNSKEY marqu\u00E9 KSK/SEP a chang\u00E9 sans DS mis \u00E0 jour au parent.\r\n\r\n6) Diagnostic des erreurs courantes et rem\u00E9diations\r\nPrincipaux sympt\u00F4mes, causes probables et actions correctrices :\n- Symptom: R\u00E9solution d\u2019une zone sign\u00E9e renvoie SERVFAIL chez r\u00E9solveur valideur.\n  Causes possibles : signatures expir\u00E9es, DNSKEY non correspondants, DS manquant/incorrect chez le parent, horloge syst\u00E8me incorrecte.\n  Rem\u00E9diation : v\u00E9rifier RRSIG dates, reg\u00E9n\u00E9rer signatures si expir\u00E9es, v\u00E9rifier DNSKEY \u0026 DS (dig \u002Bdnssec zone DNSKEY et v\u00E9rification DS chez parent), synchroniser horloge (NTP/chrony).\n- Symptom: RRSIG pr\u00E9sent mais validation \u00E9choue pour certains RRset seulement.\n  Causes : RRset non-sign\u00E9, mauvais processus de signature qui ignore certains types, NSEC/NSEC3 mal form\u00E9s.\n  Rem\u00E9diation : re-signer la zone, v\u00E9rifier scripts d\u2019automatisation, utiliser ldns-verify sur le fichier de zone.\n- Symptom: Probl\u00E8me apr\u00E8s un rollover KSK.\n  Causes : DS non publi\u00E9 au parent ou publication tardive / mauvais digest, rotation en deux \u00E9tapes mal men\u00E9e.\n  Rem\u00E9diation : suivre la proc\u00E9dure de rollover (double publication si n\u00E9cessit\u00E9), g\u00E9n\u00E9rer le DS \u00E0 partir de la cl\u00E9 qui doit \u00EAtre sign\u00E9e, coordonner mise \u00E0 jour parent avant retrait de l\u2019ancienne cl\u00E9.\n- Symptom: Certains r\u00E9solveurs acceptent la zone, d\u0027autres non.\n  Causes : certains r\u00E9solveurs utilisent des jeux de cl\u00E9s/trust-anchor diff\u00E9rents, diff\u00E9rences d\u2019impl\u00E9mentation algorithme.\n  Rem\u00E9diation : tester depuis plusieurs r\u00E9solveurs, v\u00E9rifier algorithmes support\u00E9s, fournir compatibilit\u00E9 descendante si possible.\n- Symptom: Erreurs lors de la v\u00E9rification locale du fichier de zone (ldns-verify errors).\n  Causes : erreurs de format, HORODATAGE d\u2019inception/expiration non coh\u00E9rent, entre autres.\n  Rem\u00E9diation : corriger zonefile local, resigner, refaire tests avant publication.\r\n\r\n7) Bonnes pratiques et proc\u00E9dure d\u2019intervention\r\nProc\u00E9dure recommand\u00E9e en cas d\u2019alerte DNSSEC :\n1. Reproduire le probl\u00E8me depuis un point externe (dig \u002Bdnssec @8.8.8.8 zone \u002Btrace) pour confirmer l\u2019impact et la port\u00E9e.\n2. V\u00E9rifier signatures locales : ldns-verify sur la derni\u00E8re version du fichier de zone.\n3. V\u00E9rifier DNSKEY publi\u00E9s et DS au parent : dig \u002Bdnssec zone DNSKEY @ns \u0026\u0026 dig \u002Bdnssec parent DS @parent-NS\n4. V\u00E9rifier horloge des serveurs (NTP). Si signatures expir\u00E9es -\u003E resigner et d\u00E9ployer.\n5. Si rollover r\u00E9cent : v\u00E9rifier que DS publi\u00E9 correspond au bon DNSKEY (digest type et valeur).\n6. Apr\u00E8s correction, tester r\u00E9solution depuis plusieurs r\u00E9solveurs et v\u00E9rifier AD flag.\n7. Mettre \u00E0 jour le runbook, noter la cause racine et am\u00E9liorer la surveillance pour pr\u00E9venir r\u00E9currence.\nChecklist \u00E0 maintenir : documentation des proc\u00E9dures de rollover, scripts de signature automatis\u00E9s test\u00E9s, playbooks pour synchronisation avec l\u2019op\u00E9rateur parent (registrar/registre).\r\n\r\n8) Exemples pratiques et sc\u00E9narios types\r\nCas d\u2019usage concrets \u00E0 mettre en place dans vos environnements :\n- Test quotidien automatique : DNSKEY \u002B DS check, RRSIG nearest expiry, r\u00E9solution compl\u00E8te A/AAAA/SOA.\n- Avant chaque modification (rollover, changement d\u2019algorithme) : environnement de staging, ldns-verify sur zone sign\u00E9e, test validate-tool depuis plusieurs points.\n- En cas de turnaround rapide : script de g\u00E9n\u00E9ration rapide et propagation de signatures de courte dur\u00E9e (pour restauration temporaire), puis remis en configuration standard.\nNote sur s\u00E9curit\u00E9 : les clefs priv\u00E9es doivent rester hors des serveurs expos\u00E9s ; utiliser des HSM ou des environnements s\u00E9curis\u00E9s pour la signature automatique.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 : Interpr\u00E9ter un dig DNSKEY\nVous ex\u00E9cutez : dig \u002Bdnssec example.com DNSKEY @ns1.example.com\nLa section ANSWER renvoie deux DNSKEY : la premi\u00E8re a flags=257, la seconde flags=256. Expliquez ce que signifient ces flags et quelles conclusions tirer concernant KSK/ZSK et la trust anchor.",
              "Answer": "flags=257 indique une cl\u00E9 KSK/SEP (valeur 257 = bit 0x0101 -\u003E bit 8 (KSK) \u002B zone-signee); flags=256 indique une ZSK (valeur 256 = bit 0x0100). Conclusion : la zone publie une KSK (probablement utilis\u00E9e comme cl\u00E9 de confiance / pour DS) et une ZSK utilis\u00E9e pour la signature des RRset. Il faut v\u00E9rifier que la KSK correspond (via DS) \u00E0 celle publi\u00E9e au parent si la zone est d\u00E9l\u00E9g\u00E9e.",
              "Explanation": "En DNSSEC, le champ flags des DNSKEY contient des indicateurs : 256 typique pour la cl\u00E9 de signature de zone (ZSK) tandis que 257 (256 \u002B 1) indique la KSK/SEP (Key Signing Key / Secure Entry Point). La KSK est celle que l\u2019on lie au parent via un DS pour \u00E9tablir la cha\u00EEne de confiance ; la ZSK est g\u00E9n\u00E9ralement utilis\u00E9e pour signer en continu les RRset."
            },
            {
              "Instruction": "Exercice 2 : Diagnostic d\u2019un SERVFAIL DNSSEC\nSympt\u00F4me : les utilisateurs rapportent que www.example.com renvoie SERVFAIL depuis certains r\u00E9solveurs. Votre command-line : dig \u002Bdnssec @8.8.8.8 www.example.com et la r\u00E9ponse est STATUS: SERVFAIL. D\u00E9crivez les \u00E9tapes de diagnostic (outils/commandes) pour identifier la cause la plus probable.",
              "Answer": "\u00C9tapes : 1) Lancer dig \u002Bdnssec \u002Btrace example.com pour voir o\u00F9 la cha\u00EEne casse. 2) V\u00E9rifier DNSKEY directement sur l\u2019autorit\u00E9 : dig \u002Bdnssec example.com DNSKEY @ns1.example.com pour voir si DNSKEY est publi\u00E9 et si RRSIG existent. 3) V\u00E9rifier DS chez le parent : dig \u002Bdnssec parent-zone. DS example.com @ns-parent pour confirmer qu\u2019un DS correspond \u00E0 une DNSKEY. 4) V\u00E9rifier les RRSIG dates : dans la sortie de dig ou via ldns-verify sur le fichier de zone pour d\u00E9tecter signatures expir\u00E9es. 5) V\u00E9rifier l\u2019horloge des serveurs de signatures. 6) Utiliser validate-tool depuis un point ext\u00E9rieur pour avoir un message de validation pr\u00E9cis. Selon le r\u00E9sultat : resigner la zone si RRSIG expir\u00E9es, ou corriger/mis \u00E0 jour DS si le DS est manquant/incorrect.",
              "Explanation": "SERVFAIL en contexte DNSSEC indique g\u00E9n\u00E9ralement un \u00E9chec de validation. Les commandes propos\u00E9es permettent de localiser si le probl\u00E8me vient de la zone elle-m\u00EAme (DNSKEY/RRSIG), du parent (DS) ou du chemin de r\u00E9solution (serveur interm\u00E9diaire). Les interventions correspondent aux causes typiques : resigner, mettre \u00E0 jour DS, corriger horloge."
            },
            {
              "Instruction": "Exercice 3 : Erreur avec ldns-verify\nVous ex\u00E9cutez ldns-verify zonefile.zone et obtenez : \u0022RRSIG for RRset \u0027www.example.com. A\u0027 expired\u0022. Quelles sont les causes possibles et quelles actions prenez-vous avant de republier la zone ?",
              "Answer": "Causes possibles : l\u2019horloge syst\u00E8me de la machine qui a sign\u00E9 la zone \u00E9tait incorrecte lors de la signature ; la zone n\u2019a pas \u00E9t\u00E9 resign\u00E9e \u00E0 temps (processus ou automation cass\u00E9) ; la signature a \u00E9t\u00E9 g\u00E9n\u00E9r\u00E9e avec un intervalle de validit\u00E9 trop court. Actions : 1) V\u00E9rifier et corriger l\u2019horloge syst\u00E8me (NTP). 2) Resigner la zone (g\u00E9n\u00E9rer de nouvelles RRSIG valides) et relancer ldns-verify pour confirmer l\u2019absence d\u2019erreurs. 3) Inspecter et corriger le processus d\u2019automatisation de signature pour pr\u00E9venir r\u00E9currence (ajuster p\u00E9riodicit\u00E9, fen\u00EAtres de renouvellement). 4) D\u00E9ployer la zone sign\u00E9e sur les serveurs d\u2019autorit\u00E9 et v\u00E9rifier depuis des r\u00E9solveurs validateurs externes.",
              "Explanation": "Un RRSIG expir\u00E9 est souvent une erreur op\u00E9rationnelle plut\u00F4t qu\u2019un probl\u00E8me de format. L\u2019horloge et l\u2019automatisation sont les causes les plus fr\u00E9quentes. La rem\u00E9diation directe est de resigner et redeployer, puis corriger le processus sous-jacent."
            },
            {
              "Instruction": "Exercice 4 : Concevoir une alerte pour les signatures proches de l\u2019expiration\nProposez trois m\u00E9triques/alertes \u00E0 mettre en place pour \u00E9viter une interruption DNSSEC li\u00E9e aux expirations de RRSIG, avec seuils et messages d\u2019alerte succincts.",
              "Answer": "1) Metric: dnssec_rrsig_nearest_expiry_seconds{zone=...}\n   Alerte WARN si \u003C 7*24*3600 (moins de 7 jours): \u0022SIGNATURES_DUE_RENEWAL: Signatures for zone {{zone}} expire in \u003C7 days\u0022\n2) Metric: dnssec_rrsig_nearest_expiry_seconds\n   Alerte CRITICAL if \u003C 48*3600 (moins de 48 heures): \u0022SIGNATURES_CRITICAL_EXPIRY: Signatures for zone {{zone}} expire in \u003C48 hours - resigner immediately\u0022\n3) Metric: dnssec_validation_status{zone=...,resolver=...} (0=OK,1=WARN,2=FAIL)\n   Alerte CRITICAL if validation_status == 2 for \u003E 5 minutes: \u0022DNSSEC_VALIDATION_FAILURE: Zone {{zone}} failing validation on resolver {{resolver}}\u0022\nCes alertes permettent un pr\u00E9avis (7 jours), une action urgente (48 heures) et la d\u00E9tection d\u2019un \u00E9chec effectif de validation en production.",
              "Explanation": "Surveiller l\u2019expiration la plus proche permet de planifier le resigne avant incident. Un palier WARN donne de la marge pour op\u00E9rer un rollover ou relancer l\u2019automatisation ; le palier CRITICAL d\u00E9clenche une action imm\u00E9diate. La v\u00E9rification active de la validation d\u00E9tecte les probl\u00E8mes ind\u00E9pendamment des \u00E9ch\u00E9ances de signature (ex : DS manquant)."
            }
          ]
        },
        {
          "Title": "Cas pratiques : exercices de rollover, incident et r\u00E9cup\u00E9ration",
          "Summary": "Exercices guid\u00E9s simulant rollovers, compromission de cl\u00E9 et sc\u00E9narios de r\u00E9cup\u00E9ration, \u00E9laboration d\u0027un plan op\u00E9rationnel et d\u0027une check-list d\u0027urgence.",
          "EstimatedMinutes": 120,
          "LearningObjectives": [
            "Comprendre les \u00E9tapes et diff\u00E9rences entre rollover manuel et automatique (incluant RFC 5011, CDS/CDNSKEY).",
            "Savoir identifier les signes d\u0027une compromission de cl\u00E9 et \u00E9valuer l\u0027impact sur la zone et les r\u00E9solveurs.",
            "Savoir ex\u00E9cuter un sc\u00E9nario complet de rollover de ZSK et de KSK avec \u00E9tapes op\u00E9rationnelles d\u00E9taill\u00E9es.",
            "\u00C9laborer et documenter un plan op\u00E9rationnel de gestion des cl\u00E9s incluant r\u00F4les, calendrier, sauvegardes et tests.",
            "\u00C9tablir une check-list d\u0027urgence pour r\u00E9pondre rapidement \u00E0 une compromission, r\u00E9duire le temps d\u0027exposition et restaurer confiance.",
            "Comprendre les contraintes temporelles (TTL, propagation, p\u00E9riodes RFC 5011) et leurs implications sur la r\u00E9cup\u00E9ration.",
            "Mettre en place des mesures de validation et des tests post-op\u00E9rationnels pour v\u00E9rifier la bonne publication et acceptation des cl\u00E9s."
          ],
          "Content": "Contexte et port\u00E9e de la le\u00E7on\r\nCette le\u00E7on couvre des exercices pratiques et des sc\u00E9narios r\u00E9alistes pour pratiquer les rollovers de cl\u00E9s DNSSEC (ZSK/KSK), la gestion d\u0027incidents de compromission et les proc\u00E9dures de r\u00E9cup\u00E9ration. Elle s\u0027applique aux environnements utilisant des rollovers manuels, semi-automatiques et automatiques (RFC 5011, CDS/CDNSKEY). L\u0027objectif est d\u0027entra\u00EEner \u00E9quipes et op\u00E9rateurs \u00E0 r\u00E9agir rapidement et correctement, en minimisant l\u0027interruption de service et la perte de confiance.\r\n\r\nRappels techniques essentiels\r\nRappels sur ZSK vs KSK : ZSK signe les enregistrements de la zone, KSK signe la cl\u00E9 publique de la ZSK (DNSKEY) et est r\u00E9f\u00E9renc\u00E9e par le DS publi\u00E9 au parent. Rappels sur TTL, SOA, p\u00E9riode de signature (re-sign), cryptoperiods recommand\u00E9s et diff\u00E9rences entre rollover en double-signature (pre-publish), l\u0027approche de retrait (post-publish) et l\u0027auto-rollover RFC 5011. Notions sur CDS/CDNSKEY pour synchroniser automatiquement le DS c\u00F4t\u00E9 parent et m\u00E9canismes de r\u00E9vocation/retour arri\u00E8re.\r\n\r\n\u00C9tapes op\u00E9rationnelles pour un rollover manuel de ZSK\r\n1) G\u00E9n\u00E9rer la nouvelle ZSK sur l\u0027environnement HSM ou logiciel s\u00E9curis\u00E9. 2) Publier la nouvelle ZSK en parall\u00E8le (double-signature) : ajouter la nouvelle DNSKEY dans la zone et re-signer (signatures avec ancien et nouveau ZSK). 3) Attendre une p\u00E9riode d\u0027observation minimale (au moins la TTL de l\u0027enregistrement DNSKEY et p\u00E9riode de cache) pour assurer que les r\u00E9solveurs ont re\u00E7u la nouvelle cl\u00E9. 4) Retirer l\u0027ancienne ZSK : supprimer la cl\u00E9 de la zone et re-signer uniquement avec la nouvelle ZSK. 5) Surveiller les logs et outils de validation (ldns-verify, dnssec-debugger) pour s\u0027assurer que les r\u00E9solveurs acceptent la nouvelle signature.\r\n\r\n\u00C9tapes op\u00E9rationnelles pour un rollover manuel de KSK\r\n1) G\u00E9n\u00E9rer la nouvelle KSK en environnement s\u00E9curis\u00E9. 2) Publier la nouvelle KSK dans la zone (double-publish) et re-signer la zone afin que DNSKEY contienne l\u0027ancien et le nouveau KSK. 3) Publier le DS correspondant c\u00F4t\u00E9 parent (si manuellement g\u00E9r\u00E9) : cr\u00E9er l\u0027enregistrement DS pour le nouveau KSK et l\u0027ajouter au parent. 4) Attendre la p\u00E9riode n\u00E9cessaire d\u0027acceptation par le parent et la propagation (d\u00E9pend du TTL du DS et des pratiques du parent). 5) Apr\u00E8s validation, retirer l\u0027ancien KSK de la zone et, une fois nettoy\u00E9, demander la suppression du DS ancien c\u00F4t\u00E9 parent.\r\n\r\nRollover automatique et RFC 5011 / CDS-CDNSKEY\r\nRFC 5011 d\u00E9crit la signalisation et l\u0027acceptation automatique d\u0027un nouvel enregistrement de confiance par les validateurs ; il impose des d\u00E9lais (rechercher, hold-down, tiempo) pour \u00E9viter les promotions malveillantes. CDS/CDNSKEY permettent au titulaire de zone de demander automatiquement au parent la publication ou suppression d\u0027un DS. Les op\u00E9rations automatiques r\u00E9duisent les erreurs humaines mais exigent une configuration correcte et une compr\u00E9hension des d\u00E9lais de s\u00E9curit\u00E9 (par ex. p\u00E9riode de retrait/discover).\r\n\r\nGestion d\u0027une compromission de cl\u00E9 : principes de r\u00E9ponse\r\nActions imm\u00E9diates : 1) Isoler la cl\u00E9 compromise et r\u00E9voquer son utilisation en supprimant la cl\u00E9 de la zone (si possible) et en re-signant avec une nouvelle ZSK/KSK; 2) Pr\u00E9venir parties prenantes (operateurs, registrar/parent, CSIRT) selon le plan; 3) Si KSK compromis, coordonner publication d\u0027un nouveau DS ou usage RFC 5011/CDS pour mise \u00E0 jour parent et planifier fen\u00EAtre de transition; 4) Mettre en \u0153uvre mesures forensiques (logs, HSM attestation) pour d\u00E9terminer \u00E9tendue; 5) Communiquer sur l\u0027incident (niveau technique et communication publique si n\u00E9cessaire).\r\n\r\nConception d\u0027un plan op\u00E9rationnel de rollover et de r\u00E9cup\u00E9ration\r\nLe plan doit d\u00E9finir : r\u00F4les et responsabilit\u00E9s (propri\u00E9taire de zone, op\u00E9rateur DNS, contact parent/registrar, \u00E9quipe de s\u00E9curit\u00E9), calendrier type pour rollovers r\u00E9guliers, proc\u00E9dures d\u0027urgence en cas de compromission, inventaire des cl\u00E9s et emplacements de sauvegarde chiffr\u00E9e, proc\u00E9dures de key ceremony, politiques de test et simulation, points de contr\u00F4le (checkpoints) et indicateurs de succ\u00E8s. Int\u00E9grer proc\u00E9dures de communication et une liste de contacts d\u0027urgence pour le registrar/parent et CSIRT.\r\n\r\nCheck-list d\u0027urgence (pr\u00EAte \u00E0 l\u0027emploi)\r\nUne check-list concise \u00E0 suivre en cas d\u0027incident : 1) D\u00E9clarer incident et assembler l\u0027\u00E9quipe d\u0027intervention. 2) Identifier la cl\u00E9 compromise et isoler acc\u00E8s HSM. 3) G\u00E9n\u00E9rer nouvelles cl\u00E9s (ZSK et si besoin KSK) et sauvegarder hors-ligne. 4) Publier nouvelles cl\u00E9s et re-signer la zone en double-signature si possible. 5) Notifier et coordonner mise \u00E0 jour DS c\u00F4t\u00E9 parent (CDS / contact registrar). 6) Surveiller validation et r\u00E9soudre erreurs. 7) Effectuer post-mortem, mise \u00E0 jour des proc\u00E9dures et formation.\r\n\r\nSurveillance, tests et validation post-op\u00E9ration\r\nApr\u00E8s toute op\u00E9ration, ex\u00E9cuter validations techniques : v\u00E9rification de la cha\u00EEne de confiance (dig \u002Bdnssec, ldns), surveillance des taux de validation \u00E9chou\u00E9e, checks de TTL, observation des logs d\u0027erreurs et m\u00E9triques RCODE, audit HSM et rotation des cl\u00E9s compromises. Planifier une fen\u00EAtre de tests en environnement staging avant production et organiser des exercices r\u00E9guliers pour entra\u00EEner l\u0027\u00E9quipe.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 Rollover ZSK (sc\u00E9nario guid\u00E9): Vous administrez example.tld. Actuellement la zone utilise une ZSK vieille de 2 ans. D\u00E9crivez pas \u00E0 pas les commandes et actions \u00E0 r\u00E9aliser pour effectuer un rollover manuel de ZSK sans interrompre la validation DNSSEC. Incluez attente et v\u00E9rifications minimales.",
              "Answer": "1) G\u00E9n\u00E9rer la nouvelle ZSK (ex: avec dnssec-keygen): dnssec-keygen -a RSASHA256 -b 2048 -n ZONE example.tld  -\u003E Knew.ZSK\n2) Ajouter la nouvelle DNSKEY (publique) dans le fichier de zone (ou importer dans l\u0027outil de signing). 3) Re-signer la zone en incluant l\u0027ancienne et la nouvelle ZSK (double-signature). 4) Publier la zone sign\u00E9e et recharger le serveur DNS (ex: rndc reload). 5) Attendre au moins la valeur du TTL de l\u0027enregistrement DNSKEY et du SOA minimum (souvent 3600s\u201386400s) ; surveiller que les validateurs re\u00E7oivent la nouvelle cl\u00E9. 6) V\u00E9rifier avec dig \u002Bdnssec example.tld DNSKEY et v\u00E9rifier que signatures existent pour les RRsets et que validateurs acceptent. 7) Retirer l\u0027ancienne ZSK des DNSKEY et re-signer uniquement avec la nouvelle ZSK. 8) Publier et recharger, puis v\u00E9rifier l\u0027\u00E9tat final (dig \u002Bdnssec, outils de validation).",
              "Explanation": "Double-signature (pre-publish) garantit que les validateurs disposent d\u0027une cl\u00E9 valide pendant la transition. L\u0027attente au moins \u00E9gale au TTL permet d\u0027assurer la propagation des nouvelles cl\u00E9s aux caches. Les v\u00E9rifications avec dig et outils DNSSEC confirment l\u0027absence d\u0027erreurs de signature."
            },
            {
              "Instruction": "Exercice 2 \u2014 Compromission d\u0027une ZSK (sc\u00E9nario d\u0027urgence): Une ZSK a \u00E9t\u00E9 compromise (cl\u00E9 priv\u00E9e extraite). D\u00E9taillez la check-list d\u0027actions imm\u00E9diates \u00E0 ex\u00E9cuter, la mani\u00E8re de limiter l\u0027impact et les communications \u00E0 initier.",
              "Answer": "1) D\u00E9clarer l\u0027incident et assembler l\u0027\u00E9quipe d\u0027intervention. 2) Isoler et r\u00E9voquer la cl\u00E9 compromise : retirer rapidement la ZSK compromise des DNSKEY de la zone. 3) G\u00E9n\u00E9rer une nouvelle ZSK s\u00E9curis\u00E9e et publier imm\u00E9diatement la nouvelle DNSKEY. 4) Re-signer la zone avec la nouvelle ZSK (et KSK inchang\u00E9 si non compromis). 5) Recharger les serveurs DNS et v\u00E9rifier la validation via validateurs publics. 6) Lancer une v\u00E9rification forensique (logs HSM, acc\u00E8s, exportations) et conserver preuves. 7) Notifier parties prenantes internes et, si n\u00E9cessaire, clients/registrar/parent selon politique. 8) Mettre \u00E0 jour la proc\u00E9dure et effectuer un post-mortem.",
              "Explanation": "La priorit\u00E9 est d\u0027emp\u00EAcher l\u0027attaquant d\u0027utiliser la cl\u00E9 compromise pour signer des donn\u00E9es malveillantes. Retirer la cl\u00E9 compromise et re-signer la zone avec une nouvelle ZSK limite l\u0027impact. La coordination et la forensique sont essentielles pour comprendre la cause et \u00E9viter r\u00E9cidive."
            },
            {
              "Instruction": "Exercice 3 \u2014 Compromission d\u0027une KSK (sc\u00E9nario de r\u00E9cup\u00E9ration complexe): Le KSK de example.tld est compromis. Expliquez les \u00E9tapes pour remplacer le KSK, y compris la coordination avec le parent pour mettre \u00E0 jour le DS, et indiquez les risques temporels (propagation, p\u00E9riodes RFC) \u00E0 consid\u00E9rer.",
              "Answer": "1) G\u00E9n\u00E9rer une nouvelle KSK s\u00E9curis\u00E9e (HSM). 2) Publier la nouvelle KSK dans la zone (DNSKEY contient ancien \u002B nouveau KSK). 3) Re-signer la zone pour publier la nouvelle DNSKEY. 4) Cr\u00E9er le DS du nouveau KSK et soumettre au parent (via interface registrar/registry) ; si le parent supporte CDS/CDNSKEY, publier CDS pour trigger mise \u00E0 jour automatique. 5) Attendre la confirmation de publication du DS au parent et la propagation (d\u00E9pend du TTL du DS et politique du parent ; peut prendre heures \u00E0 jours). 6) Une fois le DS du nouveau KSK visible et accept\u00E9, retirer l\u0027ancien KSK de la zone et puis demander la suppression du DS ancien au parent. 7) Surveiller la validation dans la phase et documenter l\u0027op\u00E9ration.\nRisques temporels : propagation du DS au parent, TTL de DS et caches des validateurs, d\u00E9lais impos\u00E9s par RFC 5011 si utilis\u00E9 (p\u00E9riodes de hold-down), et fen\u00EAtre pendant laquelle validateurs peuvent encore utiliser anciens DS -\u003E planifier p\u00E9riode de cohabitation et surveillance \u00E9troite.",
              "Explanation": "KSK affecte la confiance parent-enfant et n\u00E9cessite coordination externe. La double-publication et la mise \u00E0 jour du DS au parent r\u00E9duisent le risque de rupture. Les d\u00E9lais de propagation et les politiques du parent sont des facteurs critiques ; c\u0027est pourquoi on planifie ces op\u00E9rations et on communique avec le registrar/registry."
            },
            {
              "Instruction": "Exercice 4 \u2014 Simuler RFC 5011 (acceptation automatique du nouveau trust anchor): D\u00E9crivez comment configurer un test (en environnement de laboratoire) pour v\u00E9rifier que vos validateurs acceptent automatiquement un nouveau trust anchor via RFC 5011. Quels param\u00E8tres et dur\u00E9es configurez-vous pour acc\u00E9l\u00E9rer le test ?",
              "Answer": "1) Mettre en place une zone de test et un ensemble de validateurs configur\u00E9s pour utiliser RFC 5011 (activer auto-trust-anchor update). 2) Publier un nouveau DNSKEY avec le flag SEP (KSK) et fournir un fichier de configuration pour le r\u00E9solveur pointant vers le hash DS attendu. 3) Pour acc\u00E9l\u00E9rer le test, r\u00E9duire les valeurs temporales RFC 5011 dans l\u0027impl\u00E9mentation de test (discover/hold-down durations) si l\u0027impl\u00E9mentation le permet, par ex. de 30 jours \u00E0 quelques minutes/heures pour le labo uniquement. 4) Publier le nouveau trust anchor et observer que le validateur passe par \u00E9tats: detection -\u003E hold-down -\u003E acceptation. 5) V\u00E9rifier logs et que la cl\u00E9 est marqu\u00E9e active apr\u00E8s expiration de hold-down. 6) R\u00E9p\u00E9ter sc\u00E9nario d\u0027\u00E9chec pour tester protections (cl\u00E9 non annonc\u00E9e, cl\u00E9 supprim\u00E9e pr\u00E9matur\u00E9ment).",
              "Explanation": "RFC 5011 impose des d\u00E9lais pour prot\u00E9ger contre des changements malveillants. En laboratoire, il est courant de configurer dur\u00E9es raccourcies pour tests fonctionnels, mais en production ces valeurs doivent rester conformes aux recommandations pour la s\u00E9curit\u00E9. Observer les \u00E9tats et logs confirme que l\u0027automatisation se comporte comme pr\u00E9vu."
            },
            {
              "Instruction": "Exercice 5 \u2014 \u00C9laboration d\u0027une check-list d\u0027urgence personnalis\u00E9e: R\u00E9digez une check-list de 10 \u00E9l\u00E9ments minimale, pr\u00EAte \u00E0 \u00EAtre imprim\u00E9e, que l\u0027\u00E9quipe op\u00E9rationnelle doit suivre en cas de suspicion de compromission de cl\u00E9.",
              "Answer": "1) D\u00E9clarer incident et activer la cha\u00EEne d\u0027alerte (contacts d\u0027urgence). 2) Identifier cl\u00E9(s) potentiellement compromise(s) (ZSK/KSK) et marquer statut. 3) Isoler acc\u00E8s aux mat\u00E9riels/serveurs/HSM concern\u00E9s. 4) G\u00E9n\u00E9rer nouvelles cl\u00E9s s\u00E9curis\u00E9es et les stocker hors-ligne. 5) Publier nouvelles cl\u00E9s et re-signer la zone (double-publish si possible). 6) Si KSK, contacter registrar/parent pour mise \u00E0 jour DS (CDS si disponible). 7) Recharger serveurs DNS et v\u00E9rifier signatures avec outils de validation. 8) Collecter logs et preuves pour analyse forensique. 9) Communiquer aux parties prenantes et, si requis, au public/clients. 10) Effectuer post-mortem, mettre \u00E0 jour plan et entra\u00EEner l\u0027\u00E9quipe.",
              "Explanation": "La check-list simplifie la r\u00E9ponse dans l\u0027urgence : prioriser l\u0027arr\u00EAt de la fuite (isoler cl\u00E9), restaurer int\u00E9grit\u00E9 (nouvelles cl\u00E9s \u0026 signatures), coordonner avec le parent si besoin, et documenter/analyser pour \u00E9viter r\u00E9cidive. Dix points couvrent actions techniques, coordination et post-incident."
            }
          ]
        }
      ]
    },
    {
      "Title": "\u00C9tablissement et v\u00E9rification de la cha\u00EEne de confiance",
      "Description": "Publication des DS au parent, v\u00E9rification de la cha\u00EEne de confiance jusqu\u0027\u00E0 la racine, proc\u00E9dures pour corriger des ruptures de cha\u00EEne.",
      "EstimatedHours": 1,
      "Lessons": [
        {
          "Title": "Introduction \u00E0 la cha\u00EEne de confiance DNSSEC",
          "Summary": "Concepts fondamentaux de la cha\u00EEne de confiance : r\u00F4le des cl\u00E9s KSK/ZSK, enregistrements DS, parents et racine. Objectifs et enjeux de l\u0027int\u00E9grit\u00E9 de la cha\u00EEne.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre le concept de cha\u00EEne de confiance dans DNSSEC et son r\u00F4le pour garantir l\u0027authenticit\u00E9 et l\u0027int\u00E9grit\u00E9 des r\u00E9ponses DNS.",
            "Distinguer les r\u00F4les et caract\u00E9ristiques des cl\u00E9s KSK (Key Signing Key) et ZSK (Zone Signing Key).",
            "Expliquer la fonction et la cr\u00E9ation des enregistrements DS (Delegation Signer) et leur place entre parent et enfant.",
            "D\u00E9crire le r\u00F4le du parent (zone sup\u00E9rieure) et de la racine dans l\u0027\u00E9tablissement de la cha\u00EEne de confiance.",
            "Conna\u00EEtre les \u00E9tapes de v\u00E9rification d\u0027une r\u00E9ponse DNSSEC par un validateur r\u00E9cursif.",
            "Identifier les enjeux op\u00E9rationnels (rollover, s\u00E9curit\u00E9 des cl\u00E9s, disponibilit\u00E9) et les risques en cas de rupture de la cha\u00EEne de confiance."
          ],
          "Content": "Introduction : qu\u0027est-ce que la cha\u00EEne de confiance DNSSEC ?\r\nLa cha\u00EEne de confiance DNSSEC est le m\u00E9canisme qui relie la racine de l\u0027espace de noms DNS (.), via chaque d\u00E9l\u00E9gation parent/child, \u00E0 une zone sign\u00E9e. Elle permet au r\u00E9solveur validant d\u0027\u00E9tablir que les enregistrements DNS re\u00E7us n\u0027ont pas \u00E9t\u00E9 falsifi\u00E9s et proviennent bien de la zone autoritative. Cette cha\u00EEne est r\u00E9alis\u00E9e par des signatures RRSIG, des cl\u00E9s publiques DNSKEY et des pointeurs de d\u00E9l\u00E9gation (enregistrements DS) stock\u00E9s dans la zone parent.\r\n\r\nActeurs cl\u00E9s : racine, parent et zone enfant\r\nDans une d\u00E9l\u00E9gation DNS, il y a trois acteurs importants : la zone racine (.), la zone parent (par exemple, un registre TLD) et la zone enfant (par exemple, example.com). La racine est le point d\u0027ancrage ultime (trust anchor) que le validateur conna\u00EEt ou obtient via m\u00E9canismes s\u00FBrs. Le parent publie un enregistrement DS dans sa zone pour pointer vers la cl\u00E9 de la zone enfant. La zone enfant publie ses cl\u00E9s DNSKEY et signe ses enregistrements avec des RRSIG.\r\n\r\nR\u00F4les des cl\u00E9s : KSK vs ZSK\r\nDNSSEC distingue deux usages de cl\u00E9s pour des raisons de s\u00E9curit\u00E9 et d\u0027efficacit\u00E9 :\n- KSK (Key Signing Key) : cl\u00E9 utilis\u00E9e pour signer l\u0027enregistrement DNSKEY de la zone (g\u00E9n\u00E9ralement sign\u00E9e indirectement via RRSIG sur l\u0027ensemble de l\u0027enregistrement DNSKEY). Sa fonction principale est d\u0027\u00EAtre r\u00E9f\u00E9renc\u00E9e par le parent via l\u0027enregistrement DS. Le KSK est souvent conserv\u00E9 hors ligne et fait l\u0027objet de rollovers prudents.\n- ZSK (Zone Signing Key) : cl\u00E9 utilis\u00E9e pour signer les enregistrements normaux de la zone (A, AAAA, MX, etc.). Elle est remplac\u00E9e plus fr\u00E9quemment (rollover) pour limiter la fen\u00EAtre d\u0027exposition en cas de compromission et r\u00E9duire la taille des signatures si n\u00E9cessaire.\nTechniquement, la diff\u00E9rence se manifeste aussi par le flag 257 (KSK) versus 256 (ZSK) dans l\u0027enregistrement DNSKEY.\r\n\r\nEnregistrement DS : pont entre parent et enfant\r\nL\u0027enregistrement DS (Delegation Signer) est stock\u00E9 dans la zone parent et contient un hach\u00E9 (digest) d\u0027une cl\u00E9 publique DNSKEY de la zone enfant ainsi que des informations d\u0027algorithme et de type de digest. Pour qu\u0027une d\u00E9l\u00E9gation soit valide, le r\u00E9solveur v\u00E9rifiant obtient le DS depuis le parent et compare son digest au hach\u00E9 calcul\u00E9 \u00E0 partir du DNSKEY re\u00E7u de l\u0027enfant. Si les deux correspondent, le validateur consid\u00E8re que la cl\u00E9 DNSKEY est approuv\u00E9e par le parent, \u00E9tablissant ainsi la continuit\u00E9 de la cha\u00EEne de confiance.\r\n\r\nProcessus de validation (vue pas \u00E0 pas)\r\n1) Le r\u00E9solveur demande un nom ; il re\u00E7oit des enregistrements sign\u00E9s (RRSIG) et \u00E9ventuellement les DNSKEY.\n2) Pour valider la zone enfant, il r\u00E9cup\u00E8re le DS dans la zone parent.\n3) Il calcule le digest du DNSKEY enfant selon l\u0027algorithme indiqu\u00E9 dans le DS et compare les valeurs.\n4) Si les di gests correspondent, le DNSKEY est consid\u00E9r\u00E9 comme approuv\u00E9 ; le r\u00E9solveur utilise la cl\u00E9 publique (DNSKEY) pour v\u00E9rifier les RRSIG qui couvrent les enregistrements.\n5) La v\u00E9rification monte ensuite r\u00E9cursivement jusqu\u0027\u00E0 la racine (ou au trust anchor connu). Si une rupture est d\u00E9tect\u00E9e (absence/mismatch DS, signatures invalides), la validation \u00E9choue et la r\u00E9ponse est marqu\u00E9e comme non valide.\r\n\r\nAspects op\u00E9rationnels et meilleures pratiques\r\nBonnes pratiques courantes : garder le KSK hors ligne et limiter son usage, effectuer des rollovers planifi\u00E9s (avec proc\u00E9dure \u00E0 froid pour le KSK), d\u00E9ployer des ZSK plus courts et roul\u00E9s plus souvent, v\u00E9rifier le comportement de la zone apr\u00E8s rollover, publier des DS pr\u00E9cis et v\u00E9rifier la concordance avant activation publique. Surveiller les alertes et journaux de validation, utiliser des testbeds et signer/d\u00E9ployer en coordination avec le parent (registre/TLD) pour \u00E9viter une rupture de la cha\u00EEne.\r\n\r\nEnjeux, risques et cons\u00E9quences d\u0027une rupture de la cha\u00EEne\r\nLes enjeux principaux sont l\u0027authenticit\u00E9 (pr\u00E9venir la falsification des r\u00E9ponses DNS) et l\u0027int\u00E9grit\u00E9 (d\u00E9tecter les alt\u00E9rations). Une rupture de la cha\u00EEne de confiance peut provenir d\u0027un DS manquant ou erron\u00E9 chez le parent, d\u0027un DNSKEY compromis, d\u0027un rollover mal coordonn\u00E9, ou d\u0027attaques (ex. substitution de cl\u00E9). Les cons\u00E9quences vont d\u0027une invalidation des r\u00E9ponses (r\u00E9solveurs marquent la zone comme \u2018bogus\u2019) \u00E0 une d\u00E9gradation de l\u0027acc\u00E8s aux services. La disponibilit\u00E9 doit aussi \u00EAtre prise en compte : signatures invalides ou gestion de cl\u00E9s inappropri\u00E9e peut rendre un service inaccessible m\u00EAme sans attaque.\r\n\r\nNotes sur algorithmes, formats et RFC utiles\r\nAlgorithmes courants : RSA/SHA-256, ECDSA, EdDSA (selon support). DS supporte diff\u00E9rents types de digest (SHA-1, SHA-256, SHA-384). Les formats et comportements sont d\u00E9taill\u00E9s dans les RFC DNSSEC pertinents (ex. RFC 4033/4034/4035) et dans les extensions/updates (rollovers, new algorithms). Conna\u00EEtre les limites de compatibilit\u00E9 des r\u00E9solveurs et des registres aide \u00E0 choisir les param\u00E8tres lors du d\u00E9ploiement.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "D\u00E9crivez, en 3 \u00E0 5 \u00E9tapes d\u00E9crites bri\u00E8vement, comment un r\u00E9solveur valide une r\u00E9ponse DNSSEC pour un enregistrement A d\u0027un nom dans une zone d\u00E9l\u00E9gu\u00E9e.",
              "Answer": "1) Le r\u00E9solveur obtient l\u0027enregistrement A, son RRSIG et \u00E9ventuellement le DNSKEY de la zone autoritaire.\n2) Il r\u00E9cup\u00E8re l\u0027enregistrement DS correspondant dans la zone parent pour la d\u00E9l\u00E9gation.\n3) Il calcule le digest du DNSKEY re\u00E7u avec l\u0027algorithme indiqu\u00E9 dans le DS et compare : si \u00E9gal, la cl\u00E9 est approuv\u00E9e par le parent.\n4) Il utilise la cl\u00E9 DNSKEY valid\u00E9e pour v\u00E9rifier la RRSIG couvrant l\u0027enregistrement A ; si la signature est valide, l\u0027enregistrement est consid\u00E9r\u00E9 authentique.\n5) Il r\u00E9p\u00E8te la v\u00E9rification r\u00E9cursivement jusqu\u0027au trust anchor (racine) ou jusqu\u0027\u00E0 une ancre de confiance connue.",
              "Explanation": "Cette r\u00E9ponse suit la cha\u00EEne classique : \u00E9tablir un lien parent\u2192enfant via DS, valider la cl\u00E9 publique de l\u0027enfant puis v\u00E9rifier les signatures des enregistrements. Sans correspondance DS ou signature valide, la validation \u00E9choue."
            },
            {
              "Instruction": "Quel est le r\u00F4le du KSK et pourquoi est-il g\u00E9n\u00E9ralement conserv\u00E9 hors ligne ? Donnez deux raisons pratiques.",
              "Answer": "Le KSK signe les enregistrements DNSKEY (indirectement via RRSIG) et sert de point de r\u00E9f\u00E9rence pour le parent (via DS). Il est conserv\u00E9 hors ligne pour : 1) r\u00E9duire le risque de compromission d\u0027une cl\u00E9 qui, si vol\u00E9e, permettrait de valider de fausses cl\u00E9s ; 2) limiter la surface d\u0027attaque et am\u00E9liorer la s\u00E9curit\u00E9 op\u00E9rationnelle en n\u0027utilisant le KSK que lors d\u0027op\u00E9rations rares (rollover) plut\u00F4t que pour des signatures fr\u00E9quentes.",
              "Explanation": "Le KSK repr\u00E9sente une ancre qui, si compromise, mettrait en p\u00E9ril l\u0027acceptation de la zone par les validateurs. Le garder hors ligne minimise l\u0027exposition tout en restant utilisable pour des op\u00E9rations contr\u00F4l\u00E9es."
            },
            {
              "Instruction": "Que se passe-t-il si la zone parent publie un DS qui ne correspond \u00E0 aucun DNSKEY fourni par la zone enfant ?",
              "Answer": "Les validateurs marqueront la d\u00E9l\u00E9gation comme rompue et consid\u00E9reront les r\u00E9ponses de la zone enfant comme non valides (status \u0027bogus\u0027). Les requ\u00EAtes validantes \u00E9choueront et les clients pourraient ne pas recevoir d\u0027adresses pour les noms concern\u00E9s, entra\u00EEnant une perte d\u0027acc\u00E8s aux services d\u00E9pendants de ces noms.",
              "Explanation": "Le DS est la preuve que le parent approuve la cl\u00E9 de l\u0027enfant. Un mismatch signifie rupture de la cha\u00EEne de confiance \u2014 le validateur ne peut pas accepter les DNSKEY de l\u0027enfant comme approuv\u00E9s par le parent."
            },
            {
              "Instruction": "Expliquez bri\u00E8vement les \u00E9tapes principales pour effectuer un rollover de KSK sans interrompre la validation pour les validateurs qui v\u00E9rifient la zone.",
              "Answer": "1) G\u00E9n\u00E9rer une nouvelle paire KSK (nouvelle cl\u00E9 publique/priv\u00E9e) et publier la nouvelle cl\u00E9 dans l\u0027enregistrement DNSKEY de la zone (avec l\u0027ancienne encore pr\u00E9sente).\n2) Mettre \u00E0 jour et publier le DS correspondant \u00E0 la nouvelle KSK dans la zone parent (ou coordonner avec le registre/TLD pour qu\u0027il le publie).\n3) Attendre la propagation et la p\u00E9riode n\u00E9cessaire pour que les validateurs voient \u00E0 la fois la nouvelle DNSKEY et le DS correspondant (temps de TTL et politiques de validateurs).\n4) Une fois la nouvelle KSK active et reconnue, retirer l\u0027ancienne KSK des DNSKEY (et du DS chez le parent si n\u00E9cessaire).",
              "Explanation": "La cl\u00E9 est de garder la compatibilit\u00E9 en superposant les cl\u00E9s (double publication) et de synchroniser la publication du DS chez le parent pour \u00E9viter un mismatch. Les d\u00E9lais attendus (TTLs, caches) doivent \u00EAtre respect\u00E9s pour pr\u00E9venir des interruptions."
            }
          ]
        },
        {
          "Title": "Comprendre et g\u00E9n\u00E9rer les enregistrements DS",
          "Summary": "Format et contenu d\u0027un enregistrement DS, algorithmes et digest, calcul et v\u00E9rification des empreintes, bonnes pratiques de g\u00E9n\u00E9ration et stockage des cl\u00E9s.",
          "EstimatedMinutes": 55,
          "LearningObjectives": [
            "Comprendre la structure d\u2019un enregistrement DS et le r\u00F4le de chacun de ses champs (key tag, algorithm, digest type, digest).",
            "Identifier les algorithmes DNSSEC courants et les types de digest support\u00E9s, et conna\u00EEtre les recommandations de s\u00E9curit\u00E9 actuelles.",
            "Savoir calculer la key tag \u00E0 partir du DNSKEY RDATA et calculer le digest (empreinte) utilis\u00E9 dans un DS.",
            "Savoir v\u00E9rifier qu\u2019un enregistrement DS dans la zone parente correspond \u00E0 une DNSKEY dans la zone enfant et diagnostiquer les \u00E9checs de v\u00E9rification.",
            "Appliquer les bonnes pratiques de g\u00E9n\u00E9ration, s\u00E9paration, protection et rotation des cl\u00E9s DNSSEC (KSK/ZSK, HSM, rollovers, choix d\u2019algorithmes)."
          ],
          "Content": "Format et contenu d\u2019un enregistrement DS\r\nUn enregistrement DS (Delegation Signer) lie la cl\u00E9 publique DNSKEY d\u0027une zone enfant \u00E0 son enregistrement dans la zone parente. Les champs d\u2019un DS sont :\n- key tag : entier 16 bits (identifiant de cl\u00E9) calcul\u00E9 \u00E0 partir du DNSKEY RDATA ; il sert d\u2019index rapide.\n- algorithm : num\u00E9ro IANA de l\u2019algorithme DNSSEC utilis\u00E9 (ex. 8 = RSASHA256, 13 = ECDSAP256SHA256, 15 = Ed25519\u2026).\n- digest type : identifiant du type de hachage utilis\u00E9 pour calculer l\u2019empreinte (1=SHA-1, 2=SHA-256, 4=SHA-384).\n- digest : valeur hexad\u00E9cimale (empreinte) du DNSKEY RDATA calcul\u00E9e avec l\u2019algorithme de hachage choisi.\n\nLe DS est stock\u00E9 dans la zone parente (la zone au-dessus) ; il permet au r\u00E9solveur de v\u00E9rifier la cl\u00E9 publique publi\u00E9e dans la zone enfant et donc d\u2019\u00E9tablir la cha\u00EEne de confiance.\r\n\r\nAlgorithmes DNSSEC et types de digest \u2014 chiffres et recommandations\r\nAlgorithmes DNSSEC courants (num\u00E9ros IANA) :\n- 1,3,5,7 etc. : anciens ou d\u00E9pr\u00E9ci\u00E9s (\u00E0 \u00E9viter).\n- 8 : RSASHA256 (RSA/SHA-256)\n- 10 : RSASHA512\n- 13 : ECDSAP256SHA256 (ECDSA P-256)\n- 14 : ECDSAP384SHA384 (ECDSA P-384)\n- 15 : Ed25519\n- 16 : Ed448\n\nTypes de digest DS :\n- 1 : SHA-1 (obsol\u00E8te, \u00E9viter si possible)\n- 2 : SHA-256 (recommand\u00E9 minimal)\n- 4 : SHA-384 (plus fort, utilis\u00E9 pour certains algorithmes ou exigence de conformit\u00E9)\n\nRecommandations :\n- Pr\u00E9f\u00E9rer les algorithmes modernes et compacts (ECDSA ou Ed25519) quand l\u2019\u00E9cosyst\u00E8me le permet ; sinon RSASHA256 est acceptable avec des tailles de cl\u00E9 appropri\u00E9es.\n- Pr\u00E9f\u00E9rer SHA-256 ou SHA-384 pour la digest dans DS ; \u00E9viter SHA-1 sauf compatibilit\u00E9 legacy.\r\n\r\nCalculer la cl\u00E9 (key tag)\r\nLa key tag est calcul\u00E9e depuis la forme binaire du DNSKEY RDATA (RFC 4034 Appendix B). Proc\u00E9dure (r\u00E9sum\u00E9) :\n1) Consid\u00E9rer le DNSKEY RDATA comme une s\u00E9quence d\u2019octets : flags (2 octets), protocol (1 octet, toujours 3), algorithm (1 octet), puis la cl\u00E9 publique (octets d\u00E9cod\u00E9s depuis le champ public key base64).\n2) Initialiser un entier sum = 0.\n3) Pour chaque octet i (index\u00E9 \u00E0 0) : si i est pair, sum \u002B= octet \u003C\u003C 8 ; sinon sum \u002B= octet.\n4) Apr\u00E8s la boucle, keytag = (sum \u002B (sum \u003E\u003E 16)) \u0026 0xFFFF.\n\nRemarque : la key tag est un index pratique mais la v\u00E9rification r\u00E9elle s\u2019appuie sur le digest. Plusieurs outils (ldns, BIND\u2019s dnssec-keygen/dnssec-settime, OpenSSL \u002B scripts) calculent automatiquement la key tag.\r\n\r\nCalcul du digest utilis\u00E9 dans DS (empreinte)\r\nLe digest (champ digest du DS) est le r\u00E9sultat du hachage du DNSKEY RDATA en format \u0027wire\u0027 canonique : flags (2 octets) || protocol (1 octet) || algorithm (1 octet) || public key (octets bruts). \u00C9tapes :\n1) Extraire la DNSKEY exacte qui sera publi\u00E9e dans la zone enfant.\n2) Construire le RDATA binaire (ne pas inclure le nom, ni les longueurs). Le protocole est toujours l\u2019octet 3 dans DNSKEY.\n3) Calculer le hach\u00E9 choisi (SHA-256 ou SHA-384 principalement) sur ces octets.\n4) Encoder le r\u00E9sultat en hexad\u00E9cimal majuscule ou minuscule selon convention (les r\u00E9solveurs comparent binaire). Le r\u00E9sultat hex est stock\u00E9 dans le DS.\n\n\u00C0 noter : certains outils peuvent g\u00E9n\u00E9rer automatiquement le DS depuis un fichier DNSKEY. Il est important d\u2019utiliser la m\u00EAme DNSKEY que celle publi\u00E9e dans la zone enfant (m\u00EAme flags, m\u00EAme clef publique).\r\n\r\nV\u00E9rification d\u2019un DS par rapport \u00E0 une DNSKEY \u2014 \u00E9tapes pratiques\r\nQuand on re\u00E7oit un DS depuis la zone parente, la v\u00E9rification consiste \u00E0 :\n1) R\u00E9cup\u00E9rer la DNSKEY RRset de la zone enfant (en clair) et l\u2019ensemble de RRSIG correspondant.\n2) Identifier dans la DNSKEY la cl\u00E9 candidate : v\u00E9rifier la key tag (index) et l\u2019algorithm. Si key tag ne correspond pas, recalculer \u00E0 partir de chaque DNSKEY (par s\u00E9curit\u00E9).\n3) Pour la DNSKEY candidate, construire le RDATA binaire et calculer le digest avec le m\u00EAme digest type indiqu\u00E9 dans le DS (SHA-256, par ex.).\n4) Comparer le digest calcul\u00E9 avec la valeur de digest dans le DS. Si identique, le DS correspond bien \u00E0 la DNSKEY.\n5) Valider la signature RRSIG de la DNSKEY (cha\u00EEne de confiance) : utiliser la DNSKEY pour v\u00E9rifier les RRSIG sur la RRset de DNSKEY (validation locale), puis continuer la cha\u00EEne en v\u00E9rifiant que la DNSKEY est sign\u00E9e correctement et que le DS est publi\u00E9 dans la zone parente sign\u00E9e.\n\nEn cas d\u2019\u00E9chec : v\u00E9rifier que l\u2019on a la bonne version du DNSKEY (rollover possible), v\u00E9rifier erreurs de canonicalisation, v\u00E9rifier l\u2019algorithme et le digest type utilis\u00E9s.\r\n\r\nBonnes pratiques pour g\u00E9n\u00E9ration et stockage des cl\u00E9s\r\nS\u00E9paration KSK / ZSK :\n- KSK (Key Signing Key) : sign\u00E9 par la zone parente via DS ; doit \u00EAtre g\u00E9n\u00E9r\u00E9 et conserv\u00E9 hors-ligne autant que possible (protection maximale). Utiliser HSM ou stockage physique pour la KSK.\n- ZSK (Zone Signing Key) : signe les enregistrements de la zone ; peut \u00EAtre en ligne pour permettre signatures automatiques ; rotation plus fr\u00E9quente.\n\nChoix d\u2019algorithme et tailles :\n- Pr\u00E9f\u00E9rer Ed25519 ou ECDSA P-256 si les validateurs cibles les supportent (meilleur ratio s\u00E9curit\u00E9/performance).\n- Sinon RSASHA256 avec une taille de cl\u00E9 \u2265 2048 bits ; pour meilleures marges de s\u00E9curit\u00E9, 3072 bits.\n\nProtection des cl\u00E9s et op\u00E9rations :\n- Utiliser HSM quand possible ; appliquer contr\u00F4le d\u2019acc\u00E8s strict, journalisation, et proc\u00E9dures de sauvegarde chiffr\u00E9e.\n- Maintenir proc\u00E9dures document\u00E9es de rollover (pr\u00E9parer DS double-signing, pr\u00E9avertir la zone parente, planifier TTL pour r\u00E9duire fen\u00EAtres d\u2019invalidation).\n- Conserver copies s\u00E9curis\u00E9es hors-ligne pour la r\u00E9cup\u00E9ration, avec politique de destruction contr\u00F4l\u00E9e.\n\nAutres recommandations :\n- Privil\u00E9gier digest SHA-256/384 ; ne pas publier uniquement SHA-1 DS.\n- Scripter et automatiser la g\u00E9n\u00E9ration et publication des DS pour r\u00E9duire erreurs humaines.\n- Surveiller la zone parente (existence du DS) et tester la validation DNSSEC apr\u00E8s toute op\u00E9ration.\r\n\r\nPi\u00E8ges courants et diagnostics\r\nErreurs fr\u00E9quentes : mismatch entre la DNSKEY r\u00E9ellement publi\u00E9e et celle utilis\u00E9e pour g\u00E9n\u00E9rer le DS, oubli d\u2019inclure les flags ou mauvais protocole lors de la construction du RDATA, usage d\u2019un digest obsol\u00E8te (SHA-1) provoquant des refus sur des validateurs stricts, oubli d\u2019aligner TTLs lors d\u2019un rollover.\n\nDiagnostic rapide :\n- Recalculer la key tag localement et comparer ;\n- Reg\u00E9n\u00E9rer le digest localement depuis la DNSKEY publi\u00E9e et comparer au DS ;\n- V\u00E9rifier que l\u2019algorithm du DS correspond \u00E0 celui de la DNSKEY ;\n- V\u00E9rifier les signatures RRSIG sur les DNSKEY et sur la zone parente pour s\u2019assurer que la cha\u00EEne est intacte.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 Identifier les champs d\u2019un DS. On vous donne la cha\u00EEne DS suivante (format textuel commun) : \u002251234 13 2 3A1F7B4E9C...\u0022. Indiquez \u00E0 quoi correspond chaque champ et ce que signifient les valeurs pr\u00E9sent\u00E9es ici.",
              "Answer": "51234 =\u003E key tag (identifiant de la cl\u00E9). 13 =\u003E algorithme DNSSEC utilis\u00E9 (13 = ECDSAP256SHA256). 2 =\u003E type de digest (2 = SHA-256). 3A1F7B4E9C... =\u003E le digest hexad\u00E9cimal (l\u2019empreinte SHA-256 de la DNSKEY RDATA).",
              "Explanation": "Le format d\u2019un DS textuel est : \u0022keytag algorithm digesttype digest\u0022. Le key tag permet d\u2019identifier rapidement la cl\u00E9 parmi les DNSKEYs, algorithm indique l\u2019algorithme de la cl\u00E9 publique, digesttype indique la fonction de hachage utilis\u00E9e pour produire le digest, et digest est la valeur hex r\u00E9sultant du hachage du DNSKEY RDATA en format binaire."
            },
            {
              "Instruction": "Exercice 2 \u2014 Calcul de key tag simple. On vous donne un DNSKEY RDATA tr\u00E8s simple (exemple p\u00E9dagogique) sous forme d\u2019octets : [0x01, 0x02, 0x03, 0x04]. Calculez la key tag selon l\u2019algorithme RFC (simplifi\u00E9, comme d\u00E9crit dans la le\u00E7on).",
              "Answer": "La key tag calcul\u00E9e est 1030 (0x0406).",
              "Explanation": "Application de l\u2019algorithme : sum initial = 0. Pour i=0 (octet 0x01, pair) : sum \u002B= 0x01 \u003C\u003C 8 = 256. i=1 (0x02) : sum \u002B= 2 =\u003E 258. i=2 (0x03, pair) : sum \u002B= 3 \u003C\u003C 8 = 768 =\u003E 1026. i=3 (0x04) : sum \u002B= 4 =\u003E 1030. Puis keytag = (sum \u002B (sum \u003E\u003E 16)) \u0026 0xFFFF = 1030 car sum \u003C 65536. En hex 1030 = 0x0406."
            },
            {
              "Instruction": "Exercice 3 \u2014 \u00C9tapes de v\u00E9rification pratique. D\u00E9crivez les \u00E9tapes concr\u00E8tes que suivrait un administrateur pour v\u00E9rifier qu\u2019un DS publi\u00E9 dans la zone parente correspond bien \u00E0 une DNSKEY publi\u00E9e dans la zone enfant.",
              "Answer": "1) R\u00E9cup\u00E9rer la DNSKEY RRset complet de la zone enfant. 2) Pour chaque DNSKEY, calculer la key tag et choisir celles avec un key tag correspondant au champ key tag du DS (ou tester toutes si inconnu). 3) Pour la ou les cl\u00E9s candidates, construire le DNSKEY RDATA binaire (flags|protocol|algorithm|cl\u00E9 publique brute) et calculer le digest avec le m\u00EAme digest type que le DS (SHA-256/384). 4) Comparer le digest calcul\u00E9 avec le digest du DS ; si \u00E9gal, le DS correspond \u00E0 la DNSKEY. 5) V\u00E9rifier ensuite la signature RRSIG de la DNSKEY et la coh\u00E9rence de la cha\u00EEne (assurer que le parent publie ce DS dans sa zone sign\u00E9e).",
              "Explanation": "La v\u00E9rification combine un calcul binaire d\u00E9terministe (digest sur le DNSKEY RDATA) et une validation cryptographique de la cha\u00EEne DNSSEC. Il faut s\u2019assurer que la cl\u00E9 utilis\u00E9e pour le digest est exactement celle publi\u00E9e dans la zone (m\u00EAmes flags et m\u00EAme champ de cl\u00E9), et v\u00E9rifier ensuite les signatures afin de garantir l\u2019int\u00E9grit\u00E9 et la non-r\u00E9pudiation."
            }
          ]
        },
        {
          "Title": "Publication des DS au parent : proc\u00E9dures et \u00E9tapes op\u00E9rationnelles",
          "Summary": "Processus administratif et technique pour soumettre un DS au registrar/parent, validations attendues, d\u00E9lais, et checklist pour une publication sans erreur.",
          "EstimatedMinutes": 60,
          "LearningObjectives": [
            "Comprendre le r\u00F4le du DS (Delegation Signer) dans la cha\u00EEne de confiance DNSSEC entre le nom de domaine (enfant) et le parent/registrar.",
            "Connaitre les pr\u00E9requis techniques et administratifs avant de soumettre un DS au registrar/parent.",
            "Ma\u00EEtriser la proc\u00E9dure op\u00E9rationnelle pas \u00E0 pas pour g\u00E9n\u00E9rer, v\u00E9rifier, publier et valider un DS sans casser la cha\u00EEne de confiance.",
            "Savoir quels contr\u00F4les attendus le registrar/parent effectuera et comment r\u00E9pondre aux rejets ou warnings.",
            "Estimer les d\u00E9lais de traitement et propagation et planifier correctement les op\u00E9rations de publication et de rollover.",
            "Utiliser une checklist pratique pour publier un DS sans erreur et diagnostiquer les situations courantes de panne."
          ],
          "Content": "Contexte et r\u00F4le du DS\r\nLe DS (Delegation Signer) est l\u0027enregistrement publi\u00E9 dans la zone parente (ex. TLD) qui pointe vers la cl\u00E9 publique KSK du domaine enfant. Il permet au r\u00E9solveur de valider la signature RRSIG de la zone enfant en remontant la cha\u00EEne de confiance vers la racine. Publier un DS est donc une \u00E9tape critique : si le DS ne correspond pas au DNSKEY publi\u00E9 dans la zone enfant, le domaine devient invalid\u00E9 par DNSSEC.\r\n\r\nPr\u00E9requis avant publication\r\nListe des pr\u00E9requis minimaux :\n- Avoir g\u00E9n\u00E9r\u00E9 une paire de cl\u00E9s KSK (Key Signing Key) conforme aux recommandations (algorithme, taille).\n- Avoir un DNSKEY (publique) correspondant au KSK publi\u00E9 dans la zone enfant.\n- Avoir sign\u00E9 la zone (NSEC/NSEC3) avec la KSK (et ZSK si utilis\u00E9) et g\u00E9n\u00E9r\u00E9 les RRSIGs.\n- S\u0027assurer que la version publique de la zone (sur les serveurs faisant autorit\u00E9) contient bien le DNSKEY et les RRSIG associ\u00E9s.\n- Disposer des acc\u00E8s admin au registrar ou contact support capable de d\u00E9poser le DS (web UI, API/EPP, ticket).\r\n\r\nG\u00E9n\u00E9ration et calcul du DS\r\n\u00C9tapes techniques :\n1) G\u00E9n\u00E9rer KSK (ex. dnssec-keygen ou autre HSM selon proc\u00E9dure interne).\n2) Publier le DNSKEY dans la zone enfant (fichier de zone ou gestion via DNS provider) et signer la zone.\n3) Calculer le DS \u00E0 partir du DNSKEY (utiliser dnssec-dsfromkey, combin\u00E9 avec le digest souhait\u00E9). Exemple de commandes courantes :\n   - dnssec-dsfromkey -1/ -2/ -3 Kexample.\u002B008\u002B12345.key\n   - ou via outils du provider qui calculent SHA-256 (digest type 2) ou SHA-384 (type 4).\n4) Conserver l\u2019empreinte (digest) correspondant au digest type choisi, ainsi que le key tag et l\u2019algorithme.\nImportant : le DS doit \u00EAtre calcul\u00E9 sur la repr\u00E9sentation wire-format du DNSKEY (les outils standard le font).\r\n\r\nM\u00E9thodes de soumission au registrar/parent\r\nModalit\u00E9s habituelles :\n- Interface web du registrar : formulaire DS o\u00F9 l\u2019on colle key tag, algorithm, digest type, et digest.\n- API / EPP : via extension secDNS (RFC 5910) ou API propri\u00E9taire ; op\u00E9rations \u003CsecDNS:update\u003E ou endpoint REST.\n- Ticket support : soumettre key tag \u002B algorithm \u002B digest \u002B preuve de possession si demand\u00E9.\nPour chaque m\u00E9thode, conserver un log/ID de transaction et un accus\u00E9 de r\u00E9ception. V\u00E9rifier les formats accept\u00E9s par le registrar (ex. certains n\u2019acceptent plus SHA-1).\r\n\r\nValidations attendues c\u00F4t\u00E9 registrar/parent\r\nContr\u00F4les courants effectu\u00E9s par le registrar/parent :\n- Syntaxe : key tag num\u00E9rique correct, algorithm valid (ex. 8/13/14/15/16/*), digest type connu.\n- Acceptation du digest type (beaucoup de TLD n\u2019acceptent plus SHA-1, privil\u00E9gier SHA-256/384).\n- Coh\u00E9rence : le digest doit correspondre \u00E0 une cl\u00E9 publi\u00E9e dans votre zone (parfois le parent v\u00E9rifie que la DS correspond au DNSKEY visible).\n- Contr\u00F4les anti-abus ou proc\u00E9dure manuelle (v\u00E9rification de propri\u00E9t\u00E9 du domaine, conformit\u00E9 administrative).\nEn cas de rejet, le registrar renverra un message d\u2019erreur : lire attentivement cause (format, digest non accept\u00E9, cl\u00E9 inconnue, duplicata).\r\n\r\nOrdonnancement temporel et d\u00E9lais\r\nOrdre recommand\u00E9 pour publication sans rupture :\n1) G\u00E9n\u00E9rer KSK et publier DNSKEY dans la zone enfant.\n2) Signer la zone et s\u0027assurer que le DNSKEY est visible publiquement depuis plusieurs r\u00E9solveurs (test \u00E0 chaud).\n3) Calculer et soumettre le DS au parent/registrar.\n4) Attendre la confirmation du parent et la pr\u00E9sence du DS dans la zone parente.\nD\u00E9lais typiques :\n- Publication DNS (child) : instant sur serveurs autoritaires, propagation d\u00E9pend des caches (TTL).\n- Traitement par registrar : de quelques minutes \u00E0 24 heures selon registrar et proc\u00E9dure manuelle.\n- Propagation parent : une fois ins\u00E9r\u00E9, visible en quelques minutes mais caches externes peuvent prendre jusqu\u0027\u00E0 48 heures selon TTLs et r\u00E9solveurs.\nPr\u00E9voir donc une fen\u00EAtre op\u00E9rationnelle (fen\u00EAtre de maintenance) et ne pas supprimer/retirer provisoirement la DNSKEY pendant au moins 48h apr\u00E8s changement du DS.\r\n\r\nV\u00E9rifications post-publication et surveillance\r\nContr\u00F4les imm\u00E9diats \u00E0 r\u00E9aliser apr\u00E8s soumission :\n- Confirmer que le registrar a bien accept\u00E9 la demande (mail, API response, EPP ack).\n- V\u00E9rifier la pr\u00E9sence du DS au niveau parent : dig \u002Bdnssec domain DS @parent-server (ou utiliser dig \u002Bshort domain DS).\n- V\u00E9rifier la r\u00E9solution DNSSEC compl\u00E8te : dig \u002Bdnssec domain A (ou test via tools like DNSViz, Verisign Labs, or online DNSSEC tools).\n- Contr\u00F4ler la validit\u00E9 des RRSIG et la cha\u00EEne (pas de SERVFAIL pour r\u00E9solution sign\u00E9e depuis la racine).\nSurveillance : mettre en place alerting pour expirations de signatures, changements anormaux de DS, et pour le TTL du DS si vous pr\u00E9voyez des rollovers.\r\n\r\nChecklist pour publication sans erreur\r\nChecklist op\u00E9rationnelle minimale avant soumettre le DS :\n1) KSK g\u00E9n\u00E9r\u00E9e suivant la politique (algorithme et taille).\n2) DNSKEY correspondant publi\u00E9 dans la zone enfant et zone sign\u00E9e avec ce KSK.\n3) V\u00E9rification publique que le DNSKEY est visible (dig \u002Bdnssec domain DNSKEY).\n4) Calcul correct du DS (outil standard) et stockage des m\u00E9tadonn\u00E9es : key tag, algorithm, digest type, digest hex/base16.\n5) V\u00E9rifier aupr\u00E8s du registrar les formats et digest types accept\u00E9s.\n6) Soumettre DS via la m\u00E9thode support\u00E9e (web/API/EPP) et conserver preuve de soumission.\n7) Confirmation d\u2019acceptation par le registrar et contr\u00F4le de pr\u00E9sence du DS dans la zone parente.\n8) Tests de r\u00E9solution DNSSEC de bout en bout (r\u00E9solution depuis divers r\u00E9solveurs publics).\n9) Surveillance active pendant 48\u201372 heures pour d\u00E9tecter toute r\u00E9gression.\n10) Documenter l\u2019op\u00E9ration dans la gestion de changement et conserver logs/prints d\u2019\u00E9cran/IDs EPP.\r\n\r\nErreurs courantes et rem\u00E8des\r\nErreurs fr\u00E9quentes :\n- DS calcul\u00E9 avec le mauvais digest type (ex. SHA-1 alors que parent n\u2019accepte pas) \u2192 recalculer avec SHA-256/384.\n- Publication du DS avant que le DNSKEY soit visible \u2192 provoquer des \u00E9checs DNSSEC ; rem\u00E8de : retirer DS ou republier DNSKEY, attendre propagation.\n- Key tag incorrect ou correspondance algorithme/digest incorrecte \u2192 recomputate et resubmit.\n- Utilisation d\u0027une ZSK au lieu de KSK pour le DS \u2192 corriger en calculant DS sur la KSK.\n- Format d\u0027entr\u00E9e du registrar mal respect\u00E9 (espaces, casse, encodage) \u2192 adapter au format requis.\nEn cas de doute, simuler l\u2019\u00E9tat via outils publics (dig, DNSViz) et contacter le registrar avec preuves (DNSKEY visible) pour r\u00E9solution.\r\n\r\nGestion des rollovers et retrait de DS\r\nBonnes pratiques pour les rollovers KSK :\n- Utiliser une proc\u00E9dure en deux \u00E9tapes : publication du nouveau KSK DNSKEY (double-signature), soumission du nouveau DS, puis retrait de l\u2019ancien DS apr\u00E8s propagation.\n- Pour une rotation sans coupure : publier nouvelle KSK et DNSKEY, signer la zone avec les deux KSK, attendre visibilit\u00E9, soumettre nouveau DS, attendre propagation parente, retirer ancien KSK et DS.\n- Planifier fen\u00EAtres et r\u00E9duire TTL si n\u00E9cessaire bien avant l\u2019op\u00E9ration pour acc\u00E9l\u00E9rer propagation.\n- En cas de compromission, retirer imm\u00E9diatement le DS du parent et corriger la zone enfant puis republier (proc\u00E9dure d\u2019urgence).\r\n\r\nOutils et commandes utiles\r\nCommandes fr\u00E9quemment utilis\u00E9es (exemples) :\n- Calcul DS : dnssec-dsfromkey Kexample.\u002B008\u002B12345.key\n- V\u00E9rifier DNSKEY visible : dig \u002Bdnssec domain DNSKEY\n- V\u00E9rifier DS parent : dig \u002Bdnssec domain DS @parent-server\n- V\u00E9rifier r\u00E9solution DNSSEC : dig \u002Bdnssec domain A\n- Outils en ligne : DNSViz, Verisign Labs DNSSEC Debugger, zonemaster (avec module DNSSEC)\nConserver ces commandes dans vos proc\u00E9dures op\u00E9ratoires pour r\u00E9p\u00E9tabilit\u00E9.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Vous venez de g\u00E9n\u00E9rer une KSK et avez publi\u00E9 le DNSKEY dans la zone enfant. Quelle est la s\u00E9quence op\u00E9rationnelle compl\u00E8te \u00E0 suivre pour publier le DS sans casser la cha\u00EEne de confiance ? Enum\u00E9rez les \u00E9tapes dans l\u0027ordre.",
              "Answer": "1) Publier le DNSKEY KSK dans la zone enfant et signer la zone; 2) V\u00E9rifier publiquement que le DNSKEY est visible (dig \u002Bdnssec domain DNSKEY); 3) Calculer le DS \u00E0 partir du DNSKEY (dnssec-dsfromkey) en choisissant un digest acceptable (pr\u00E9f\u00E9rer SHA-256/384); 4) V\u00E9rifier les formats et digest types accept\u00E9s par le registrar; 5) Soumettre le DS via le canal du registrar (web/API/EPP) et conserver preuve de soumission; 6) Attendre confirmation d\u2019acceptation et v\u00E9rifier la pr\u00E9sence du DS dans la zone parente; 7) Tester la r\u00E9solution DNSSEC de bout en bout et surveiller pendant 48\u201372 h.",
              "Explanation": "L\u0027ordre est essentiel : publier d\u0027abord la cl\u00E9 dans la zone enfant pour que le parent puisse v\u00E9rifier la correspondance. Calculer et soumettre le DS apr\u00E8s que le DNSKEY soit visible \u00E9vite une rupture de la cha\u00EEne. La v\u00E9rification et la surveillance finale garantissent que la r\u00E9solution sign\u00E9e fonctionne correctement."
            },
            {
              "Instruction": "Apr\u00E8s soumission du DS, le registrar renvoie l\u0027erreur \u00AB unsupported digest type \u00BB. Quelle est la cause probable et quelles actions devez-vous entreprendre ?",
              "Answer": "Cause probable : le digest type utilis\u00E9 (ex. SHA-1) n\u0027est plus support\u00E9 par le registrar/parent. Actions : recomputez le DS en utilisant un digest support\u00E9 (g\u00E9n\u00E9ralement SHA-256 ou SHA-384) avec dnssec-dsfromkey ou l\u0027outil du provider, v\u00E9rifiez le format demand\u00E9 par le registrar, puis soumettez \u00E0 nouveau le DS. Si le registrar ne supporte qu\u2019un ensemble restreint, contacter le support si n\u00E9cessaire.",
              "Explanation": "De nombreux registrars/TLD ont retir\u00E9 le support de SHA-1 pour des raisons de s\u00E9curit\u00E9. Le DS doit \u00EAtre recalcul\u00E9 avec un algorithme de digest moderne et soumis dans le format attendu."
            },
            {
              "Instruction": "Vous constatez que la zone enfant est sign\u00E9e et que le DS figure dans la zone parente, mais certains clients obtiennent SERVFAIL lors de la r\u00E9solution DNSSEC. \u00C9num\u00E9rez les v\u00E9rifications pour diagnostiquer le probl\u00E8me.",
              "Answer": "V\u00E9rifications :\n1) V\u00E9rifier que le DNSKEY pr\u00E9sent dans la zone enfant correspond exactement au DS publi\u00E9 (key tag, algorithme, digest) ;\n2) V\u00E9rifier que toutes les RRSIGs couvrant les records demand\u00E9s sont valides (dates, algorithme) ;\n3) Tester la r\u00E9solution depuis plusieurs r\u00E9solveurs publics (ex. 1.1.1.1, 8.8.8.8) pour isoler si c\u2019est un cache local ;\n4) Contr\u00F4ler l\u2019horloge des serveurs DNS (drift temporel peut invalider les signatures) ;\n5) Examiner les TTL et la pr\u00E9sence d\u2019enregistrements manquants ou mal sign\u00E9s ;\n6) Utiliser DNSViz pour un diagnostic d\u00E9taill\u00E9 de la cha\u00EEne de confiance.\nEn cas de mismatch entre DS et DNSKEY, corriger la cl\u00E9 ou le DS imm\u00E9diatement.",
              "Explanation": "SERVFAIL en DNSSEC signale souvent une rupture de la cha\u00EEne (DS/DNSKEY mismatch) ou des signatures expir\u00E9es/invalide. Tester \u00E0 partir de plusieurs points et v\u00E9rifier horloge et RRSIG permet d\u2019identifier la cause pr\u00E9cise."
            }
          ]
        },
        {
          "Title": "V\u00E9rification de la cha\u00EEne de confiance jusqu\u0027\u00E0 la racine",
          "Summary": "M\u00E9thodologie pour tracer et v\u00E9rifier la cha\u00EEne compl\u00E8te : de l\u0027enregistrement RRSIG/KEY local jusqu\u0027au DS parent et la racine, interpr\u00E9tation des r\u00E9sultats.",
          "EstimatedMinutes": 60,
          "LearningObjectives": [
            "Comprendre le r\u00F4le des enregistrements RRSIG, DNSKEY, DS et de la racine dans la cha\u00EEne de confiance DNSSEC",
            "Savoir tracer pas \u00E0 pas la cha\u00EEne de confiance depuis un RRset local jusqu\u0027\u00E0 la racine",
            "\u00CAtre capable d\u0027interpr\u00E9ter les r\u00E9sultats de chaque \u00E9tape (succ\u00E8s, \u00E9chec, non applicable) et d\u0027identifier les causes courantes d\u0027\u00E9chec",
            "Conna\u00EEtre les particularit\u00E9s des KSK/ZSK, des m\u00E9canismes de d\u00E9l\u00E9gation (DS, CDS/CDNSKEY) et des preuves d\u0027inexistence (NSEC/NSEC3)",
            "Appliquer des v\u00E9rifications pratiques avec des outils standards et en tirer des actions correctives"
          ],
          "Content": "Introduction et port\u00E9e\r\nCette le\u00E7on d\u00E9taille une m\u00E9thode syst\u00E9matique pour tracer et v\u00E9rifier une cha\u00EEne de confiance DNSSEC depuis un RRset local (avec RRSIG) jusqu\u0027\u00E0 une cl\u00E9 de confiance racine. L\u0027objectif est de donner une proc\u00E9dure reproductible \u2014 quelles requ\u00EAtes ex\u00E9cuter, quelles correspondances v\u00E9rifier et comment interpr\u00E9ter chaque r\u00E9sultat \u2014 ainsi que les cas particuliers (rollover, d\u00E9l\u00E9gation, preuves d\u0027inexistence).\r\n\r\nPr\u00E9requis et terminologie essentielle\r\nPr\u00E9requis : acc\u00E8s \u00E0 des outils DNS avec support DNSSEC (dig, drill, delv, ou biblioth\u00E8ques DNS), connaissance de base des RR DNS. Terminologie : RRset (ensemble d\u0027enregistrements pour un m\u00EAme nom/type), RRSIG (signature d\u0027un RRset), DNSKEY (cl\u00E9 publique d\u0027une zone), DS (Digest d\u0027une DNSKEY publi\u00E9 au parent), KSK (Key Signing Key \u2014 g\u00E9n\u00E9ralement sign\u00E9e comme DNSKEY avec le flag KSK), ZSK (Zone Signing Key \u2014 signe les RRset), trust anchor (cl\u00E9 publique configur\u00E9e localement, souvent la cl\u00E9 racine).\r\n\r\nVue d\u0027ensemble de la m\u00E9thodologie\r\nPrincipe : chaque RRset doit \u00EAtre couvert par une RRSIG v\u00E9rifiable par une DNSKEY de la m\u00EAme zone ; la DNSKEY de la zone (KSK) doit correspondre au DS stock\u00E9 au parent ; r\u00E9p\u00E9ter au parent jusqu\u0027\u00E0 atteindre une trust anchor configur\u00E9e (racine). \u00C9tapes cl\u00E9s : 1) collecter RRSIG du RRset ; 2) r\u00E9cup\u00E9rer DNSKEY de la m\u00EAme zone ; 3) v\u00E9rifier RRSIG avec la bonne DNSKEY (algorithme, key tag, dates) ; 4) si on n\u0027est pas \u00E0 la zone racine, obtenir le DS dans la zone parente et v\u00E9rifier que le DS est le hach\u00E9 correct d\u0027une DNSKEY KSK ; 5) remonter un niveau et v\u00E9rifier DNSKEY du parent par la m\u00EAme m\u00E9thode, et ainsi de suite jusqu\u0027\u00E0 la trust anchor.\r\n\r\n\u00C9tapes d\u00E9taill\u00E9es pas \u00E0 pas\r\n1) Identifier le RRset \u00E0 v\u00E9rifier et r\u00E9cup\u00E9rer ses RRSIG : effectuer une requ\u00EAte pour le nom/type en demandant DNSSEC (AD/DO selon l\u0027outil). 2) Pour chaque RRSIG : noter l\u0027algorithme, le key tag, la signature et les dates (inception/expiration). 3) R\u00E9cup\u00E9rer la DNSKEY de la zone (requ\u00EAte type DNSKEY). 4) Chercher dans l\u0027ensemble DNSKEY une cl\u00E9 avec le m\u00EAme key tag et algorithme ; v\u00E9rifier que la cl\u00E9 est active (flags). 5) V\u00E9rifier la signature RRSIG sur le RRset \u00E0 l\u0027aide de la cl\u00E9 trouv\u00E9e : s\u0027assurer que l\u0027horodatage actuel est dans l\u0027intervalle de validit\u00E9. 6) Si la signature est valide, passer \u00E0 la validation de la zone : chercher au parent un enregistrement DS pour ce nom de d\u00E9l\u00E9gation. 7) R\u00E9cup\u00E9rer le DS du parent et comparer le digest au calcul local sur la DNSKEY candidate (m\u00EAme algorithme de hachage : SHA-1, SHA-256, SHA-384\u2026). 8) Si le digest correspond, consid\u00E9rer la d\u00E9l\u00E9gation sign\u00E9e et remonter au parent en r\u00E9p\u00E9tant la proc\u00E9dure (v\u00E9rifier la DNSKEY du parent sign\u00E9e par son parent) jusqu\u0027\u00E0 la trust anchor. 9) Au sommet, comparer le DS/DNSKEY attendus avec la trust anchor configur\u00E9e localement (souvent la cl\u00E9 racine). 10) R\u00E9soudre les divergences : expiration, key rollover, DS manquant, algorithme non support\u00E9.\r\n\r\nD\u00E9tails pratiques sur les notions KSK/ZSK et rollover\r\nKSK (flag bit 257) : destin\u00E9e \u00E0 manager la d\u00E9l\u00E9gation (DS) ; ZSK signe la plupart des RRset. Lors d\u0027un rollover : double-signature ou publication simultan\u00E9e des cl\u00E9s afin d\u0027assurer la continuit\u00E9. Sc\u00E9narios courants : DNSKEY sign\u00E9 par ancienne et nouvelle cl\u00E9 (double-signage), DS au parent mis \u00E0 jour apr\u00E8s publication de la nouvelle DNSKEY dans l\u0027enfant. V\u00E9rifier la pr\u00E9sence simultan\u00E9e d\u0027anciennes et nouvelles cl\u00E9s et la concordance des DS pour \u00E9viter un bogue.\r\n\r\nCas particuliers : d\u00E9l\u00E9gations, CDS/CDNSKEY, NSEC/NSEC3\r\nD\u00E9l\u00E9gation s\u00E9curis\u00E9e : pr\u00E9sence d\u0027un DS au parent indique que la zone enfant est s\u00E9curis\u00E9e. CDS/CDNSKEY : m\u00E9canismes automatiques pour pousser le DS vers le parent ; un enregistrement CDS/CDNSKEY dans l\u0027enfant sert de demande de publication au parent. Preuves d\u0027inexistence : NSEC/NSEC3 sont RRset sign\u00E9s prouvant l\u0027absence d\u0027un enregistrement ; v\u00E9rifier le RRSIG correspondant \u00E0 ces RRset. NSEC3 opt-out peut rendre certaines preuves non disponibles et compliquer la validation dans des sc\u00E9narios de d\u00E9l\u00E9gation.\r\n\r\nR\u00E9sultats possibles et interpr\u00E9tation\r\nSucc\u00E8s complet : chaque RRset valide par RRSIG, DNSKEY correspondante existe, DS parent correspond, et on remonte jusqu\u0027\u00E0 une trust anchor connue. Erreurs communes : - \u0027no signature\u0027 : absence de RRSIG pour le RRset =\u003E zone non sign\u00E9e ou erreur de d\u00E9ploiement ; - \u0027signature expired/not yet valid\u0027 : horodatages RRSIG hors intervalle ; - \u0027key not found / key tag mismatch\u0027 : cl\u00E9 utilis\u00E9e pour signer absente dans DNSKEY ; - \u0027DS mismatch\u0027 : DS au parent ne correspond pas \u00E0 la DNSKEY enfant (probable rollback/erreur de mise \u00E0 jour) ; - \u0027algorithm unsupported\u0027 : la s\u00E9lection d\u0027algorithme n\u0027est pas support\u00E9e par validateur ; - \u0027insecure delegation\u0027 : parent n\u0027a pas de DS =\u003E d\u00E9l\u00E9gation non sign\u00E9e ; - \u0027bogus\u0027 : validation \u00E9choue pour cause cryptographique. Interpr\u00E9ter chaque cas : distinguer probl\u00E8me de configuration (\u00E0 corriger) et information d\u0027\u00E9tat (ex : intentional non-signed).\r\n\r\nOutils et commandes utiles\r\ndig \u002Bdnssec (r\u00E9cup\u00E8re RRSIG/DNSKEY/DS selon la requ\u00EAte), drill/dlv (outils de la suite ldns), unbound-anchor / unbound-control (gestion de trust anchors pour validateurs), rsasign/openssl/rua pour op\u00E9rations cryptographiques. Exemple de s\u00E9quence : dig \u002Bdnssec example.com A ; dig \u002Bdnssec example.com DNSKEY ; dig \u002Bdnssec parent-of-example.com DS. Les validateurs complets (unbound, BIND with dnssec-validation) effectuent d\u00E9j\u00E0 ces \u00E9tapes automatiquement ; la m\u00E9thode manuelle sert au diagnostic.\r\n\r\nBonnes pratiques et points de vigilance\r\nToujours v\u00E9rifier les plages temporaires (sig inception/expiration) ; surveiller les rollovers et coordonner mise \u00E0 jour de DS au parent ; conserver des m\u00E9canismes de reprise (old key encore valide pendant transition) ; configurer la root trust anchor via m\u00E9canisme \u00E9prouv\u00E9 (ex : fichier d\u0027ancre, RFC 5011 auto-update si souhait\u00E9) ; tenir compte des algorithmes d\u00E9pr\u00E9ci\u00E9s et mettre \u00E0 jour la cha\u00EEne d\u0027outils si support manquant.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 V\u00E9rification basique : On dispose des enregistrements suivants (simplicit\u00E9 : valeurs abr\u00E9g\u00E9es) pour myhost.example. RRset A: 1.2.3.4 RRSIG(A): sign\u00E9 par key tag 12345, alg 8, validit\u00E9 ok. Zone example.com DNSKEY : key tag 12345 (alg 8, flag 256), key tag 54321 (alg 8, flag 257). Parent (com) DS for example.com : DS digest correspond au key tag 54321. Question : La cha\u00EEne de confiance pour l\u0027enregistrement A est-elle valide ? Expliquez bri\u00E8vement pourquoi.",
              "Answer": "Non, pas encore : la RRSIG de l\u0027enregistrement A est sign\u00E9e par la cl\u00E9 avec key tag 12345, mais le DS au parent correspond \u00E0 la cl\u00E9 54321 (KSK). Tant que la DNSKEY signant le RRset n\u0027a pas de correspondance DS au parent (directe ou via validation de la zone jusqu\u0027\u00E0 la racine), la confiance ne remonte pas au parent.",
              "Explanation": "Le RRset A est sign\u00E9 par la cl\u00E9 12345 (flag 256 = ZSK), ce qui prouve que la zone contr\u00F4le le RRset localement. Cependant, pour que la d\u00E9l\u00E9gation soit consid\u00E9r\u00E9e s\u00E9curis\u00E9e vis-\u00E0-vis du parent, le parent doit contenir un DS issu d\u0027une DNSKEY de la zone marqu\u00E9e KSK. Ici le DS correspond \u00E0 la cl\u00E9 54321 (flag 257 KSK). Il manque la relation entre la cl\u00E9 signant le RRset et la cha\u00EEne de confiance ascendante : typiquement on attend que la DNSKEY 54321 soit pr\u00E9sente et utilis\u00E9e pour signer (directement ou indirectement via la DNSKEY set) ou que la DNSKEY 12345 soit couverte par un DS valide. Si la cl\u00E9 54321 existe dans DNSKEY et signe la DNSKEY set (RRSIG over DNSKEY), on peut valider la DNSKEY set et donc valider la signature indirectement ; mais l\u0027\u00E9nonc\u00E9 ne dit pas que DNSKEY set est sign\u00E9e par 54321. Sans cette v\u00E9rification, on ne peut conclure \u00E0 une validation compl\u00E8te jusqu\u0027au parent."
            },
            {
              "Instruction": "Exercice 2 \u2014 DS mismatch : On r\u00E9cup\u00E8re la DNSKEY (KSK candidate) de zone child.zone et calcule son digest SHA-256 qui donne 0xAAA...; le DS publi\u00E9 au parent a pour digest 0xBBB.... Quelle est l\u0027interpr\u00E9tation et quelles actions corriger ?",
              "Answer": "Interpr\u00E9tation : DS mismatch \u2014 le DS dans le parent ne correspond pas \u00E0 la cl\u00E9 DNSKEY publi\u00E9e par l\u0027enfant. Action corrective : v\u00E9rifier si un rollover est en cours (v\u00E9rifier anciennes cl\u00E9s), contacter l\u0027administrateur parent pour publier le DS correct (ou retirer DS si changement de politique), ou publier la bonne DNSKEY dans l\u0027enfant selon plan de rollover. En cas d\u0027urgence, restaurer l\u0027ancienne DNSKEY qui correspond au DS pour r\u00E9tablir la validation.",
              "Explanation": "Un DS doit \u00EAtre le hach\u00E9 d\u0027une DNSKEY pr\u00E9cise. Un \u00E9cart signifie que le parent a une empreinte diff\u00E9rente de la cl\u00E9 courante \u2014 ce produit des rollovers non coordonn\u00E9s, des erreurs de digest (mauvais algorithme de hachage utilis\u00E9), ou d\u0027une publication incorrecte. La r\u00E9solution implique la coordination entre op\u00E9rateurs parent et enfant pour que l\u0027empreinte (DS) et la cl\u00E9 r\u00E9elle concordent pendant toute la p\u00E9riode de transition."
            },
            {
              "Instruction": "Exercice 3 \u2014 Signature expir\u00E9e : un RRSIG d\u0027un RRset pr\u00E9sente une date d\u0027expiration hier. Tous les autres \u00E9l\u00E9ments (DNSKEY, DS, parent) correspondent. Que signifie l\u0027erreur et quelles sont les \u00E9tapes imm\u00E9diates \u00E0 entreprendre ?",
              "Answer": "Signification : la signature a expir\u00E9 \u2014 le RRset n\u0027est plus consid\u00E9r\u00E9 valide m\u00EAme si les cl\u00E9s sont correctes. \u00C9tapes : 1) confirmer l\u0027heure du serveur/validateurs (synchronisation NTP) ; 2) re-signer la zone (g\u00E9n\u00E9rer de nouvelles RRSIG valides) ; 3) publier les nouvelles signatures via la zone ; 4) v\u00E9rifier que la distribution des nouvelles signatures est effective et revalider.",
              "Explanation": "RRSIG contient un intervalle de validit\u00E9 ; si actuel \u003E expiration, la signature n\u0027est plus valide. Parfois le probl\u00E8me est une horloge mal synchronis\u00E9e sur le serveur de validation ; autrement, l\u0027op\u00E9rateur de la zone doit r\u00E9g\u00E9n\u00E9rer et publier des signatures avant expiration pour assurer continuit\u00E9. Pendant les op\u00E9rations automatiques, pr\u00E9voir un renouvellement r\u00E9gulier des signatures et des m\u00E9canismes de monitoring."
            },
            {
              "Instruction": "Exercice 4 \u2014 D\u00E9l\u00E9gation non s\u00E9curis\u00E9e : en remontant la cha\u00EEne, on atteint un parent qui ne poss\u00E8de aucun enregistrement DS pour la zone enfant. Le RRset enfant est sign\u00E9 correctement par des RRSIG/DNSKEY. Comment interpr\u00E9ter le statut de la d\u00E9l\u00E9gation et quelles implications pour la validation ?",
              "Answer": "Interpr\u00E9tation : la d\u00E9l\u00E9gation est \u0027insecure\u0027 (non sign\u00E9e) au sens DNSSEC. M\u00EAme si la zone enfant a des signatures, l\u0027absence de DS au parent signifie qu\u0027il n\u0027y a pas de lien de confiance entre le parent et l\u0027enfant ; donc un validateurs stricts ne consid\u00E9reront pas la zone enfant comme s\u00E9curis\u00E9e \u00E0 partir du parent.",
              "Explanation": "Une zone peut \u00EAtre sign\u00E9e localement mais tant que le parent n\u0027a pas publi\u00E9 un DS correspondant, il n\u0027existe pas de cha\u00EEne de confiance remontant depuis la zone racine. Les validateurs voient une d\u00E9l\u00E9gation non s\u00E9curis\u00E9e et traiteront la zone comme non prot\u00E9g\u00E9e par DNSSEC. Cela peut \u00EAtre intentionnel (certains domaines ne publient pas de DS) ou une erreur (ou oubli) lors du d\u00E9ploiement de DNSSEC."
            }
          ]
        },
        {
          "Title": "Outils et commandes pour tester la cha\u00EEne de confiance",
          "Summary": "Pr\u00E9sentation et d\u00E9monstration d\u0027outils (dig, drill, delv, OpenSSL, validateurs en ligne), automatisation des v\u00E9rifications et int\u00E9gration \u00E0 la surveillance.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Comprendre le r\u00F4le des outils r\u00E9seau et crypto (dig, drill, delv, OpenSSL) pour v\u00E9rifier une cha\u00EEne de confiance",
            "Savoir ex\u00E9cuter des commandes pour inspecter et valider les enregistrements DNSSEC et la cha\u00EEne de certificats TLS/PKI",
            "Interpr\u00E9ter les sorties de ces outils pour d\u00E9tecter erreurs, omissions ou probl\u00E8mes de configuration",
            "Automatiser les contr\u00F4les de cha\u00EEne de confiance (scripts, CI, t\u00E2ches planifi\u00E9es) et int\u00E9grer les r\u00E9sultats \u00E0 une surveillance",
            "Concevoir des alertes pertinentes (expiration, non-validation, changement d\u0027empreinte, \u00E9checs DNSSEC)",
            "Conna\u00EEtre les validateurs en ligne utiles et leurs limites par rapport aux v\u00E9rifications locales"
          ],
          "Content": "Introduction : port\u00E9e et d\u00E9finitions\r\nD\u00E9finir la \u00AB cha\u00EEne de confiance \u00BB selon le contexte : DNSSEC (zone sign\u00E9e et DS/ DNSKEY), PKI/TLS (certificat serveur, interm\u00E9diaires, racine), et liens avec OCSP/CRL. Expliquer pourquoi tester syst\u00E9matiquement (expiration, mauvaise cha\u00EEne, \u00E9l\u00E9ments manquants, signatures invalides) et l\u0027importance de combiner outils locaux et validateurs externes.\r\n\r\nOutils DNS : dig, drill, delv \u2014 quand et comment s\u0027en servir\r\ndig (ISC) : commande polyvalente pour interroger les enregistrements DNS. Exemples utiles : dig example.com A \u002Bdnssec -\u003E montre le drapeau AD/DO et RRSIG ; dig \u002Bshort DNSKEY example.com ; dig \u002Bmulti DS example.com. drill (from ldns) : alternative \u00E0 dig avec options pratiques pour DNSSEC, par ex. drill -S example.com pour afficher les DNSKEY/DS/RRSIG. delv (de l\u0027outil unbound suite) : outil sp\u00E9cialis\u00E9 pour d\u00E9boguer la validation DNSSEC locale et pour tracer la r\u00E9solution et la validation (ex. delv example.com). Pour chaque outil, d\u00E9tailler ce qu\u0027indiquent les RRSIG, les flags DO/AD, et comment interpr\u00E9ter des \u00E9checs de validation.\r\n\r\nOutils PKI/TLS : OpenSSL pour r\u00E9cup\u00E9rer et analyser des certificats\r\nOpenSSL s_client -connect host:443 -showcerts permet de r\u00E9cup\u00E9rer la cha\u00EEne envoy\u00E9e par le serveur. Utiliser openssl x509 -noout -text pour lire un certificat, openssl x509 -in cert.pem -dates pour conna\u00EEtre la p\u00E9riode de validit\u00E9, et openssl verify -CAfile chain.pem cert.pem pour v\u00E9rifier localement la cha\u00EEne contre un store fourni. Expliquer la diff\u00E9rence entre la cha\u00EEne envoy\u00E9e par le serveur et la cha\u00EEne compl\u00E8te requise par les clients (certificats interm\u00E9diaires manquants fr\u00E9quents). Montrer comment v\u00E9rifier les extensions (KeyUsage, ExtendedKeyUsage, SubjectAltName) et comment extraire l\u0027empreinte (openssl x509 -noout -fingerprint).\r\n\r\nValidateurs en ligne : r\u00F4le, exemples et limites\r\nPr\u00E9senter les validateurs en ligne pour TLS/PKI (ex. SSL Labs, Hardenize, CAA/PKI observatory) et pour DNSSEC (outils d\u0027analyse de zone fournis par registraires et validateurs publics). Expliquer leurs apports : tests approfondis, configurations externes, perspective client r\u00E9elle. \u00C9noncer leurs limites : d\u00E9pendance \u00E0 un observateur externe (peut \u00EAtre bloqu\u00E9), diff\u00E9rences de perspective r\u00E9seau, et confidentialit\u00E9 des donn\u00E9es test\u00E9es.\r\n\r\nAutomatisation des v\u00E9rifications : scripts et pipelines\r\nExemples de commandes automatisables : v\u00E9rification d\u0027expiration avec openssl s_client \u002B parsing de dates, v\u00E9rification de cha\u00EEne avec openssl verify, test DNSSEC avec delv/drill/dig et recherche d\u0027AD/validation. Proposer patterns : petits scripts shell/Perl/Python ex\u00E9cutant les commandes, normalisation des sorties en JSON, utilisation de biblioth\u00E8ques (cryptography pour Python) si besoin d\u0027analyse structur\u00E9e. Int\u00E9gration dans CI/CD : ex\u00E9cuter tests lors du d\u00E9ploiement d\u0027un certificat ou d\u0027un changement DNS, \u00E9chouer le pipeline si validation KO.\r\n\r\nInt\u00E9gration \u00E0 la surveillance et \u00E0 l\u0027alerte\r\nStrat\u00E9gies pour int\u00E9grer ces contr\u00F4les dans la supervision : t\u00E2ches cron \u002B push vers un endpoint de monitoring, exporters pour Prometheus (ex. blackbox_exporter pour tests HTTP(S)/TCP et v\u00E9rification d\u0027expiration), scripts Nagios/Check_Commands, ou sondes personnalis\u00E9es. D\u00E9finir r\u00E8gles d\u0027alerte : expiration sous X jours, changement d\u0027empreinte, \u00E9chec DNSSEC/validation. Conseils pratiques : fr\u00E9quence adapt\u00E9e (ex. v\u00E9rification d\u0027expiration quotidienne), corr\u00E9lation d\u0027alerts (\u00E9viter le bruit), et proc\u00E9dures de rem\u00E9diation (recommandations \u00E0 joindre \u00E0 l\u0027alerte).\r\n\r\nBonnes pratiques et pi\u00E8ges courants\r\nLister bonnes pratiques : surveiller les expirations \u00E0 plusieurs niveaux (serveur, interm\u00E9diaires), conserver et versionner les cha\u00EEnes et CAfiles utilis\u00E9es pour v\u00E9rification, utiliser des validateurs externes ponctuellement pour view-from-the-internet, automatiser tests post-renouvellement. Pi\u00E8ges : d\u00E9pendre d\u0027une seule perspective r\u00E9seau, oublier OCSP/CRL, accepter par erreur certificats auto-sign\u00E9s dans des environnements de test, et ne pas tester les interm\u00E9diaires manquants.\r\n\r\nExemples pratiques : commandes et sorties attendues\r\nFournir une liste compacte de commandes avec r\u00E9sultat attendu : 1) dig example.com \u002Bdnssec -\u003E pr\u00E9sence de RRSIG et DO/AD ; 2) drill -S example.com -\u003E v\u00E9rification DNSSEC r\u00E9ussie ; 3) delv example.com -\u003E trace de r\u00E9solution et message indiquant validation OK ; 4) echo | openssl s_client -connect host:443 -servername host -showcerts -\u003E r\u00E9cup\u00E9ration des certificats ; 5) openssl verify -CAfile roots.pem -untrusted inter.pem server.pem -\u003E v\u00E9rification r\u00E9ussie si code OK. Expliquer comment lire rapidement une sortie pour d\u00E9cider si la cha\u00EEne est correcte.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Avec dig, r\u00E9cup\u00E9rez l\u0027enregistrement DNSKEY d\u0027un domaine sign\u00E9 (par exemple example.com). Indiquez les \u00E9l\u00E9ments \u00E0 v\u00E9rifier dans la sortie pour confirmer que la zone est sign\u00E9e et que vous recevez les signatures.",
              "Answer": "Commande: dig example.com DNSKEY \u002Bdnssec\n\u00C9l\u00E9ments \u00E0 v\u00E9rifier: pr\u00E9sence d\u0027enregistrements DNSKEY, pr\u00E9sence de RRSIG couvrant les autres RRsets, pr\u00E9sence du flag DO si demand\u00E9, et drapeaux AD/DO sur une r\u00E9ponse valid\u00E9e (si interrog\u00E9 sur un r\u00E9solveur valide).",
              "Explanation": "La pr\u00E9sence d\u0027un ou plusieurs DNSKEY signifie que la zone publie des cl\u00E9s. Les RRSIGs (Resource Record Signatures) prouvent que des RRsets sont sign\u00E9s. DO (DNSSEC OK) demande les signatures dans la r\u00E9ponse, AD (Authenticated Data) indique qu\u0027un r\u00E9solveur a valid\u00E9 la signature. Si RRSIG absent ou AD manquant, la zone peut ne pas \u00EAtre sign\u00E9e ou la validation peut \u00E9chouer."
            },
            {
              "Instruction": "Utilisez OpenSSL pour r\u00E9cup\u00E9rer la cha\u00EEne de certificats d\u0027un serveur HTTPS (host:443), puis extraire la date d\u0027expiration du certificat serveur. Donnez la commande et l\u0027approche pour automatiser l\u0027alerte quand l\u0027expiration est \u003C 30 jours.",
              "Answer": "Commande pour r\u00E9cup\u00E9rer et extraire la date: echo | openssl s_client -connect host:443 -servername host -showcerts 2\u003E/dev/null | openssl x509 -noout -enddate\nApproche d\u0027automatisation: ex\u00E9cuter la commande depuis un script, parser la date renvoy\u00E9e (FORMAT: notAfter=...), convertir en timestamp et comparer \u00E0 la date actuelle; si diff\u00E9rence \u003C 30 jours, retourner code d\u0027erreur / pousser m\u00E9trique ou cr\u00E9er alerte dans l\u0027outil de monitoring.",
              "Explanation": "openssl s_client renvoie la cha\u00EEne; openssl x509 -enddate affiche la date de fin de validit\u00E9. Un script (bash/python) peut convertir la cha\u00EEne de date en timestamp (ex. date -d \u0027DATE\u0027 \u002B%s) et comparer. Dans Prometheus, un exporter peut exposer la dur\u00E9e restante en secondes pour cr\u00E9er une r\u00E8gle d\u0027alerte."
            },
            {
              "Instruction": "Avec openssl verify, expliquez comment v\u00E9rifier localement qu\u0027un certificat serveur est bien li\u00E9 \u00E0 une cha\u00EEne d\u0027interm\u00E9diaires et \u00E0 une racine donn\u00E9e. Quelle est la commande et que signifie un code de sortie non nul ?",
              "Answer": "Commande: openssl verify -CAfile roots.pem -untrusted inter.pem server.pem\nSignification: roots.pem contient les certificats racine de confiance; inter.pem contient les interm\u00E9diaires fournis; server.pem est le certificat serveur. Un code de sortie 0 signifie v\u00E9rification OK. Un code de sortie non nul indique un \u00E9chec (cha\u00EEne incompl\u00E8te, signature invalide, dates non valides, ou certificat non sign\u00E9 par la cha\u00EEne fournie).",
              "Explanation": "openssl verify tente de construire une cha\u00EEne du serveur jusqu\u0027\u00E0 une racine pr\u00E9sente dans -CAfile en utilisant -untrusted comme interm\u00E9diaires. Les raisons d\u0027\u00E9chec incluent certificat expir\u00E9, mismatch d\u0027empreinte, signature incorrecte, ou interm\u00E9diaire manquant. Les messages d\u0027erreur fournis aident \u00E0 diagnostiquer."
            },
            {
              "Instruction": "Proposez un petit script ou une logique pour int\u00E9grer un test DNSSEC \u00E0 votre syst\u00E8me de supervision (ex. Prometheus). Indiquez les points essentiels \u00E0 surveiller et la fr\u00E9quence recommand\u00E9e.",
              "Answer": "Logique: \u00E9crire un script qui ex\u00E9cute delv domain, parse la sortie pour trouver \u0027validation: ok\u0027 ou les erreurs. Exposer un endpoint HTTP qui renvoie 0/1 ou m\u00E9trique Prometheus (dnssec_validation{domain=\u0022domain\u0022} 1 ou 0). Points \u00E0 surveiller: \u00E9chec de validation (0), incoh\u00E9rence entre r\u00E9solveurs (r\u00E9solveur local valide ou non), pr\u00E9sence de DS au parent ; fr\u00E9quence recommand\u00E9e: quotidienne pour zones statiques, toutes les heures pour zones critiques/\u00E0 changement fr\u00E9quent.",
              "Explanation": "delv fournit une trace de validation DNSSEC lisible. En exposant une m\u00E9trique Prometheus, on peut d\u00E9finir une r\u00E8gle d\u0027alerte (par ex. si dnssec_validation == 0 pendant X minutes). La fr\u00E9quence d\u00E9pend du risque : une v\u00E9rification horaire pour services critiques r\u00E9duit la fen\u00EAtre d\u0027indisponibilit\u00E9 non d\u00E9tect\u00E9e, mais peut g\u00E9n\u00E9rer du bruit si le r\u00E9seau est instable."
            }
          ]
        },
        {
          "Title": "D\u00E9tection et diagnostic des ruptures de cha\u00EEne",
          "Summary": "Sympt\u00F4mes courants d\u0027une rupture (NXDOMAIN, validation \u00E9chou\u00E9e), \u00E9tapes de diagnostic, lecture des logs, corr\u00E9lation entre erreurs locales et parentales.",
          "EstimatedMinutes": 75,
          "LearningObjectives": [
            "Identifier les sympt\u00F4mes courants d\u0027une rupture de cha\u00EEne DNS (NXDOMAIN, SERVFAIL, validation DNSSEC \u00E9chou\u00E9e, timeouts, r\u00E9ponses tronqu\u00E9es, CNAME loops).",
            "Suivre une d\u00E9marche m\u00E9thodique de diagnostic pour isoler l\u0027origine d\u0027une panne de r\u00E9solution (client, cache/r\u00E9solveur r\u00E9cursif, parent, serveur faisant autorit\u00E9).",
            "Savoir lire et interpr\u00E9ter les logs des r\u00E9solveurs et serveurs faisant autorit\u00E9 (BIND, Unbound, systemd-resolved, logs de pare-feu) pour extraire indices pertinents.",
            "Utiliser les outils de requ\u00EAte DNS (dig, drill, delv, tcpdump/pcap) et les options (trace, \u002Bdnssec, \u002Btcp, \u002Bshort) pour reproduire et analyser les \u00E9changes.",
            "Corr\u00E9ler les erreurs observ\u00E9es localement avec les r\u00E9ponses des serveurs parent/autoritatifs (d\u00E9l\u00E9gation NS/Glue, enregistrements DS/DNSKEY, signatures RRSIG).",
            "Formuler des actions correctives ou mitigations temporaires (r\u00E9parer DS, corriger delegation/NS, prolonger signatures, configuration de retry/EDNS)."
          ],
          "Content": "1. Sympt\u00F4mes courants d\u0027une rupture de cha\u00EEne\r\nSignes observables c\u00F4t\u00E9 client ou monitoring :\n- NXDOMAIN : le r\u00E9solveur r\u00E9pond que le nom n\u0027existe pas. Peut venir d\u0027une suppression dans la zone, d\u0027une absence de d\u00E9l\u00E9gation ou d\u0027une erreur de configuration parentale.\n- SERVFAIL : \u00E9chec g\u00E9n\u00E9rique de r\u00E9solution. Souvent li\u00E9 \u00E0 DNSSEC (validation \u00E9chou\u00E9e), serveurs autoritatifs injoignables, r\u00E9ponses mal form\u00E9es ou timeouts r\u00E9p\u00E9t\u00E9s.\n- Validation \u00E9chou\u00E9e (DNSSEC) : le r\u00E9solveur refuse d\u0027accepter la r\u00E9ponse (ou renvoie SERVFAIL/FORMERR selon l\u0027impl\u00E9mentation) si la cha\u00EEne de confiance est bris\u00E9e (DS absent/mismatch, RRSIG expir\u00E9e, cl\u00E9 non correspondante).\n- Timeouts et intermittence : paquets perdus, r\u00E9ponses UDP tronqu\u00E9es (requ\u00EAte TCP non suivie), boucle CNAME ou probl\u00E8mes de glue provoquent latences et \u00E9checs sporadiques.\n- Erreurs li\u00E9es aux TTL/glue : enregistrements NS sans glue quand n\u00E9cessaire provoquent r\u00E9solution r\u00E9cursive lente ou impossible si les adresses des serveurs autoritatifs ne peuvent \u00EAtre trouv\u00E9es.\r\n\r\n2. \u00C9tapes m\u00E9thodiques de diagnostic\r\n1) Reproduire le probl\u00E8me de mani\u00E8re contr\u00F4l\u00E9e : notez client, horaire, op\u00E9rateur r\u00E9seau, type de requ\u00EAte (A, AAAA, NS, DS).\n2) D\u00E9terminer la port\u00E9e : un seul client, un r\u00E9seau, tous les utilisateurs ? Tester depuis un autre r\u00E9solveur public (8.8.8.8, 1.1.1.1) pour voir si probl\u00E8me global.\n3) Ex\u00E9cution de requ\u00EAtes cibl\u00E9es :\n   - dig \u002Btrace nom.zone pour suivre la r\u00E9solution it\u00E9rative depuis la racine.\n   - dig @r\u00E9solveur cible \u002Bdnssec \u002Btcp \u002Bnoedns pour obtenir d\u00E9tails, RRSIG, et forcer TCP.\n   - delv ou drill peuvent montrer d\u00E9tails DNSSEC plus lisibles.\n4) Interroger direct les serveurs faisant autorit\u00E9 : dig @ns1.example.com nom.type \u002Bnorecurse pour v\u00E9rifier la r\u00E9ponse authentique.\n5) V\u00E9rifier la d\u00E9l\u00E9gation parentale : interroger le serveur du parent (ex : pour example.com interroger les serveurs du .com) pour voir si les NS et glue sont pr\u00E9sents.\n6) V\u00E9rifier DS/DNSKEY et dates de signatures : examiner DNSKEY, DS et RRSIG ; v\u00E9rifier que les signatures ne sont pas expir\u00E9es et que les algorithmes correspondent.\n7) Capturer trafic si n\u00E9cessaire (tcpdump, wireshark) pour voir retransmission, fragmentation, ou erreurs EDNS.\n8) Lire logs des r\u00E9solveurs et serveurs (voir section suivante) et corr\u00E9ler avec heures des requ\u00EAtes.\n9) Tester correctifs en environnement contr\u00F4l\u00E9 (retirer DS erron\u00E9, mettre signature valide, corriger d\u00E9l\u00E9gation) et surveiller retours.\r\n\r\n3. Lecture des logs : quoi chercher et exemples\r\nBIND (named) :\n- Exemples : \u0022general: validation failed for \u0027www.example.com/IN\u0027: bad signature\u0022 ou \u0022client x.x.x.x#12345: view _default_: query \u0027www.example.com IN A\u0027 denied\u0022. Ces lignes indiquent une validation DNSSEC qui a \u00E9chou\u00E9 ou une r\u00E9ponse bloqu\u00E9e.\nUnbound :\n- Exemples : \u0022error: validation failure: ...\u0022 ou \u0022info: validation failed for example.com/IN: insecure\u0022. Unbound journalise souvent la cause pr\u00E9cise (signature invalide, absence de cl\u00E9).\nsystemd-resolved / dnsmasq :\n- Messages plus succincts : \u00E9checs de r\u00E9solution, timeouts, ou r\u00E9ponses hach\u00E9es. V\u00E9rifier logs syst\u00E8me (journalctl) pour timeouts r\u00E9seau sous-jacents.\nServeurs d\u0027autorit\u00E9 :\n- BIND : recherche d\u0027erreurs de zone (zone example.com/IN: loaded serial 2025010101) ou \u0022error: RSA key generation failed\u0022 ; regarder aussi messages d\u0027axfr/zone transfer.\n- Logs de transfert AXFR/IXFR peuvent montrer refus de transfert et provoquer r\u00E9solveur \u00E0 manquer d\u0027enregistrements.\nPacket captures :\n- Recherchez RCODE dans les r\u00E9ponses (NXDOMAIN=3, SERVFAIL=2), le bit TC (truncated), les sections RRSIG/RRSIG expir\u00E9es, et des r\u00E9ponses contenant des enregistrements hors d\u00E9l\u00E9gation.\nInterpretation :\n- Validation DNSSEC \u00E9chou\u00E9e =\u003E cherchez RRSIG expir\u00E9e ou DNSKEY non correspondant au DS.\n- NXDOMAIN local mais parent ne r\u00E9f\u00E8re pas =\u003E d\u00E9l\u00E9gation manquante.\n- SERVFAIL et timeouts sur des \u00E9changes vers autoritatifs =\u003E probl\u00E8mes r\u00E9seau/pare-feu ou glue manquante.\r\n\r\n4. Corr\u00E9lation entre erreurs locales et r\u00E9ponses parentales/autoritatifs\r\nSc\u00E9narios type et comment les reconna\u00EEtre :\n- Local : NXDOMAIN. Parent : aucune d\u00E9l\u00E9gation (pas d\u0027enregistrements NS pour l\u0027enfant). Diagnostic : dig \u002Btrace montrera que la recherche s\u0027arr\u00EAte au parent sans referral vers des NS. Action : ajouter la d\u00E9l\u00E9gation chez le parent/registreur.\n- Local : SERVFAIL lors d\u0027une zone sign\u00E9e. Parent : DS pr\u00E9sent mais DS ne correspond pas au DNSKEY de l\u0027enfant (mismatch). Diagnostic : r\u00E9cup\u00E9rer DS au parent (dig @parent DS zone) et DNSKEY \u00E0 l\u0027enfant puis comparer. Action : synchroniser la cl\u00E9 ou retirer temporairement le DS.\n- Local : intermittence/timeout. Parent : NS list\u00E9e mais sans glue (pas d\u0027enregistrement A/AAAA) ou des adresses erron\u00E9es. Diagnostic : dig @parent NS et chercher enregistrements glue ; tenter d\u0027atteindre les adresses list\u00E9es. Action : ajouter glue correct ou corriger adresse des serveurs NS au parent.\n- Local : SERVFAIL et logs du r\u00E9solveur indiquant \u0022bad signature\u0022. Autoritatif : RRSIG expir\u00E9e (signature pass\u00E9e). Diagnostic : dig @auth zone SOA/ DNSKEY / RRSIG ; v\u00E9rifier dates RRSIG. Action : re-signer la zone, corriger la cha\u00EEne de publication si automatis\u00E9e.\n- Local : R\u00E9solution renvoie A mais AD bit absent alors que r\u00E9ponse a \u00E9t\u00E9 attendue comme s\u00E9curis\u00E9e. Parent/autoritatif : zone non sign\u00E9e ou DS manquant. Diagnostic : v\u00E9rifier presence de DNSSEC (DNSKEY/DS). Action : signer la zone ou retirer indication DNSSEC c\u00F4t\u00E9 parent.\r\n\r\n5. Outils pratiques et commandes cl\u00E9s\r\nOutils et options courants :\n- dig : dig \u002Btrace @root example.com A ; dig @resolver example.com A \u002Bdnssec \u002Btcp \u002Bshort ; dig @ns child.example.com NS \u002Bnorecurse\n- delv / drill : fournissent affichage orient\u00E9 DNSSEC et chaines.\n- tcpdump/wireshark : capture udp port 53/tcp port 53 pour analyser retransmissions, RCODE, EDNS options.\n- whois/registrar console : v\u00E9rifier d\u00E9l\u00E9gations et champs DS dans l\u0027interface du registre.\n- validate/dnssec-tools en ligne : validators (secbench, Verisign labs) pour tests externes.\nRappel : pour isoler, toujours interroger directement les serveurs autoritatifs (norecurse) et le parent. Utiliser \u002Btcp pour \u00E9viter probl\u00E8mes de fragmentation/UDP. Pour DNSSEC, v\u00E9rifier trois ensembles : DS (parent), DNSKEY (enfant), RRSIG (donn\u00E9es).\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 Un client re\u00E7oit NXDOMAIN pour \u0022www.example.org\u0022. D\u00E9crivez les commandes \u00E0 ex\u00E9cuter pour localiser si le probl\u00E8me vient de la d\u00E9l\u00E9gation parentale ou de la zone enfant, et indiquez ce que vous attendez comme indicateurs dans la sortie.",
              "Answer": "1) dig \u002Btrace www.example.org\n2) dig @\u003Cr\u00E9solveur_local\u003E www.example.org \u002Bdnssec \u002Btcp\n3) dig @\u003Cserveur_parent\u003E example.org NS \u002Bnorecurse\n4) dig @\u003Cserveur_enfant_possible\u003E www.example.org A \u002Bnorecurse\nIndicateurs : si \u002Btrace s\u0027arr\u00EAte au serveur parent sans referral vers des NS enfant -\u003E d\u00E9l\u00E9gation manquante. Si le parent renvoie NS pour example.org, mais les serveurs autoritatifs ne r\u00E9pondent pas aux requ\u00EAtes directes -\u003E probl\u00E8me c\u00F4t\u00E9 enfant.",
              "Explanation": "La commande \u002Btrace montre le chemin de r\u00E9solution depuis la racine et si le parent fournit une d\u00E9l\u00E9gation. Interroger explicitement le serveur parent permet de v\u00E9rifier que les enregistrements NS/Glue existent. Interroger directement le serveur autoritatif montre si la zone enfant est op\u00E9rationnelle."
            },
            {
              "Instruction": "Exercice 2 \u2014 Un r\u00E9solveur retourne SERVFAIL syst\u00E9matiquement pour un domaine sign\u00E9 apr\u00E8s une cl\u00E9 ou rollover. Quels tests DNSSEC ex\u00E9cuter et quel r\u00E9sultat indique un mismatch DS/DNSKEY ?",
              "Answer": "1) dig @parent-domain DS example.com \u002Bnorecurse\n2) dig @auth-server example.com DNSKEY \u002Bnorecurse \u002Bdnssec\nComparer l\u0027empreinte/algorithme du DS retourn\u00E9 par le parent avec la cl\u00E9 publique (DNSKEY) retourn\u00E9e par l\u0027enfant. Un mismatch (empreintes diff\u00E9rentes ou algorithmes non correspondants) indique que le DS ne correspond pas au DNSKEY et provoque la validation \u00E9chou\u00E9e.",
              "Explanation": "La cha\u00EEne de confiance passe par DS (parent) -\u003E DNSKEY (enfant). Si le DS publi\u00E9 chez le parent ne correspond pas \u00E0 la DNSKEY active dans la zone enfant, alors la validation DNSSEC \u00E9choue et le r\u00E9solveur renvoie g\u00E9n\u00E9ralement SERVFAIL. Les commandes list\u00E9es exposent ces deux objets pour comparaison."
            },
            {
              "Instruction": "Exercice 3 \u2014 R\u00E9solution intermittente et longs d\u00E9lais; les logs montrent tentatives r\u00E9p\u00E9t\u00E9es vers les serveurs NS mais pas de r\u00E9ponses. Quelles v\u00E9rifications r\u00E9seau et DNS faire pour isoler glue/adressage ou firewall comme cause ?",
              "Answer": "1) dig @parent example.net NS \u002Bnorecurse -\u003E v\u00E9rifier liste NS et pr\u00E9sence/absence de glue (A/AAAA en m\u00EAme appel).\n2) Pour chaque NS list\u00E9, tenter ping/traceroute et dig @\u003Cns\u003E example.net SOA \u002Bnorecurse \u002Btcp pour tester accessibilit\u00E9 et r\u00E9ponse TCP.\n3) tcpdump sur le r\u00E9solveur pour capturer retransmissions UDP et \u00E9checs TCP (port 53) et identifier ICMP unreachable ou packet drops.\n4) V\u00E9rifier aupr\u00E8s du registrar si les enregistrements glue (A/AAAA) sont renseign\u00E9s et corrects.\nSignes : absence de glue combin\u00E9e \u00E0 impossibilit\u00E9 de r\u00E9soudre le nom des serveurs NS provoque boucles et timeouts; paquets ICMP ou absence de r\u00E9ponse TCP/UDP pointe vers firewall/filtrage.",
              "Explanation": "Si le parent fournit NS sans glue, le r\u00E9solveur doit r\u00E9soudre le nom des serveurs NS \u2014 si ces r\u00E9solutions \u00E9chouent (parce que les serveurs NS sont dans la m\u00EAme zone cass\u00E9e ou bloqu\u00E9s), on obtient intermittence/timeouts. Les captures r\u00E9seau montrent si les paquets quittent le serveur et quelles r\u00E9ponses reviennent (ou pas)."
            }
          ]
        },
        {
          "Title": "Proc\u00E9dures de correction : rollover de cl\u00E9s et r\u00E9\u00E9mission de DS",
          "Summary": "\u00C9tapes pour effectuer un rollover KSK/ZSK sans rupture : planification, publication des nouveaux DS, synchronisation parent-enfant, et fen\u00EAtres de chevauchement.",
          "EstimatedMinutes": 40,
          "LearningObjectives": [
            "Comprendre la diff\u00E9rence op\u00E9rationnelle entre KSK et ZSK et l\u0027impact de leur rollover sur la cha\u00EEne de confiance.",
            "Savoir planifier un rollover de cl\u00E9s (KSK ou ZSK) sans rupture de validation DNSSEC.",
            "Ma\u00EEtriser les \u00E9tapes concr\u00E8tes : g\u00E9n\u00E9ration, publication des DNSKEY, publication/actualisation des RRset DS chez le parent et retrait des anciennes cl\u00E9s.",
            "Savoir calculer et d\u00E9finir une fen\u00EAtre de chevauchement (overlap) adapt\u00E9e en fonction des TTL et de la dur\u00E9e de validit\u00E9 des signatures.",
            "Identifier les actions de v\u00E9rification et de surveillance \u00E0 ex\u00E9cuter pendant et apr\u00E8s le rollover, et les proc\u00E9dures de repli (rollback)."
          ],
          "Content": "Vue d\u0027ensemble et enjeux\r\nUn rollover de cl\u00E9 est la substitution d\u0027une cl\u00E9 utilis\u00E9e pour signer une zone DNSSEC. Pour \u00E9viter toute rupture de validation, il faut coordonner publication des nouvelles cl\u00E9s dans la zone (DNSKEY), la publication des nouvelles preuves de d\u00E9l\u00E9gation (DS) chez le parent lorsque le KSK change, et s\u0027assurer que les validateurs voient une p\u00E9riode o\u00F9 l\u0027ancienne et la nouvelle configuration coexistent. Les ZSKs sont utilis\u00E9es pour signer les enregistrements de la zone ; leur rollover s\u0027effectue g\u00E9n\u00E9ralement sans interaction avec le parent. Les KSKs servent \u00E0 signer uniquement la cl\u00E9 (DNSKEY RRset) et impliquent une mise \u00E0 jour du DS chez le parent.\r\n\r\nR\u00F4les KSK vs ZSK \u2014 implications pratiques\r\nKSK (Key Signing Key) : signe le DNSKEY RRset. Quand on change de KSK, il faut que le parent publie un DS correspondant au nouveau KSK \u2014 action souvent r\u00E9alis\u00E9e via le registrar/registrar API. ZSK (Zone Signing Key) : signe le reste des RRset de la zone ; le rollover de ZSK peut \u00EAtre g\u00E9r\u00E9 enti\u00E8rement du c\u00F4t\u00E9 de la zone sans modification chez le parent.\r\n\r\nStrat\u00E9gies de rollover (r\u00E9sum\u00E9)\r\nM\u00E9thodes courantes pour \u00E9viter toute rupture :\n- Double-signing / double publication : publier la nouvelle cl\u00E9 dans le DNSKEY RRset tout en conservant l\u0027ancienne, signer avec les deux (pour ZSK on peut cr\u00E9er des RRSIGs avec les deux ZSKs) ; apr\u00E8s p\u00E9riode de chevauchement, retirer l\u0027ancienne.\n- Pre-publish (KSK) : publier la nouvelle KSK dans le DNSKEY RRset, demander au parent d\u0027ajouter le DS correspondant, attendre la propagation, puis retirer l\u0027ancienne KSK et son DS.\n- In-place rollover (moins recommand\u00E9 sans chevauchement) : remplacer et attendre TTL, mais risqu\u00E9 si propagation diff\u00E9r\u00E9e.\r\n\r\n\u00C9tapes g\u00E9n\u00E9rales de planification\r\n1) Rassembler les informations : TTLs (SOA minimum, zone TTLs, DNSKEY/DNSSEC-related TTL), dur\u00E9e de validit\u00E9 des RRSIG (signature expiration), politiques du parent (delai de prise en compte des DS via registrar), et heures de maintenance autoris\u00E9es.\n2) D\u00E9finir une fen\u00EAtre de chevauchement (overlap) bas\u00E9e sur : maximum TTL utilis\u00E9 par les validateurs, dur\u00E9e de vie des signatures, d\u00E9lai de mise en place du DS chez le parent. 3) Pr\u00E9parer cl\u00E9s (g\u00E9n\u00E9ration off-line s\u00E9curis\u00E9e), proc\u00E9dures de livraison du DS au parent (API/portal), et scripts d\u0027automatisation.\n4) Pr\u00E9parer surveillance (validation externe, logs, sondes depuis plusieurs validateurs).\r\n\r\nRollover ZSK : proc\u00E9dure pas \u00E0 pas\r\n1) G\u00E9n\u00E9rer la nouvelle ZSK et conserver l\u0027ancienne.\n2) Ajouter la nouvelle ZSK au DNSKEY RRset (sans modifier le KSK). Marquer la ZSK correctement (flag: non-SEP).  \n3) Signer la zone pendant une p\u00E9riode de chevauchement : cr\u00E9er RRSIGs sign\u00E9es par les deux ZSK si possible (double-signing) ou simplement re-signer avec la nouvelle ZSK tout en conservant l\u0027ancienne signature valide jusqu\u0027\u00E0 expiration.  \n4) Attendre la p\u00E9riode de chevauchement calcul\u00E9e (voir section timings). Pendant cette p\u00E9riode, les validateurs peuvent accepter les RRSIGs sign\u00E9es par l\u0027ancienne ou la nouvelle ZSK.  \n5) Retirer l\u0027ancienne ZSK du DNSKEY RRset une fois l\u0027ancienne RRSIG expir\u00E9e et la nouvelle propagation confirm\u00E9e.  \n6) Continuer la surveillance pour d\u00E9tecter tout \u00E9chec de validation.\r\n\r\nRollover KSK : proc\u00E9dure pas \u00E0 pas (m\u00E9thode recommand\u00E9e : pre-publish / double KSK)\r\n1) G\u00E9n\u00E9rer une nouvelle KSK (s\u00E9curiser la cl\u00E9 priv\u00E9e).  \n2) Ajouter la nouvelle KSK au DNSKEY RRset dans la zone (maintenir l\u0027ancienne KSK aussi) \u2014 les deux doivent \u00EAtre publi\u00E9es simultan\u00E9ment dans la zone.  \n3) Re-signer le DNSKEY RRset (les RRSIG sur DNSKEY seront produits par la KSK(s) ; pendant overlap les validateurs verront DNSKEY contenant les deux cl\u00E9s).  \n4) Demander au parent de publier le DS correspondant \u00E0 la nouvelle KSK (par l\u0027API du registrar ou portail). Ce pas est critique : le parent doit contenir les DS des deux KSKs durant la phase de transition.  \n5) Attendre la propagation du nouveau DS chez le parent et la dur\u00E9e de chevauchement calcul\u00E9e (voir section timings). V\u00E9rifier depuis validateurs externes que la cha\u00EEne est valide avec le nouveau DS.  \n6) Une fois la p\u00E9riode de chevauchement pass\u00E9e et la suppression s\u00E9curis\u00E9e de l\u0027ancienne DS confirm\u00E9e, retirer l\u0027ancienne KSK du DNSKEY RRset.  \n7) Enfin, demander au parent de retirer l\u0027ancien DS quand il est s\u00FBr de le faire (apr\u00E8s l\u0027expiration des RRSIG et propagation).\r\n\r\nPublication des DS et synchronisation parent-enfant\r\nLe DS publi\u00E9 par le parent est la preuve de d\u00E9l\u00E9gation qui lie la zone \u00E0 son parent; il doit pointer vers la cl\u00E9 KSK (empreinte). La synchronisation implique :\n- S\u0027assurer que le DS que vous soumettez correspond exactement \u00E0 la cl\u00E9 que vous avez publi\u00E9e (m\u00EAme algorithme, m\u00EAme digest type).\n- Conna\u00EEtre les d\u00E9lais du parent (temps de prise en compte d\u0027une modification via l\u0027API ou le portail).\n- Publier les DS pour la nouvelle KSK avant de retirer l\u0027ancienne KSK, et garder le DS ancien et nouveau simultan\u00E9ment chez le parent pendant la fen\u00EAtre de chevauchement.\r\n\r\nCalculer la fen\u00EAtre de chevauchement (timing)\r\nPrincipes : la fen\u00EAtre doit couvrir le temps maximum pendant lequel un validateur peut encore utiliser des donn\u00E9es anciennes (DNSKEY, RRSIG, DS) :\n- prendre la valeur maximale des TTLs applicables (SOA MIN, TTLs des enregistrements, TTL de la section DNSKEY si distinct),\n- ajouter la dur\u00E9e de validit\u00E9 restante des signatures (RRSIG expiration) si elles ont \u00E9t\u00E9 \u00E9mises avant le rollover,\n- ajouter le d\u00E9lai administratif/propagation du parent pour la publication du DS. \nR\u00E8gle pratique : d\u00E9finir une fen\u00EAtre au moins \u00E9gale \u00E0 la plus grande des dur\u00E9es suivantes : (a) la plus grande TTL en cache sur Internet, (b) la dur\u00E9e maximale restante des RRSIGs existantes, (c) d\u00E9lai administratif pour la mise \u00E0 jour du DS chez le parent. Dans de nombreux d\u00E9ploiements, on pr\u00E9voit 2 \u00E0 3 fois la valeur maximale de TTL ou au minimum quelques heures \u00E0 plusieurs jours selon RRSIG lifetime. Toujours pr\u00E9senter des exemples chiffr\u00E9s dans votre plan.\r\n\r\nSurveillance, validation et rollback\r\nSurveillance active : effectuer des validations externes depuis plusieurs r\u00E9solveurs publics (Google, Cloudflare, ISP), checker que le DS au parent correspond, monitorer les erreurs SERVFAIL / DNSSEC validation failure. Rollback : si une erreur est d\u00E9tect\u00E9e et qu\u0027il n\u0027est pas possible de r\u00E9soudre rapidement, r\u00E9tablir l\u0027ancienne cl\u00E9 en priorit\u00E9 (r\u00E9ins\u00E9rer l\u0027ancienne KSK/ZSK et s\u0027assurer que le parent a le DS correct). Conserver des sauvegardes hors-ligne des cl\u00E9s priv\u00E9es et des proc\u00E9dures d\u0027urgence document\u00E9es.\r\n\r\nChecklist de bonne pratique\r\nAvant : tests en environnement non productif, plan de communication avec registrar, sauvegarde des cl\u00E9s.\nPendant : v\u00E9rifier horodatage/TTL, garder l\u0027ancienne cl\u00E9 active pendant la fen\u00EAtre, monitorer validateurs.\nApr\u00E8s : nettoyer anciens DS/KSK/ZSK, documenter l\u0027op\u00E9ration et enregistrer le d\u00E9roul\u00E9 pour post-mortem.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Vous g\u00E9rez une zone dont la TTL maximale est de 3600 secondes, les RRSIG existantes expirent dans 86400 secondes (24h), et le registrar indique que la mise \u00E0 jour DS prend en moyenne 2 heures. Proposez une fen\u00EAtre de chevauchement minimale raisonnable pour un KSK rollover et calculez la dur\u00E9e totale. Justifiez bri\u00E8vement.",
              "Answer": "Fen\u00EAtre minimale raisonnable : au moins 24 heures \u002B 3600 secondes \u002B 2 heures = 24h \u002B 1h \u002B 2h = 27 heures (\u2248 97 200 secondes).",
              "Explanation": "La fen\u00EAtre doit couvrir la dur\u00E9e restante des RRSIG (24h) afin que les signataires ant\u00E9rieurs restent valides, plus la TTL maximale (1h) pour que les enregistrements DNSKEY et autres RRsets mis \u00E0 jour se propagent, et ajouter le d\u00E9lai administratif du parent (2h). On peut arrondir vers le haut (p.ex. 48 h) pour ajouter marge de s\u00E9curit\u00E9."
            },
            {
              "Instruction": "Expliquez bri\u00E8vement les \u00E9tapes \u00E0 suivre pour effectuer un rollover de ZSK sans jamais impliquer le parent. Donnez un ordre d\u0027ex\u00E9cution succinct (4 \u00E0 6 \u00E9tapes).",
              "Answer": "1) G\u00E9n\u00E9rer la nouvelle ZSK et l\u0027ajouter au DNSKEY RRset. 2) Signer la zone avec les deux ZSK (double-signing) ou re-signer avec la nouvelle ZSK et conserver les anciennes signatures jusqu\u0027\u00E0 expiration. 3) Attendre la fen\u00EAtre de chevauchement calcul\u00E9e pour que les caches et validateurs acceptent la nouvelle signature. 4) Retirer l\u0027ancienne ZSK du DNSKEY RRset apr\u00E8s expiration des RRSIG et v\u00E9rifications. 5) Continuer surveillance.",
              "Explanation": "Le ZSK n\u0027affecte pas le DS chez le parent, donc tout se g\u00E8re c\u00F4t\u00E9 zone. Double-signing assure qu\u0027un maximum de validateurs acceptent les signatures pendant la transition."
            },
            {
              "Instruction": "Pendant un KSK rollover, vous avez publi\u00E9 la nouvelle KSK dans la zone et demand\u00E9 au parent de publier le DS correspondant. Apr\u00E8s 3 heures, plusieurs validateurs renvoient des erreurs de validation ; que v\u00E9rifiez en priorit\u00E9 (liste de 4 points) et quelle action de rem\u00E9diation imm\u00E9diate pourriez-vous effectuer si vous suspectez une erreur de DS c\u00F4t\u00E9 parent ?",
              "Answer": "V\u00E9rifications prioritaires : 1) V\u00E9rifier que le DS publi\u00E9 chez le parent correspond exactement au digest de la KSK publi\u00E9e (algorithme et type de digest). 2) Contr\u00F4ler que la nouvelle KSK est bien dans le DNSKEY RRset de la zone et que les RRSIG sur DNSKEY sont valides. 3) V\u00E9rifier la propagation (caches TTL) et logs du registrar sur la modification du DS. 4) Tester depuis plusieurs valideurs externes pour diff\u00E9rencier probl\u00E8me local vs global. Action imm\u00E9diate de rem\u00E9diation : demander au parent de restaurer temporairement l\u0027ancien DS (ou s\u0027assurer que l\u0027ancien DS est toujours pr\u00E9sent) pour r\u00E9tablir la cha\u00EEne de confiance pendant l\u0027investigation.",
              "Explanation": "Le probl\u00E8me le plus courant est une mauvaise empreinte DS publi\u00E9e. Restaurer l\u0027ancien DS (ou s\u0027assurer qu\u0027il est toujours pr\u00E9sent) permet souvent de r\u00E9tablir la validation pendant que vous corrigez le DS erron\u00E9."
            }
          ]
        },
        {
          "Title": "Gestion des incidents : retrait/rectification d\u0027un DS erron\u00E9",
          "Summary": "Proc\u00E9dure d\u0027urgence pour corriger un DS publi\u00E9 incorrectement : coordination avec le registrar, suppression ou mise \u00E0 jour, communication et tests post-correction.",
          "EstimatedMinutes": 60,
          "LearningObjectives": [
            "Comprendre les cons\u00E9quences d\u0027un DS (Delegation Signer) publi\u00E9 incorrectement sur la cha\u00EEne de confiance DNSSEC.",
            "Savoir identifier rapidement si la correction doit \u00EAtre une suppression temporaire du DS ou une mise \u00E0 jour corrective.",
            "Ma\u00EEtriser la proc\u00E9dure d\u0027urgence pour coordonner un changement DS avec le registrar ou le registre (registry).",
            "Savoir pr\u00E9parer et transmettre une demande claire et s\u00E9curis\u00E9e au registrar/registry pour suppression ou mise \u00E0 jour de DS.",
            "Conduire les tests post-correction pour valider la r\u00E9solution, la propagation et la restauration de la cha\u00EEne de confiance.",
            "Mettre en place une communication interne et externe appropri\u00E9e et capitaliser sur les retours d\u0027incidents pour am\u00E9liorer la proc\u00E9dure."
          ],
          "Content": "Contexte et risques d\u0027un DS erron\u00E9\r\nUn enregistrement DS incorrect dans la zone parente (registry/registrar) provoque une rupture de la cha\u00EEne de confiance DNSSEC : les validateurs DNSSEC d\u00E9tecteront une incoh\u00E9rence entre le DS publi\u00E9 et les DNSKEY RRs du domaine et refuseront de r\u00E9soudre les enregistrements, entra\u00EEnant des interruptions visibles pour les clients utilisant des validateurs stricts. Il faut traiter rapidement car l\u0027impact est fonction de l\u0027adoption de validateurs chez les clients et des TTLs en cache.\r\n\r\nD\u00E9tection et analyse initiale (triage)\r\n\u00C9tapes imm\u00E9diates :\n- Confirmer l\u0027incident : interroger le parent pour le DS (ex. dig @a.root-servers.net domain.tld DS \u002Bshort \u002Bnorec) et l\u0027autorit\u00E9 du domaine pour les DNSKEY et RRSIG.\n- Identifier le sympt\u00F4me : erreur d\u0027algorithme, digest erron\u00E9, mauvais keytag, cl\u00E9 compromise, ou DS publi\u00E9 par erreur (ex. entr\u00E9e test).\n- \u00C9valuer l\u0027impact : mesurer le taux d\u0027\u00E9chec aupr\u00E8s de plusieurs r\u00E9solveurs publics (8.8.8.8, 1.1.1.1, 9.9.9.9) et logs internes pour estimer la gravit\u00E9.\n- V\u00E9rifier responsabilit\u00E9s : qui a autorit\u00E9 pour modifier le DS (registrar contractuel du client ou le registre TLD).\r\n\r\nD\u00E9cider : suppression temporaire ou mise \u00E0 jour corrective\r\nCrit\u00E8res de choix :\n- Suppression temporaire du DS (retrait) : utilise\u0301e quand il faut r\u00E9tablir rapidement la r\u00E9solution et que l\u0027absence temporaire de validation DNSSEC est acceptable. Avantage : restauration rapide des r\u00E9ponses (zone consid\u00E9r\u00E9e comme \u0027insecure\u0027 par validateurs). Inconv\u00E9nient : perte de la validation DNSSEC jusqu\u0027\u00E0 r\u00E9tablissement.\n- Mise \u00E0 jour du DS : pr\u00E9f\u00E9rable si on poss\u00E8de le bon digest (ex. on a la bonne DNSKEY) ou si on doit pr\u00E9server la validation. C\u0027est la solution la plus s\u00FBre c\u00F4t\u00E9 s\u00E9curit\u00E9 mais peut \u00EAtre plus lente si la bonne DS doit \u00EAtre g\u00E9n\u00E9r\u00E9e, v\u00E9rifi\u00E9e et propag\u00E9e.\n- Si la cl\u00E9 est compromise : ne pas mettre \u00E0 jour avec une cl\u00E9 compromise ; g\u00E9n\u00E9rer une nouvelle paire, signer la zone, publier le nouveau DNSKEY puis publier/mettre \u00E0 jour le DS selon la proc\u00E9dure de rollover (double-signing si possible).\nD\u00E9cidez en fonction de l\u0027urgence, de la preuve de possession et des TTLs.\r\n\r\nCoordination avec le registrar/registry\r\nPr\u00E9parer les \u00E9l\u00E9ments avant contact : nom de domaine, identifiant client/compte, ticket/incident ID interne, action demand\u00E9e (supprimer/ajouter/mettre \u00E0 jour DS), et les valeurs DS exactes (key tag, algorithme, digest type, digest).\nCanaux et bonnes pratiques :\n- Utiliser le canal officiel (portail client/CRM) et indiquer clairement \u0027EMERGENCY\u0027 si disponible.\n- Authentifier la requ\u00EAte : suivre la proc\u00E9dure du registrar (EPP authInfo, ticket s\u00E9curis\u00E9, signature num\u00E9rique ou appel sur un num\u00E9ro enregistr\u00E9).\n- Si le registrar ne peut intervenir (ou si la modification concerne le registre), escalader vers le registry avec m\u00EAmes justificatifs.\n- Demander confirmation \u00E9crite de la modification et horodatage (UTC), et un identifiant de transaction.\n- Conserver tout \u00E9change pour audit.\r\n\r\nActions techniques : suppression et mise \u00E0 jour de DS\r\nSuppression :\n- Demander la suppression pure et simple de l\u0027entr\u00E9e DS correspondante au key tag erron\u00E9.\n- Conna\u00EEtre l\u0027effet : les validateurs cesseront d\u0027attendre validation et traiteront la zone comme \u0027insecure\u0027.\nMise \u00E0 jour :\n- Si on publie un DS correct, fournir key tag, algorithme, digest type et digest (ex. SHA-256) exacts.\n- Si nouvelle cl\u00E9 KSK : g\u00E9n\u00E9rer la paire (KSK/ZSK selon politique), signer la zone, publier le nouveau DNSKEY, attendre la publication autoritaire, puis transmettre le DS au registrar (strat\u00E9gie de rollover suivant bonnes pratiques, p.ex. double-publishing et d\u00E9lai de propagation).\nConsid\u00E9rations TTL/Caching :\n- Le parent applique un TTL sur le DS ; il faut tenir compte de l\u0027expiration de caches pour estimer le d\u00E9lai de pleine propagation.\n- Si disponible, demander au registrar d\u0027appliquer un TTL court en situation d\u0027urgence (certains registrars le permettent).\r\n\r\nCommunications : interne et externe\r\nInterne : alerter l\u0027\u00E9quipe de r\u00E9seau/DNS, support client et direction si impact significatif. Documenter actions et d\u00E9cisions en temps r\u00E9el.\nExterne : informer le registrar et (si n\u00E9cessaire) clients/partenaires sur impact et ETA de r\u00E9solution. Messages recommand\u00E9s : expliquer l\u0027impact (interruption pour clients avec validateurs stricts), actions entreprises (suppression DS/mise \u00E0 jour, tests) et contact pour suivi. Garder le ton factuel et \u00E9viter d\u0027exposer d\u00E9tails sensibles (ex. cl\u00E9s priv\u00E9es).\r\n\r\nTests post-correction et validation\r\nV\u00E9rifications imm\u00E9diates :\n- Interroger le parent pour v\u00E9rifier la modification : dig @parent DS domain.tld \u002Bshort\n- V\u00E9rifier les DNSKEY chez l\u0027autorit\u00E9 du domaine : dig @ns1.domain.tld domain.tld DNSKEY \u002Bmulti\n- Tester la cha\u00EEne de confiance : utiliser des validateurs publics et outils locaux (ex. dig \u002Bdnssec, drill \u002Bdnssec, unbound-control, getdns) pour voir si la validation est correcte (RRSIG valides, AD bit pour r\u00E9solveurs avec cache positif selon cas).\n- Outils en ligne : DNSViz, Verisign Labs, Zonemaster pour visualiser la cha\u00EEne de confiance et d\u00E9tecter r\u00E9sidus d\u0027erreur.\nPropagation et monitoring :\n- Contr\u00F4ler depuis plusieurs endpoints g\u00E9ographiques et r\u00E9solveurs publics.\n- Surveiller logs et tickets d\u0027incidents pendant 48\u201372 heures pour d\u00E9tecter r\u00E9surgences.\n- Confirmer par \u00E9crit avec le registrar la date/heure effective et l\u0027ID de changement.\r\n\r\nSc\u00E9narios particuliers et bonnes pratiques post-incident\r\nSc\u00E9narios : key rollover non pr\u00E9vu, DS publi\u00E9 pour cl\u00E9 de test, registre non coop\u00E9ratif.\nBonnes pratiques :\n- Avoir contacts d\u0027urgence document\u00E9s chez votre registrar et, si possible, chez le registry du TLD.\n- Automatiser la g\u00E9n\u00E9ration de DS (scripts s\u00FBrs) et v\u00E9rifier les valeurs avant transmission.\n- Tenir un playbook d\u0027incident DNSSEC avec checklists (responsables, \u00E9tapes, messages types).\n- Effectuer r\u00E9guli\u00E8rement des exercices de rollover et des tests de restauration.\n- Apr\u00E8s l\u0027incident : r\u00E9aliser un post-mortem, mise \u00E0 jour du playbook, formation des \u00E9quipes et, si n\u00E9cessaire, am\u00E9lioration des contr\u00F4les (validation humaine/automatis\u00E9e avant publication de DS).\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Vous d\u00E9couvrez qu\u0027un DS publi\u00E9 pour example.tld a un digest erron\u00E9. Vous avez la bonne DNSKEY valide sur les serveurs autoritaires. D\u00E9crivez l\u0027action prioritaire \u00E0 demander au registrar et justifiez votre choix.",
              "Answer": "Demander au registrar de remplacer le DS erron\u00E9 par le digest correct (update DS) en fournissant key tag, algorithm, digest type et digest exacts, et exiger une confirmation \u00E9crite horodat\u00E9e.",
              "Explanation": "Puisque la DNSKEY valide existe d\u00E9j\u00E0 sur l\u0027autorit\u00E9 et la cl\u00E9 n\u0027est pas compromise, la meilleure action pr\u00E9serve la validation DNSSEC en corrigeant la divergence entre parent et enfant. La mise \u00E0 jour restaure la cha\u00EEne de confiance sans rendre la zone \u0027insecure\u0027. Fournir les valeurs exactes \u00E9vite erreurs de retranscription et la confirmation permet de tracer l\u0027op\u00E9ration."
            },
            {
              "Instruction": "Sc\u00E9nario d\u0027urgence : la cl\u00E9 a \u00E9t\u00E9 compromise et un DS incorrect (ou malveillant) a \u00E9t\u00E9 publi\u00E9. Vous devez imm\u00E9diatement restaurer la r\u00E9solution. Quelle strat\u00E9gie suivez-vous et quelles sont les cons\u00E9quences ?",
              "Answer": "Proc\u00E9der d\u0027abord \u00E0 un rollover de cl\u00E9 s\u00E9curis\u00E9 : g\u00E9n\u00E9rer une nouvelle paire KSK/ZSK, signer la zone, publier la nouvelle DNSKEY, puis demander la publication du nouveau DS chez le parent. Si la publication du nouveau DS prend trop de temps et l\u0027impact est critique, demander temporairement la suppression du DS existant (retrait) pour r\u00E9tablir la r\u00E9solution, puis publier le nouveau DS d\u00E8s que possible.",
              "Explanation": "Cl\u00E9 compromise interdit de r\u00E9utiliser la cl\u00E9 compromise dans un DS. L\u0027approche s\u00E9curis\u00E9e est cr\u00E9er et publier une nouvelle cl\u00E9, puis mettre \u00E0 jour le parent. Si le d\u00E9lai est inacceptable, la suppression temporaire du DS peut restaurer la r\u00E9solution (au prix de l\u0027absence de validation DNSSEC), puis on r\u00E9tablit la validation en publiant le nouveau DS une fois disponible."
            },
            {
              "Instruction": "R\u00E9digez le contenu essentiel d\u0027une demande d\u0027urgence au registrar pour supprimer un DS. Quels champs et quelles preuves devez-vous inclure ?",
              "Answer": "Contenu essentiel : identifiant de compte/nom de domaine (example.tld), action demand\u00E9e (SUPPRESSION du DS), r\u00E9f\u00E9rence au key tag erron\u00E9 (si connu), raison (incident DNSSEC urgent, impact sur r\u00E9solution), preuve d\u0027autorit\u00E9 (ID client, r\u00E9f\u00E9rence contractuelle, signature ou num\u00E9ro d\u0027authInfo EPP, et contact t\u00E9l\u00E9phonique autoris\u00E9), clair indicateur d\u0027urgence et demande de confirmation \u00E9crite horodat\u00E9e et ID de transaction.",
              "Explanation": "Le registrar exige des preuves d\u0027autorit\u00E9 pour \u00E9viter modifications non autoris\u00E9es. Fournir account ID et moyen d\u0027authentification facilite le traitement rapide. Indiquer pr\u00E9cis\u00E9ment l\u0027action et le key tag r\u00E9duit risques d\u0027erreur humaine. Demander confirmation garantit tra\u00E7abilit\u00E9 et cl\u00F4ture de proc\u00E9dure."
            }
          ]
        },
        {
          "Title": "Cas sp\u00E9ciaux : racines, cross-signing et conflits de confiance",
          "Summary": "Impact des cross-signatures, certificats racine ou changements de politique de la racine sur la cha\u00EEne; comment analyser et r\u00E9agir \u00E0 ces sc\u00E9narios particuliers.",
          "EstimatedMinutes": 60,
          "LearningObjectives": [
            "Comprendre le r\u00F4le d\u0027une racine (trust anchor) et la diff\u00E9rence entre certificat racine, interm\u00E9diaire et certificat de fin (end-entity).",
            "Expliquer ce qu\u0027est une cross-signature (cross-signing), pourquoi elle est utilis\u00E9e et quels effets elle peut avoir sur la validation de cha\u00EEne.",
            "Identifier comment les changements li\u00E9s aux certificats racine (ajout, retrait, changement de politique, expiration) affectent la capacit\u00E9 des clients \u00E0 \u00E9tablir une cha\u00EEne de confiance.",
            "Savoir analyser une cha\u00EEne de certificats en pr\u00E9sence de cross-signatures ou de conflits de confiance et d\u00E9terminer quelle cha\u00EEne est utilis\u00E9e par un client.",
            "D\u00E9finir des mesures de r\u00E9action et d\u0027att\u00E9nuation adapt\u00E9es (p.ex. mise \u00E0 jour du magasin de confiance, revocation, communication, compensations techniques) lors d\u0027un incident li\u00E9 \u00E0 la racine ou aux cross-signatures.",
            "Appliquer des contr\u00F4les et des bonnes pratiques pour limiter les risques li\u00E9s aux changements de racine et aux cross-signatures (pinning, CT, tests automatiques, politiques de mise \u00E0 jour, etc.)."
          ],
          "Content": "1. Concepts de base : racines, interm\u00E9diaires et end-entity\r\nUne racine (trust anchor) est un certificat auto-sign\u00E9 ou autrement trait\u00E9 comme source finale de confiance par un magasin local de certificats. Les certificats interm\u00E9diaires sont \u00E9mis par une racine ou par un autre interm\u00E9diaire et servent \u00E0 d\u00E9l\u00E9guer la capacit\u00E9 d\u0027\u00E9mettre des certificats d\u0027entit\u00E9 finale (end-entity). La validation d\u0027une cha\u00EEne consiste \u00E0 construire une suite de certificats allant du certificat de l\u0027entit\u00E9 finale jusqu\u0027\u00E0 une racine reconnue et \u00E0 v\u00E9rifier les signatures, contraintes et politiques de chacun des maillons. Il est crucial de distinguer l\u0027existence d\u0027un certificat racine (dans un magasin) et la pr\u00E9sence d\u0027une signature cryptographique reliant un interm\u00E9diaire \u00E0 cette racine.\r\n\r\n2. Qu\u0027est-ce que la cross-signature et pourquoi l\u0027utiliser ?\r\nLa cross-signature consiste \u00E0 faire signer un m\u00EAme certificat (souvent un interm\u00E9diaire) par deux autorit\u00E9s distinctes. Objectifs courants : faciliter la transition entre racines (permettre aux clients qui font confiance \u00E0 une ancienne racine et \u00E0 une nouvelle racine d\u0027accepter les m\u00EAmes certificats), assurer la compatibilit\u00E9 avec des magasins de confiance h\u00E9t\u00E9rog\u00E8nes (navigateurs, OS), ou augmenter la r\u00E9silience (plusieurs chemins valides). Techniquement, cela produit plusieurs cha\u00EEnes possibles jusqu\u0027\u00E0 des racines diff\u00E9rentes. Les cross-signatures peuvent \u00EAtre temporaires (migration) ou persistantes pour compatibilit\u00E9.\r\n\r\n3. Impact des cross-signatures sur la construction et la v\u00E9rification de la cha\u00EEne\r\nLorsqu\u0027un client construit une cha\u00EEne, il peut trouver plusieurs chemins valides allant du certificat final vers diff\u00E9rentes racines. Le comportement du client d\u00E9pend de son impl\u00E9mentation : certains choisissent la cha\u00EEne la plus courte, d\u0027autres la plus v\u00E9rifiable selon contraintes (policies, nameConstraints, keyUsage), d\u0027autres encore suivent l\u0027ordre des certificats fournis par le serveur. Les cross-signatures peuvent :  - rendre disponible un chemin alternatif si une racine est retir\u00E9e ou distrusted;  - introduire des risques (exposition de la m\u00EAme identit\u00E9 via une racine moins stricte);  - compliquer la d\u00E9tection de la racine r\u00E9ellement utilis\u00E9e pour l\u0027audit. Une cross-signature expir\u00E9e ou r\u00E9voqu\u00E9e peut casser un ou plusieurs chemins.\r\n\r\n4. Changements de politique ou retrait d\u0027une racine : cons\u00E9quences courantes\r\nLes changements au niveau d\u0027une racine peuvent \u00EAtre : retrait (distrust) d\u0027un magasin, modification des r\u00E8gles d\u0027acceptation (p.ex. dur\u00E9e maximale de signature), expiration d\u0027un certificat racine, ou modification des algorithmes accept\u00E9s. Cons\u00E9quences :  - cha\u00EEnes qui reposaient sur cette racine deviennent invalides pour les clients ayant appliqu\u00E9 la modification ;  - si un interm\u00E9diaire est cross-sign\u00E9 par une deuxi\u00E8me racine, les clients qui font confiance \u00E0 cette seconde racine peuvent continuer \u00E0 valider ;  - clients non mis \u00E0 jour peuvent accepter des cha\u00EEnes d\u00E9sormais consid\u00E9r\u00E9es comme non conformes ;  - incoh\u00E9rences entre plateformes (un OS distruste une racine, un autre non) m\u00E8nent \u00E0 des comportements divergents.\r\n\r\n5. Comment analyser une situation de cross-signature ou de conflit de confiance\r\n\u00C9tapes pratiques pour analyser : 1) Collecter la cha\u00EEne fournie par le serveur et tous les certificats interm\u00E9diaires disponibles ; 2) Extraire toutes les signatures et chemins possibles vers les racines pr\u00E9sentes dans les diff\u00E9rents magasins ; 3) Identifier les racines possibles et v\u00E9rifier lesquelles sont effectivement marqu\u00E9es comme \u0027trusted\u0027 par la plateforme cible ; 4) V\u00E9rifier constraints et extensions (BasicConstraints, KeyUsage, ExtendedKeyUsage, NameConstraints, PolicyConstraints) sur chaque chemin ; 5) V\u00E9rifier revocation (CRL, OCSP) et dates (validFrom/validTo) pour chaque certificat du chemin ; 6) Reproduire la validation sur la plateforme cible (ou \u00E9mulation) pour observer laquelle des cha\u00EEnes est choisie. Outils utiles : openssl, certutil, gnutls-cli, sslyze, clients de test (navigateur avec logs), et scripts qui interrogent diff\u00E9rents magasins de confiance.\r\n\r\n6. R\u00E9actions et strat\u00E9gies d\u0027att\u00E9nuation\r\nEn fonction du diagnostic, les r\u00E9ponses possibles : - Si une racine a \u00E9t\u00E9 retir\u00E9e et bloque le trafic : utiliser un cross-signature alternatif (si disponible), re-patcher la cha\u00EEne envoy\u00E9e par le serveur pour favoriser la cha\u00EEne valide, ou obtenir un nouveau certificat sign\u00E9 par une racine accept\u00E9e. - Mettre \u00E0 jour les magasins de confiance (OS, navigateurs) si la correction est l\u00E9gitime et d\u00E9ploy\u00E9e ; coordonner la communication avec les fournisseurs. - Si une cross-signature cr\u00E9e un risque de s\u00E9curit\u00E9 (p.ex. racine plus permissive) : envisager le d\u00E9ploiement d\u0027une nouvelle CA avec politique stricte, ou utiliser des m\u00E9canismes compl\u00E9mentaires (Certificate Transparency, pinning, MTA-STS pour mail). - Pour incident urgent, action client-side temporaire : ajout manuel d\u0027une racine temporaire, white-listing/pinning, mais attention aux risques et au besoin de retrait ult\u00E9rieur. - Documenter l\u0027incident, journaux de validation, et plan de rem\u00E9diation (mise \u00E0 jour de certificats, renouvellement, r\u00E9vocation s\u00E9lective).\r\n\r\n7. Bonnes pratiques et pr\u00E9vention\r\nPr\u00E9venir les probl\u00E8mes li\u00E9s aux racines et cross-signatures :  - Planifier les migrations de racine avec cross-signatures temporaires et tests multi-plateformes ;  - Minimiser la dur\u00E9e d\u0027existence de cross-signatures si elles augmentent la surface d\u0027attaque ;  - Mettre en place des tests automatis\u00E9s de validation de cha\u00EEnes sur toutes les plateformes cibles lors des d\u00E9ploiements ;  - Utiliser Certificate Transparency et surveiller les \u00E9missions non souhait\u00E9es ;  - Tenir \u00E0 jour des proc\u00E9dures d\u0027urgence (playbook) pour retrait/ajout de racine et communications aux clients ;  - \u00C9viter les d\u00E9pendances excessives \u00E0 une unique racine sans plan de repli.\r\n\r\n8. Cas concrets et sc\u00E9narios types\r\nExemples de sc\u00E9narios :  A) Migration de racine : une CA \u00E9met un interm\u00E9diaire sign\u00E9 par l\u0027ancienne racine R_old et la nouvelle R_new. Les clients anciens utilisent R_old, les clients \u00E0 jour utilisent R_new. V\u00E9rifier que les deux chemins respectent les constraints.  B) Retrait de racine par un navigateur : les sites qui ne proposent que la cha\u00EEne via cette racine voient des erreurs; solution : reconfigurer pour fournir la cha\u00EEne vers une racine encore approuv\u00E9e ou obtenir un certificat via une autre CA.  C) Cross-signature expir\u00E9e : un serveur qui fournissait une cha\u00EEne bas\u00E9e sur une cross-signature expir\u00E9e doit soit fournir un interm\u00E9diaire diff\u00E9rent, soit renouveler la signature.  D) Conflit de politiques : m\u00EAme identifiant (subject) \u00E9mis par deux racines avec politiques diff\u00E9rentes; les applications sensibles doivent appliquer contr\u00F4les additionnels (pinning, v\u00E9rification de policyOIDs).\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Vous recevez d\u0027un serveur la cha\u00EEne suivante : leaf -\u003E I1 -\u003E I2. I2 est cross-sign\u00E9 par R1 et R2 (deux racines distinctes). Sur la machine cliente, R1 est trusted, R2 ne l\u0027est pas. D\u00E9crivez les \u00E9tapes pour d\u00E9terminer si la connexion sera valid\u00E9e, et quelle racine sera utilis\u00E9e.",
              "Answer": "Le client construira possiblement deux chemins : leaf-I1-I2-R1 et leaf-I1-I2-R2. Puisque R1 est marqu\u00E9 trusted sur la machine et R2 ne l\u0027est pas, le chemin leaf-I1-I2-R1 pourra \u00EAtre accept\u00E9 si toutes les signatures, contraintes et dates sont valides, tandis que leaf-I1-I2-R2 sera rejet\u00E9 faute de trust. La connexion sera valid\u00E9e par la racine R1 si le chemin est complet et conforme.",
              "Explanation": "La validation requiert un trust anchor pr\u00E9sent dans le magasin local. La cross-signature offre deux chemins potentiels, mais seul le chemin menant \u00E0 une racine trusted (R1) pourra aboutir. Il faut aussi v\u00E9rifier revocation, basicConstraints et autres contraintes sur chaque certificat du chemin pour s\u0027assurer que R1 est effectivement utilisable."
            },
            {
              "Instruction": "Lors d\u0027une mise \u00E0 jour de politique, une racine R est d\u00E9pr\u00E9ci\u00E9e (distrust\u00E9e) par un fournisseur majeur. Votre service d\u00E9pendait d\u0027un interm\u00E9diaire sign\u00E9 uniquement par R. Quels sont les actions prioritaires et l\u0027ordre recommand\u00E9 pour r\u00E9tablir la connectivit\u00E9 pour la majorit\u00E9 des clients ?",
              "Answer": "1) Identifier les clients affect\u00E9s et la port\u00E9e du retrait. 2) Obtenir imm\u00E9diatement un interm\u00E9diaire ou certificat sign\u00E9 par une racine encore largement trusted (via cross-signature d\u00E9j\u00E0 existante ou nouvel issuance). 3) Reconfigurer le serveur pour pr\u00E9senter la nouvelle cha\u00EEne compl\u00E8te (incluir le bon interm\u00E9diaire). 4) Pour les clients non corrigibles rapidement, communiquer les recommandations (mise \u00E0 jour, patch) et, si n\u00E9cessaire, fournir une solution temporaire document\u00E9e (p.ex. instructions de mise \u00E0 jour du magasin de confiance). 5) Mettre en place un suivi et plan de long terme (renouvellement, \u00E9viter d\u00E9pendance unique).",
              "Explanation": "La priorit\u00E9 est de r\u00E9tablir la compatibilit\u00E9 client en fournissant une cha\u00EEne qui m\u00E8ne \u00E0 une racine accept\u00E9e. Modifier le serveur (fournir la bonne cha\u00EEne) est g\u00E9n\u00E9ralement la mesure la plus rapide. Les changements c\u00F4t\u00E9 client (mise \u00E0 jour du store) prennent plus de temps et doivent \u00EAtre coordonn\u00E9s. La communication est essentielle pour r\u00E9duire l\u0027impact."
            },
            {
              "Instruction": "Vous observez des diff\u00E9rences de comportement entre deux navigateurs : l\u0027un accepte le certificat d\u0027un site et l\u0027autre le rejette. Les certificats fournis par le site sont leaf -\u003E I. L\u0027interm\u00E9diaire I est sign\u00E9 par une racine R_new; auparavant I \u00E9tait cross-sign\u00E9 par une ancienne racine R_old. Comment investiguer et expliquer la divergence ?",
              "Answer": "V\u00E9rifier quel magasin de racines chaque navigateur utilise et si R_new et/ou R_old y figurent. Examiner si le serveur fournit la bonne cha\u00EEne (incluant \u00E9ventuellement le cross-signed I). Tester chaque navigateur en mode debug/log pour obtenir la cha\u00EEne r\u00E9ellement construite. La divergence est probablement due au fait que le navigateur accept\u00E9 a R_new dans son magasin ou construit un chemin via une cross-signature pr\u00E9sente, tandis que l\u0027autre navigateur n\u0027a pas R_new et n\u0027utilise pas une cross-signature fournie ou ne l\u0027accepte pas.",
              "Explanation": "Les navigateurs ont des magasins de confiance et algorithmes de path-building diff\u00E9rents. Si le serveur ne fournit pas tous les interm\u00E9diaires n\u00E9cessaires, certains navigateurs peuvent retrouver un chemin alternatif via leur magasin, d\u0027autres non. Il faut donc v\u00E9rifier \u00E0 la fois la cha\u00EEne r\u00E9seau (ce que le serveur envoie) et l\u0027\u00E9tat des magasins locaux."
            },
            {
              "Instruction": "Donnez une checklist technique pour analyser rapidement un incident o\u00F9 plusieurs clients signalent des erreurs de certificat apr\u00E8s une mise \u00E0 jour OS. Quels \u00E9l\u00E9ments v\u00E9rifier dans l\u0027ordre ?",
              "Answer": "Checklist recommand\u00E9e : 1) Reproduire l\u0027erreur sur un client impact\u00E9 et r\u00E9cup\u00E9rer le message d\u0027erreur exact. 2) R\u00E9cup\u00E9rer la cha\u00EEne fournie par le serveur (tcpdump/openssl s_client -showcerts). 3) Inspecter les magasins de confiance du client (pr\u00E9sence/absence de la racine concern\u00E9e). 4) V\u00E9rifier dates et signatures des certificats, contraintes (BasicConstraints, KeyUsage, NameConstraints). 5) V\u00E9rifier statut de r\u00E9vocation (OCSP/CRL). 6) Tester la validation sur un environnement non mis \u00E0 jour pour comparer. 7) V\u00E9rifier si une cross-signature ou une cha\u00EEne alternative existe. 8) Consulter logs syst\u00E8me (mises \u00E0 jour r\u00E9centes, bulletin OS) et communiquer avec le fournisseur si n\u00E9cessaire.",
              "Explanation": "L\u0027ordre commence par la reproductibilit\u00E9 et la collecte de preuves, puis examine la cha\u00EEne r\u00E9seau, l\u0027\u00E9tat du magasin de confiance et la conformit\u00E9 des certificats. Comparer avec un environnement non affect\u00E9 aide \u00E0 isoler si la cause vient d\u0027une mise \u00E0 jour du client (retrait/d\u00E9pr\u00E9ciation d\u0027une racine) ou du serveur."
            }
          ]
        },
        {
          "Title": "Bonnes pratiques op\u00E9rationnelles et maintenance continue",
          "Summary": "Politiques de sauvegarde des cl\u00E9s, audits r\u00E9guliers, automatisation des renouvellements, proc\u00E9dures de communication et formation des \u00E9quipes pour assurer la r\u00E9silience.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Comprendre les principes et exigences d\u0027une politique de sauvegarde et de r\u00E9cup\u00E9ration des cl\u00E9s cryptographiques",
            "Savoir planifier et conduire des audits r\u00E9guliers de la cha\u00EEne de confiance et interpr\u00E9ter leurs r\u00E9sultats",
            "Automatiser les processus de renouvellement et de d\u00E9ploiement des certifiats/keys pour r\u00E9duire les erreurs humaines",
            "\u00C9tablir des proc\u00E9dures de communication et de gestion d\u0027incidents adapt\u00E9es en cas de compromission ou d\u0027erreur op\u00E9rationnelle",
            "Mettre en place un programme de formation et d\u0027\u00E9valuation des \u00E9quipes pour maintenir la r\u00E9silience op\u00E9rationnelle"
          ],
          "Content": "Introduction : enjeux de l\u0027exploitation et de la maintenance\r\nLa s\u00E9curit\u00E9 d\u0027une cha\u00EEne de confiance d\u00E9pend autant de sa conception cryptographique que de la rigueur op\u00E9rationnelle qui l\u0027entoure. Cette section pose le cadre : disponibilit\u00E9 des cl\u00E9s, int\u00E9grit\u00E9, tra\u00E7abilit\u00E9 des op\u00E9rations, r\u00E9p\u00E9tabilit\u00E9 des proc\u00E9dures et capacit\u00E9 de r\u00E9cup\u00E9ration apr\u00E8s incident. L\u0027objectif est de minimiser les erreurs humaines, d\u0027assurer la continuit\u00E9 des services et de maintenir la confiance des parties prenantes.\r\n\r\nPolitiques de sauvegarde des cl\u00E9s\r\nD\u00E9finir une politique claire qui couvre : quelles cl\u00E9s sauvegarder (racines, autorit\u00E9s interm\u00E9diaires, cl\u00E9s de transaction), formats et standards de sauvegarde (PKCS#12, HSM export formats non expos\u00E9s, etc.), lieux de stockage (HSM, modules TPM, coffres physiques, services de coffre-fort num\u00E9rique), cryptage des sauvegardes et contr\u00F4le des acc\u00E8s. Pr\u00E9ciser les fr\u00E9quences (ex : apr\u00E8s toute modification critique), les responsabilit\u00E9s (propri\u00E9taire de cl\u00E9, administrateur de sauvegarde), et les processus de rotation et destruction s\u00E9curis\u00E9e. Int\u00E9grer la notion de sauvegardes hors site et de redondance g\u00E9ographique, ainsi que la gestion des d\u00E9pendances (ex : mots de passe de sauvegarde, splits secret / Shamir).\r\n\r\nContr\u00F4le d\u0027acc\u00E8s et s\u00E9paration des devoirs\r\nAppliquer le principe du moindre privil\u00E8ge et la s\u00E9paration des fonctions : qui peut g\u00E9n\u00E9rer, sauvegarder, restaurer, activer ou r\u00E9voquer une cl\u00E9 ? Utiliser l\u0027authentification forte, l\u0027approbation multi-signature pour op\u00E9rations sensibles, et des journaux d\u0027audit immuables. Documenter les r\u00F4les (custodian, approver, operator) et impl\u00E9menter workflows d\u0027approbation pour les op\u00E9rations \u00E0 risque.\r\n\r\nAudits r\u00E9guliers et revues de conformit\u00E9\r\nPlanifier des audits p\u00E9riodiques (techniques et processus) pour v\u00E9rifier la conformit\u00E9 aux politiques : revues de configuration, v\u00E9rification des acc\u00E8s, tests d\u0027int\u00E9grit\u00E9 des sauvegardes, revues des certificats et leur validit\u00E9, logique de r\u00E9vocation. Combiner audits internes fr\u00E9quents et audits externes ind\u00E9pendants annuels ou biannuels. D\u00E9finir indicateurs cl\u00E9s (ex : % de cl\u00E9s avec sauvegarde v\u00E9rifi\u00E9e, d\u00E9lais moyens de renouvellement, nombre d\u0027incidents d\u00E9tect\u00E9s) et processus de rem\u00E9diation prioris\u00E9e.\r\n\r\nAutomatisation des renouvellements et d\u00E9ploiements\r\nAutomatiser le cycle de vie des certificats et cl\u00E9s pour r\u00E9duire les pannes li\u00E9es \u00E0 l\u0027expiration et les erreurs manuelles. Mettre en place des pipelines CI/CD s\u00E9curis\u00E9s pour le d\u00E9ploiement des certificats, int\u00E9gration d\u0027APIs de gestion de certificats (ACME, PKI management), et outils d\u0027orchestration pour mise \u00E0 jour en temps r\u00E9el. Impl\u00E9menter surveillance et alerting (ex : alertes \u00E0 30/14/7 jours avant expiration), et tests automatis\u00E9s de d\u00E9ploiement pour valider la compatibilit\u00E9.\r\n\r\nProc\u00E9dures de communication et gestion d\u0027incidents\r\nPr\u00E9parer playbooks d\u0027incident qui d\u00E9crivent : crit\u00E8res de d\u00E9clenchement, cha\u00EEne de d\u00E9cision, communications internes/externes (direction, clients, autorit\u00E9s), calendriers et messages types. Inclure proc\u00E9dures de revocation d\u0027urgence, remplacement acc\u00E9l\u00E9r\u00E9 des cl\u00E9s/certificats et basculement vers solutions de secours. Assurer la tra\u00E7abilit\u00E9 des d\u00E9cisions et la conservation des preuves pour post-mortem et conformit\u00E9.\r\n\r\nFormation des \u00E9quipes et exercices de r\u00E9silience\r\nMettre en place un programme continu de formation (onboarding, refresh p\u00E9riodique, modules sp\u00E9cialis\u00E9s). Organiser des exercices r\u00E9guliers : jeux de r\u00F4le, simulations de compromise, drills de restauration \u00E0 partir de sauvegardes et exercices d\u0027expiration simul\u00E9e. Mesurer la performance (temps de r\u00E9ponse, taux de r\u00E9ussite) et int\u00E9grer retours d\u0027exp\u00E9rience dans les SOP (Standard Operating Procedures).\r\n\r\nTests, validation et maintenance pr\u00E9ventive\r\nPlanifier des tests de restauration complets, v\u00E9rifier l\u0027int\u00E9grit\u00E9 des sauvegardes (checksum, tests de d\u00E9chiffrement), renouveler p\u00E9riodiquement le mat\u00E9riel critique (HSM, TPM), et appliquer des mises \u00E0 jour logicielles et firmware selon un calendrier contr\u00F4l\u00E9. Documenter les r\u00E9sultats et corriger les \u00E9carts identifi\u00E9s.\r\n\r\nChecklist op\u00E9rationnelle et indicateurs de suivi\r\nFournir une checklist utilisable quotidiennement/hebdomadairement/mensuellement : v\u00E9rification des journaux, tests de sauvegarde/restauration, \u00E9tat des certificats \u00E0 horizon 90/30/7 jours, revue des acc\u00E8s, statut des automatismes. Exemples d\u0027indicateurs : temps moyen de renouvellement, % d\u0027alertes trait\u00E9es sous SLA, nombre d\u0027exercices r\u00E9alis\u00E9s par an, taux de r\u00E9ussite des restaurations.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "D\u00E9crivez en 6 points concis la politique minimale de sauvegarde des cl\u00E9s pour une PKI d\u0027entreprise.",
              "Answer": "1) Identifier et classifier toutes les cl\u00E9s critiques (racine, interm\u00E9diaires, op\u00E9ratives). 2) Sauvegarder toutes les cl\u00E9s critiques chiffr\u00E9es, avec m\u00E9tadonn\u00E9es, dans un HSM ou coffre-fort certifi\u00E9. 3) Imposer la redondance g\u00E9ographique et sauvegardes hors site. 4) Prot\u00E9ger les sauvegardes par chiffrement, MFA et split secrets (ex : Shamir). 5) Tester la restauration p\u00E9riodiquement et consigner les r\u00E9sultats. 6) D\u00E9finir r\u00F4les \u0026 workflows d\u0027acc\u00E8s (multi-approbation pour restauration).",
              "Explanation": "La r\u00E9ponse couvre classification, protection, redondance, acc\u00E8s contr\u00F4l\u00E9 et tests \u2014 \u00E9l\u00E9ments essentiels pour garantir disponibilit\u00E9 et s\u00E9curit\u00E9 des cl\u00E9s en production."
            },
            {
              "Instruction": "Proposez un plan d\u0027automatisation pour pr\u00E9venir les expirations de certificats en production (liste d\u0027\u00E9tapes techniques).",
              "Answer": "1) D\u00E9couverte automatique des certificats et inventaire centralis\u00E9. 2) Int\u00E9gration d\u0027une solution de gestion des certificats (avec API/ACME). 3) D\u00E9finition de politiques de renouvellement et calendriers (p.ex. renouveler \u00E0 J-30). 4) Impl\u00E9mentation de pipelines CI/CD pour d\u00E9ploiement automatis\u00E9 des nouveaux certificats. 5) Monitoring et alerting \u00E0 J-30/J-14/J-7/J-1 avant expiration. 6) Tests automatis\u00E9s post-d\u00E9ploiement (connexion, validation cha\u00EEne, alarmes). 7) Rollback automatis\u00E9 si \u00E9chec et notification des responsables.",
              "Explanation": "Le plan aborde d\u00E9couverte, orchestration, alerting, tests et rollback \u2014 \u00E9l\u00E9ments n\u00E9cessaires pour un cycle de vie automatis\u00E9 fiable et d\u00E9tecter les anomalies avant impact."
            },
            {
              "Instruction": "R\u00E9digez en quelques lignes un playbook d\u0027urgence pour une compromission suppos\u00E9e d\u0027une cl\u00E9 d\u0027autorit\u00E9 interm\u00E9diaire.",
              "Answer": "1) Isoler et confirmer la compromission (collecte des journaux, preuves). 2) Activer l\u0027\u00E9quipe d\u0027intervention et notifier parties prenantes selon la proc\u00E9dure. 3) R\u00E9voquer imm\u00E9diatement les certificats \u00E9mis par l\u0027AI compromise et publier CRL/OCSP updates. 4) G\u00E9n\u00E9rer une nouvelle AI depuis un HSM s\u00E9curis\u00E9 et d\u00E9ployer les certificats de remplacement via pipeline s\u00E9curis\u00E9. 5) Forcer le remplacement des certificats clients/serveurs affect\u00E9s et v\u00E9rifier la connectivit\u00E9. 6) Effectuer un post-mortem, corriger les causes racines et informer les r\u00E9gulateurs/le cas \u00E9ch\u00E9ant.",
              "Explanation": "Le playbook couvre identification, communication, r\u00E9vocation, remplacement s\u00E9curis\u00E9 et post-mortem \u2014 \u00E9tapes critiques pour limiter l\u0027impact et restaurer la confiance."
            }
          ]
        }
      ]
    },
    {
      "Title": "Validation, d\u00E9pannage et cl\u00F4ture",
      "Description": "Validation DNSSEC avec r\u00E9solveurs r\u00E9cursifs, diagnostic d\u0027erreurs courantes, exercices de troubleshooting et synth\u00E8se des bonnes pratiques.",
      "EstimatedHours": 0.67,
      "Lessons": [
        {
          "Title": "Introduction au module et objectifs",
          "Summary": "Pr\u00E9sentation des objectifs du module : validation DNSSEC c\u00F4t\u00E9 r\u00E9solveur r\u00E9cursif, m\u00E9thodes de d\u00E9pannage, exercices pratiques et synth\u00E8se des bonnes pratiques \u00E0 appliquer en production.",
          "EstimatedMinutes": 40,
          "LearningObjectives": [
            "Comprendre le p\u00E9rim\u00E8tre et les objectifs du module \u00AB Validation, d\u00E9pannage et cl\u00F4ture \u00BB",
            "Expliquer comment fonctionne la validation DNSSEC c\u00F4t\u00E9 r\u00E9solveur r\u00E9cursif (cha\u00EEne de confiance, trust anchors, RRSIG, DS, DNSKEY)",
            "Identifier les causes courantes d\u0027\u00E9chec de validation DNSSEC et leurs indices diagnostiques",
            "Ma\u00EEtriser les m\u00E9thodes et outils de d\u00E9pannage c\u00F4t\u00E9 r\u00E9solveur (dig/drill/delv, outils du r\u00E9solveur, captures r\u00E9seau, journaux)",
            "R\u00E9aliser des exercices pratiques de diagnostic et de correction d\u0027incidents DNSSEC",
            "Adopter les bonnes pratiques op\u00E9rationnelles \u00E0 appliquer en production (monitoring, gestion des cl\u00E9s, proc\u00E9dures de bascule et tests automatis\u00E9s)",
            "Savoir cl\u00F4turer un incident DNSSEC et produire une synth\u00E8se / rapport op\u00E9rationnel"
          ],
          "Content": "Contexte et port\u00E9e du module\r\nCe module pose le cadre pour la validation DNSSEC c\u00F4t\u00E9 r\u00E9solveur r\u00E9cursif et les activit\u00E9s de d\u00E9pannage associ\u00E9es. Il couvre les principes de validation que le r\u00E9solveur applique, les sympt\u00F4mes courants des \u00E9checs de validation, les outils et m\u00E9thodes pour diagnostiquer et corriger les probl\u00E8mes, des exercices pratiques pour s\u0027entra\u00EEner et une synth\u00E8se des bonnes pratiques \u00E0 mettre en place en production. L\u0027objectif est de permettre aux participants d\u0027intervenir efficacement sur des incidents DNSSEC et de pr\u00E9venir des r\u00E9gressions.\r\n\r\nObjectifs d\u00E9taill\u00E9s de la le\u00E7on\r\nPr\u00E9sentation claire des objectifs du module : valider la compr\u00E9hension th\u00E9orique, fournir une bo\u00EEte \u00E0 outils de diagnostic, entra\u00EEner aux cas r\u00E9els par des exercices et formaliser un ensemble de bonnes pratiques op\u00E9rationnelles pour l\u0027exploitation d\u0027un r\u00E9solveur valideur DNSSEC.\r\n\r\nPrincipes de base de la validation DNSSEC c\u00F4t\u00E9 r\u00E9solveur r\u00E9cursif\r\nRappel fonctionnel : le r\u00E9solveur valide les signatures (RRSIG) jusqu\u0027\u00E0 une trust anchor (g\u00E9n\u00E9ralement la cl\u00E9 racine ou une cl\u00E9 configur\u00E9e localement). Les \u00E9l\u00E9ments clefs : enregistrements DNSKEY et RRSIG c\u00F4t\u00E9 zone, enregistrement DS au parent, configuration de la trust anchor, gestion du temps et des TTL. Le r\u00E9solveur combine les r\u00E9ponses re\u00E7ues, v\u00E9rifie les algorithmes, la coh\u00E9rence DS/DNSKEY et s\u0027appuie sur EDNS/TCP pour obtenir des r\u00E9ponses compl\u00E8tes. Comprendre ces \u00E9tapes est essentiel pour diagnostiquer un \u00E9chec de validation.\r\n\r\nM\u00E9thodes de d\u00E9pannage\r\nOutils et approches :\n- Requ\u00EAtes diagnostiques : dig \u002Bdnssec, dig \u002Bmulti, drill, delv pour forcer l\u0027affichage des RRSIG/AD/DO et des en-t\u00EAtes.\n- Outils du r\u00E9solveur : unbound-control, rndc, journalisation BIND/knot/unbound pour observer les raisons d\u0027\u00E9chec (signature expir\u00E9e, cha\u00EEne rompue, algorithme non support\u00E9).\n- Captures r\u00E9seau (tcpdump, Wireshark) pour suivre EDNS, MTU, fragmentation et fallbacks TCP.\n- V\u00E9rifications parent-enfant : comparer le DS publi\u00E9 dans la zone parente et le DNSKEY dans la zone enfant (calcul de DS).\n- Sc\u00E9narios fr\u00E9quents : signature expir\u00E9e, mauvaise date/heure sur serveur, DS absent ou incorrect au parent, algorithme obsol\u00E8te non support\u00E9, probl\u00E8me d\u0027acheminement UDP/EDNS/MTU, DNSSEC d\u00E9sactiv\u00E9 c\u00F4t\u00E9 r\u00E9solveur ou zone.\n- M\u00E9thodologie : reproduire le sympt\u00F4me, isoler r\u00E9solveur/zone/parent, produire preuves (logs, captures, dig) et appliquer correctifs progressifs.\r\n\r\nExercices pratiques pr\u00E9vus\r\nDescription des exercices pratiques : lecture et interpr\u00E9tation des sorties dig et delv, v\u00E9rification de la pr\u00E9sence et de la validit\u00E9 des RRSIG, calcul et comparaison d\u0027un DS, simulation d\u0027une signature expir\u00E9e et restauration, analyse de capture r\u00E9seau pour identifier un probl\u00E8me d\u0027EDNS/MTU. Ces exercices sont con\u00E7us pour \u00EAtre r\u00E9alis\u00E9s sur un poste local ou un lab isol\u00E9 et incluent des jeux de donn\u00E9es et instructions pas-\u00E0-pas.\r\n\r\nSynth\u00E8se des bonnes pratiques \u00E0 appliquer en production\r\nPrincipales recommandations op\u00E9rationnelles :\n- Mettre en place une surveillance continue de la validation (alertes sur \u00E9checs, taux d\u0027\u00E9chec, latence).\n- Automatiser et tester les rollovers de cl\u00E9s (ZSK/KSK) dans un environnement de pr\u00E9production avant production.\n- V\u00E9rifier r\u00E9guli\u00E8rement la coh\u00E9rence DS/DNSKEY et l\u0027exactitude des trust anchors.\n- Conserver des journaux et proc\u00E9dures de debugging standardis\u00E9es (ex. commandes dig/delv pr\u00E9cises, captures types).\n- G\u00E9rer la compatibilit\u00E9 r\u00E9seaux : configurer MTU, permettre TCP fallback, tester EDNS.\n- Documenter les proc\u00E9dures de reprise et de communication en cas d\u0027incident (reporting, SLA, contact parent pour DS).\r\n\r\nStructure p\u00E9dagogique et d\u00E9roul\u00E9 du module\r\nLe module alterne expos\u00E9s th\u00E9oriques courts, d\u00E9monstrations en direct et ateliers pratiques. Chaque atelier est suivi d\u0027une synth\u00E8se et d\u0027une mini-\u00E9valuation. La cl\u00F4ture du module comprend un exercice fil rouge rassemblant les comp\u00E9tences et une checklist de mise en production \u00E0 remettre aux participants.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 V\u00E9rifier rapidement si un r\u00E9solveur valide DNSSEC pour un domaine donn\u00E9 (ex: example.com). Utilisez dig et interpr\u00E9tez l\u0027indicateur d\u0027authenticit\u00E9 de la r\u00E9ponse.",
              "Answer": "Commande exemple : dig @\u003Cresolver\u003E example.com \u002Bdnssec ; v\u00E9rifier le flag AD dans l\u0027en-t\u00EAte et la pr\u00E9sence de RRSIG pour les enregistrements. Si AD=1 ou si RRSIGs valides sont pr\u00E9sents et la cha\u00EEne est intacte, la r\u00E9ponse est valid\u00E9e.",
              "Explanation": "Le flag AD (Authenticated Data) indique qu\u0027un r\u00E9solveur qui vous a r\u00E9pondu a valid\u00E9 la r\u00E9ponse. La pr\u00E9sence de RRSIGs montre que la zone est sign\u00E9e. En l\u0027absence d\u0027AD et si le r\u00E9solveur est configur\u00E9 pour valider, la validation a \u00E9chou\u00E9 ou la r\u00E9ponse n\u0027a pas \u00E9t\u00E9 valid\u00E9e. delv peut aussi montrer des raisons d\u0027\u00E9chec d\u00E9taill\u00E9es."
            },
            {
              "Instruction": "Exercice 2 \u2014 Comparer le DS publi\u00E9 au parent et le DNSKEY publi\u00E9 dans la zone enfant pour d\u00E9tecter une incoh\u00E9rence. D\u00E9crivez les \u00E9tapes et le r\u00E9sultat attendu.",
              "Answer": "\u00C9tapes : (1) r\u00E9cup\u00E9rer le DS au parent via dig \u002Bshort parent-zone DS example.com ; (2) r\u00E9cup\u00E9rer le DNSKEY de la zone enfant via dig \u002Bdnssec example.com DNSKEY ; (3) calculer le digest DS depuis le DNSKEY (sha1/sha256) et comparer avec la valeur DS du parent. Le r\u00E9sultat attendu : les valeurs doivent correspondre. Si elles diff\u00E8rent, la liaison parent-enfant est cass\u00E9e et la validation \u00E9chouera au r\u00E9solveur.",
              "Explanation": "Le DS est un r\u00E9sum\u00E9 (digest) de la cl\u00E9 publique (DNSKEY) et permet au parent de lier la zone enfant. Une diff\u00E9rence indique typiquement un DS non mis \u00E0 jour apr\u00E8s un rollover de cl\u00E9 ou une erreur lors de la soumission du DS au registre/parent."
            },
            {
              "Instruction": "Exercice 3 \u2014 Diagnostiquer une signature expir\u00E9e. Vous recevez des erreurs de validation indiquant \u0022signature expired\u0022 dans les logs du r\u00E9solveur. Quelle est la s\u00E9quence d\u0027actions pour corriger et v\u00E9rifier la reprise\u00A0?",
              "Answer": "S\u00E9quence : (1) v\u00E9rifier l\u0027heure des serveurs et du r\u00E9solveur (NTP) ; (2) v\u00E9rifier la date/validit\u00E9 des RRSIG via dig \u002Bdnssec zone SOA/records ; (3) si les signatures sont r\u00E9ellement expir\u00E9es, r\u00E9g\u00E9n\u00E9rer/signature la zone sur l\u0027autorit\u00E9 et republier les enregistrements sign\u00E9s ; (4) attendre la propagation TTL et v\u00E9rifier \u00E0 nouveau avec dig; (5) surveiller logs pour confirmer la validation r\u00E9ussie.",
              "Explanation": "Les signatures DNSSEC sont valides pendant une plage de temps. Une horloge syst\u00E8me incorrecte peut faire appara\u00EEtre des signatures comme expir\u00E9es. Si l\u0027heure est correcte mais les RRSIG sont expir\u00E9es, la zone doit \u00EAtre resign\u00E9e. Apr\u00E8s resignature et publication, le r\u00E9solveur doit pouvoir valider \u00E0 nouveau une fois que les nouvelles signatures sont propag\u00E9es."
            }
          ]
        },
        {
          "Title": "Rappel technique : principes de la validation DNSSEC",
          "Summary": "Rappel des concepts essentiels (signature RRSIG, cl\u00E9s KSK/ZSK, DS, cha\u00EEne de confiance, NSEC/NSEC3, algorithmes et horodatage) et de leur impact sur la validation c\u00F4t\u00E9 r\u00E9solveur.",
          "EstimatedMinutes": 40,
          "LearningObjectives": [
            "Comprendre les r\u00F4les et la s\u00E9mantique des enregistrements RRSIG, DNSKEY, DS et des clefs KSK/ZSK dans la validation DNSSEC.",
            "Expliquer la cha\u00EEne de confiance (chain of trust) entre zone parent et zone enfant et l\u0027impact du DS.",
            "D\u00E9crire les m\u00E9canismes de preuve d\u2019absence de nom (NSEC/NSEC3) et leurs cons\u00E9quences pour la validation et la confidentialit\u00E9.",
            "Interpr\u00E9ter les informations d\u2019horodatage et d\u2019algorithme dans une signature RRSIG et leur impact sur la validit\u00E9 des signatures.",
            "Identifier les causes courantes d\u2019\u00E9chec de validation c\u00F4t\u00E9 r\u00E9solveur (mauvais DS, signatures expir\u00E9es, algorithmes non support\u00E9s, incoh\u00E9rences TTL) et appliquer des \u00E9tapes de d\u00E9pannage.",
            "Appliquer des bonnes pratiques pour la gestion de cl\u00E9s et les basculements (rollover KSK/ZSK) afin de pr\u00E9server la validit\u00E9 c\u00F4t\u00E9 r\u00E9solveur."
          ],
          "Content": "Rappels de base : RRSIG et DNSKEY\r\nRRSIG est l\u2019enregistrement qui contient la signature cryptographique d\u2019un ensemble d\u2019enregistrements (un RRset). Il sp\u00E9cifie l\u2019algorithme, la cl\u00E9 utilis\u00E9e (key tag), la p\u00E9riode de validit\u00E9 (inception/expiration) et le nom sign\u00E9. DNSKEY stocke les cl\u00E9s publiques d\u2019une zone ; chaque DNSKEY a un flag (257 KSK / 256 ZSK en pratique) indiquant son r\u00F4le. Lorsqu\u2019un r\u00E9solveur valide un RRset, il r\u00E9cup\u00E8re la RRSIG, s\u00E9lectionne la DNSKEY correspondante (par key tag/algorithme) et v\u00E9rifie la signature.\r\n\r\nCha\u00EEne de confiance et r\u00F4le du DS\r\nLa cha\u00EEne de confiance relie la cl\u00E9 d\u2019une zone enfant \u00E0 une cl\u00E9 de confiance connue par le r\u00E9solveur (anchor) via l\u2019enregistrement DS plac\u00E9 dans la zone parent. Le DS contient un hach\u00E9 de la DNSKEY de l\u2019enfant (algorithme de hachage sp\u00E9cifi\u00E9). Si le DS existe, la zone est dite en d\u00E9l\u00E9gation s\u00E9curis\u00E9e et le r\u00E9solveur attend des signatures valides pour la zone enfant. Si le DS est absent, la d\u00E9l\u00E9gation est consid\u00E9r\u00E9e non sign\u00E9e (r\u00E9solveur ne valide pas la zone enfant). Un DS incorrect (mauvais hash/algorithme) brise la cha\u00EEne et provoque un \u00E9chec de validation.\r\n\r\nKSK vs ZSK : s\u00E9paration des r\u00F4les\r\nKSK (Key Signing Key) signe uniquement l\u0027enregistrement DNSKEY (RRSIG sur l\u0027ensemble DNSKEY) ; il sert \u00E0 lier la cl\u00E9 publique publi\u00E9e \u00E0 la d\u00E9l\u00E9gation par le DS. ZSK (Zone Signing Key) signe tous les autres RRset de la zone. Cette s\u00E9paration permet de limiter la surface d\u0027exposition lors d\u0027un rollover et de simplifier la gestion (rouleovers plus courts pour ZSK, plus contr\u00F4l\u00E9s pour KSK). Lors d\u0027un rollover, des \u00E9tapes de double signature (publication de cl\u00E9s anciennes et nouvelles) maintiennent la validit\u00E9 c\u00F4t\u00E9 r\u00E9solveur.\r\n\r\nNSEC et NSEC3 : preuves d\u2019absence et implications\r\nPour prouver qu\u2019un nom ou un enregistrement n\u2019existe pas, une zone sign\u00E9e utilise NSEC ou NSEC3. NSEC liste les noms existants dans l\u2019ordre canonique (r\u00E9v\u00E8le la structure d\u2019une zone). NSEC3 publie des souches hach\u00E9es pour r\u00E9duire la fuite d\u2019information, mais ajoute de la complexit\u00E9 (param\u00E8tres d\u2019it\u00E9ration, sel). Les r\u00E9solveurs valident les preuves NSEC/NSEC3 de la m\u00EAme fa\u00E7on que tout autre RRset : ils v\u00E9rifient la RRSIG sur l\u2019enregistrement NSEC/NSEC3. Les erreurs courantes incluent des param\u00E8tres NSEC3 incoh\u00E9rents apr\u00E8s un changement (par ex. mauvais sel ou it\u00E9rations), entra\u00EEnant des \u00E9checs de preuve d\u2019absence.\r\n\r\nAlgorithmes, horodatage et dur\u00E9e de vie des signatures\r\nChaque RRSIG indique l\u2019algorithme de signature (ex. RSA/SHA-256, ECDSA) et les timestamps \u0027inception\u0027 et \u0027expiration\u0027. Si l\u2019horloge du r\u00E9solveur est incorrecte ou si la signature est expir\u00E9e, la validation \u00E9choue. Les signatures devraient \u00EAtre re-sign\u00E9es avant expiration ; les r\u00E9solveurs acceptent g\u00E9n\u00E9ralement une fen\u00EAtre de temps (souvent quelques minutes de skew) mais sont stricts sur l\u2019expiration. Le TTL des RRsets interagit avec la dur\u00E9e de vie des signatures : un RRset peut \u00EAtre mis en cache au-del\u00E0 de l\u0027expiration d\u0027une RRSIG si le r\u00E9solveur conserve la signature valide ; typiquement, la signature doit rester valide aussi longtemps que l\u0027enregistrement est servi.\r\n\r\nImpact sur le r\u00E9solveur : comportement et cache\r\nUn r\u00E9solveur valide les r\u00E9ponses en comparant la RRSIG et la DNSKEY en remontant la cha\u00EEne via les DS et le trust anchor. En cas de validation r\u00E9ussie, la r\u00E9ponse est servie et mise en cache. En cas d\u2019\u00E9chec de validation, la r\u00E9ponse est rejet\u00E9e (SERVFAIL) ou, selon la politique (DANE, AD bit), marqu\u00E9e non valid\u00E9e. Le cache peut garder des enregistrements valid\u00E9s et leurs signatures ; lors d\u2019un rollover, si la nouvelle cl\u00E9 n\u2019est pas encore publi\u00E9e ou si le DS n\u2019est pas mis \u00E0 jour, le r\u00E9solveur peut continuer \u00E0 servir des r\u00E9ponses valides jusqu\u2019\u00E0 l\u2019expiration des signatures dans le cache.\r\n\r\nCas courants d\u2019\u00E9chec et diagnostics rapides\r\nCauses fr\u00E9quentes d\u2019\u00E9chec : DS absent ou erron\u00E9 dans la zone parent, expiration des signatures, disparition de la DNSKEY sign\u00E9e, algorithme non support\u00E9 par le r\u00E9solveur, incoh\u00E9rences NSEC/NSEC3, clef publique modifi\u00E9e sans rollover correctement conduit. Diagnostics utiles : v\u00E9rifier la pr\u00E9sence et l\u2019exactitude du DS (zone parent), l\u2019ensemble DNSKEY et ses signatures, les RRSIG (inception/expiration), et tester depuis un r\u00E9solveur public (ex. dig \u002Bdnssec ou outils en ligne). V\u00E9rifier l\u2019heure syst\u00E8me du r\u00E9solveur et la prise en charge des algorithmes (liste d\u2019algorithmes accept\u00E9s).\r\n\r\nBonnes pratiques et gestion des rollovers\r\nPlanifier les rollovers avec phases de coexistence : publier la nouvelle cl\u00E9 (DNSKEY) et signer les RRset avec l\u2019ancienne et la nouvelle cl\u00E9 (double-signage), mettre \u00E0 jour DS dans le parent si KSK change, attendre la propagation (TTL) avant de retirer les anciennes cl\u00E9s. Tester les changements sur environnements de pr\u00E9-production et surveiller les logs du r\u00E9solveur (SERVFAIL, BADSIG, etc.). Utiliser des p\u00E9riodes tampon pour les signatures (re-sign avant expiration) et conna\u00EEtre la fen\u00EAtre d\u2019acceptation des r\u00E9solveurs cibles.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Sc\u00E9nario : Vous observez que les r\u00E9solveurs renvoient SERVFAIL pour une zone ; la zone est cens\u00E9e \u00EAtre sign\u00E9e. Donnez les 5 \u00E9tapes de diagnostic les plus probables, dans l\u2019ordre, pour isoler la cause.",
              "Answer": "1) V\u00E9rifier l\u0027heure du serveur/r\u00E9solveur. 2) V\u00E9rifier la pr\u00E9sence et la validit\u00E9 des RRSIG (inception/expiration) pour les RRset. 3) V\u00E9rifier les enregistrements DNSKEY et leurs RRSIG (signature de l\u2019ensemble DNSKEY). 4) V\u00E9rifier l\u2019existence et l\u2019exactitude du DS dans la zone parent (hash/algorithme). 5) Tester la preuve d\u2019absence (NSEC/NSEC3) si l\u2019erreur concerne un nom non trouv\u00E9.",
              "Explanation": "Ces \u00E9tapes vont du plus simple (heure syst\u00E8me) aux \u00E9l\u00E9ments de cha\u00EEne de confiance. Une signature expir\u00E9e ou manquante, une DNSKEY absente, ou un DS incorrect sont des causes fr\u00E9quentes d\u2019\u00E9chec. La preuve d\u2019absence est v\u00E9rifi\u00E9e si le nom est cens\u00E9 ne pas exister."
            },
            {
              "Instruction": "Interpr\u00E9tez : un RRSIG affiche inception \u00E0 2025-10-01T00:00:00Z et expiration \u00E0 2025-10-08T00:00:00Z. Aujourd\u2019hui c\u2019est 2025-10-08T00:00:05Z et le r\u00E9solveur retourne BADSIG. Quelles explications ?",
              "Answer": "La signature est techniquement expir\u00E9e (m\u00EAme si de quelques secondes), et le r\u00E9solveur applique la restriction temporelle strictement ; une horloge incorrecte ou un delta n\u00E9gatif peut aussi expliquer le rejet.",
              "Explanation": "La plupart des impl\u00E9mentations refusent une signature hors de sa fen\u00EAtre valide. Certains r\u00E9solveurs tol\u00E8rent un petit skew, mais ici la signature est post\u00E9rieure \u00E0 l\u2019expiration. V\u00E9rifier l\u2019heure locale et re-signer les RRset si n\u00E9cessaire."
            },
            {
              "Instruction": "Situation : vous avez publi\u00E9 une nouvelle ZSK et mis \u00E0 jour les signatures, mais apr\u00E8s suppression de l\u2019ancienne ZSK, certains r\u00E9solveurs commencent \u00E0 refuser la zone. Quelle est la cause la plus probable et comment corriger ?",
              "Answer": "Cause probable : certains r\u00E9solveurs avaient en cache des signatures ou enregistrements sign\u00E9s uniquement par l\u2019ancienne ZSK et attendent la RRSIG correspondante ; la suppression pr\u00E9matur\u00E9e de l\u2019ancienne cl\u00E9 a cass\u00E9 la validation. Correction : r\u00E9introduire l\u2019ancienne ZSK et ses signatures (si possible), re-publier des signatures valides avec la nouvelle ZSK puis effectuer un rollover correct (phase de double-signage et respecter TTLs).",
              "Explanation": "Lors d\u2019un rollover ZSK, il faut conserver l\u2019ancienne cl\u00E9 le temps que les caches s\u2019expirent et que les r\u00E9solveurs aient le temps d\u2019accepter la nouvelle signature. La proc\u00E9dure standard est de signer simultan\u00E9ment avec les deux cl\u00E9s pendant une p\u00E9riode de transition."
            }
          ]
        },
        {
          "Title": "Configurer la validation DNSSEC sur r\u00E9solveurs r\u00E9cursifs",
          "Summary": "Guides pratiques et diff\u00E9rences d\u0027impl\u00E9mentation pour BIND, Unbound, Knot Resolver et systemd-resolved : activer la validation, choix des politiques de s\u00E9curit\u00E9 et gestion du cache.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Comprendre les principes fondamentaux de la validation DNSSEC et ses implications pour les r\u00E9solveurs r\u00E9cursifs.",
            "Savoir activer et configurer la validation DNSSEC dans BIND, Unbound, Knot Resolver et systemd-resolved.",
            "Choisir et appliquer des politiques de s\u00E9curit\u00E9 DNSSEC (hard-fail, permissive, downgrade) selon un contexte op\u00E9rationnel.",
            "G\u00E9rer les cl\u00E9s de confiance (trust anchors), la mise \u00E0 jour automatique (RFC 5011) et les exceptions (negative trust anchors).",
            "Optimiser et surveiller le cache DNS en pr\u00E9sence de DNSSEC (TTL, pr\u00E9lecture, taille des r\u00E9ponses) et d\u00E9panner les erreurs courantes.",
            "Comparer les diff\u00E9rences d\u0027impl\u00E9mentation et de comportement entre les r\u00E9solveurs cit\u00E9s."
          ],
          "Content": "Introduction et rappel des principes DNSSEC\r\nDNSSEC ajoute une couche d\u0027authentification des r\u00E9ponses DNS via des signatures num\u00E9riques (RRSIG) et des cha\u00EEnes de confiance construites \u00E0 partir de cl\u00E9s parentes (DS / DNSKEY). Pour un r\u00E9solveur r\u00E9cursif, \u0027validation\u0027 signifie v\u00E9rifier les signatures et la coh\u00E9rence des DS/DNSKEY jusqu\u0027\u00E0 une trust anchor (g\u00E9n\u00E9ralement la cl\u00E9 racine). Les cons\u00E9quences op\u00E9rationnelles incluent : r\u00E9ponses plus grosses (RRSIG), exigences TCP/EDNS0 pour les tailles, gestion des cas d\u0027\u00E9chec (SERVFAIL) et n\u00E9cessit\u00E9 de maintenir les trust anchors. La strat\u00E9gie de validation doit \u00E9quilibrer s\u00E9curit\u00E9 (hard-fail sur \u00E9chec) et disponibilit\u00E9 (mode permissif/allow-downgrade pour g\u00E9rer upstream non-validant).\r\n\r\nConcepts cl\u00E9s \u00E0 garder en t\u00EAte\r\nTrust anchor : cl\u00E9 publique initiale (root) que le r\u00E9solveur consid\u00E8re comme fiable. RFC 5011 d\u00E9crit l\u0027automatisation de la gestion des trust anchors (mise \u00E0 jour/retirement). Hard-fail vs permissive : hard-fail rejette une zone si la signature est invalide, permissive laisse passer la r\u00E9ponse sign\u00E9e non valide en tant qu\u0027op\u00E9ration de secours (selon impl\u00E9mentation). Negative trust anchor (NTA) : d\u00E9sactivation de la validation pour une zone probl\u00E9matique. Prefetching / prevalidation : techniques pour r\u00E9duire latence li\u00E9e \u00E0 validations expir\u00E9es.\r\n\r\nBIND (9.x) \u2014 activation et gestion des trust anchors\r\nActivation de base : v\u00E9rifier que BIND a la validation DNSSEC activ\u00E9e. Exemples de directives dans named.conf.options :\n\noptions {\n  dnssec-validation auto;    // BIND g\u00E8re automatiquement la cl\u00E9 racine\n  listen-on port 53 { any; };\n};\n\nLe mode \u0027auto\u0027 installe et g\u00E8re la trust anchor racine dans managed-keys.bind. Pour forcer/inspecter la cl\u00E9 racine : utiliser \u0027rndc managed-keys status\u0027 et \u0027rndc dnssec-keys\u0027. Pour d\u00E9finir une politique plus stricte, BIND valide toujours si dnssec-validation est actif ; le comportement sur \u00E9chec renvoie SERVFAIL. Pour des exceptions, on peut ajouter des \u0027server\u0027 clauses avec \u0027dnssec-must-be-secure\u0027 pour d\u00E9finir des NTAs ou utiliser \u0027trusted-keys\u0027 pour ancrer localement une cl\u00E9 sp\u00E9cifique.\n\nCache et performances : BIND g\u00E8re son propre cache interne. Param\u00E8tres importants : max-cache-size, max-cache-ttl, minimal-responses-size (EDNS0). Activer \u0027dnssec-lookaside\u0027 n\u0027est plus recommand\u00E9. Surveiller logs (named) pour RRSIG expir\u00E9es et SERVFAIL DNSSEC.\r\n\r\nUnbound \u2014 activation, options de s\u00E9curit\u00E9 et optimisation\r\nConfiguration typique dans /etc/unbound/unbound.conf :\n\nserver:\n  verbosity: 1\n  interface: 0.0.0.0\n  access-control: 0.0.0.0/0 allow\n  auto-trust-anchor-file: \u0022/var/lib/unbound/root.key\u0022   # gestion automatique via RFC 5011\n  val-permissive-mode: no   # \u0027no\u0027 = hard-fail, \u0027yes\u0027 = permissive\n  prefetch: yes             # pr\u00E9lecture des enregistrements fr\u00E9quemment demand\u00E9s\n  prefetch-key: yes         # pr\u00E9lecture des cl\u00E9s DNSKEY\n  cache-min-ttl: 3600\n  cache-max-ttl: 86400\n\nUnbound est con\u00E7u pour la validation : \u0027auto-trust-anchor-file\u0027 permet l\u0027initialisation et la rotation automatique de la cl\u00E9 racine. \u0027val-permissive-mode\u0027 contr\u00F4le la politique : mettre \u0027no\u0027 pour une posture s\u00E9curis\u00E9e (rejet des r\u00E9ponses invalides), \u0027yes\u0027 pour laisser passer les r\u00E9ponses invalides tout en marquant l\u0027erreur (utile en migration). \u0027prefetch\u0027 r\u00E9duit l\u0027impact des expirations de signatures.\n\nD\u00E9pannage : consulter /var/log/unbound/unbound.log, utiliser \u0027unbound-control stats\u0027 et \u0027unbound-control dump_cache\u0027. Tester avec dig \u002Bdnssec@localhost example.com. Pour forcer une r\u00E9initialisation de la trust anchor, supprimer le fichier root.key et red\u00E9marrer Unbound (attention aux fen\u00EAtres sans ancre).\r\n\r\nKnot Resolver \u2014 sp\u00E9cificit\u00E9s et configuration (kresd)\r\nKnot Resolver (kresd) est configurable en Lua (/etc/knot-resolver/kresd.conf). Activation de la validation et configuration type :\n\nmodules = { \u0027hints\u0027, \u0027policy\u0027, \u0027validator\u0027, \u0027cache\u0027, \u0027forward\u0027 }\n\n-- charger l\u0027ancre racine automatique\nvalidator.config({\n  trust_anchors = \u0027/var/lib/knot-resolver/root.key\u0027,\n  use_system_trust_anchors = true,\n  allow_blind_trust = false,\n})\n\n-- politique de refus ou permissive via le module policy\npolicy.add_policy(function(request, policy)\n  -- retourner POLICY.ACCEPT ou POLICY.REJECT selon validation\nend)\n\nKnot Resolver est flexible (Lua) : g\u00E9rer prefetch dans le module \u0027cache\u0027, faire des actions customis\u00E9es sur \u00E9checs (log, blackhole, NTAs). La prise en charge de RFC 5011 et du fichier d\u0027ancre root d\u00E9pend de la version et de la distribution ; sinon, on place manuellement la cl\u00E9 racine et on met \u00E0 jour via outils externes.\n\nD\u00E9pannage : utiliser \u0027krd-query\u0027 (ou logs), v\u00E9rifier validator.get_trust_anchors(), surveiller m\u00E9triques du cache et du validateur.\r\n\r\nsystemd-resolved \u2014 capacit\u00E9s et limites\r\nsystemd-resolved expose une interface syst\u00E8me pour la r\u00E9solution locale. Les options pertinentes dans /etc/systemd/resolved.conf :\n\n[Resolve]\nDNSSEC=allow-downgrade   # ou \u0027yes\u0027 pour exiger la validation, \u0027no\u0027 pour d\u00E9sactiver\nDNS=1.1.1.1\nFallbackDNS=8.8.8.8\n\nExplications : \u0027DNSSEC=yes\u0027 demande la validation stricte mais systemd-resolved d\u00E9pend aussi des capacit\u00E9s de l\u0027upstream (AD flag, validation upstream, ou resolver local selon impl\u00E9mentation). \u0027allow-downgrade\u0027 tentera de valider mais acceptera des r\u00E9ponses non-valid\u00E9es pour des raisons de compatibilit\u00E9. Contrairement \u00E0 Unbound/BIND, systemd-resolved n\u0027est pas con\u00E7u pour \u00EAtre un validateur DNSSEC complet et n\u0027expose pas un m\u00E9canisme complet de gestion RFC 5011; il est pr\u00E9f\u00E9rable d\u0027utiliser Unbound/Knot/BIND si une validation robuste et locale est requise.\n\nV\u00E9rification : \u0027resolvectl status\u0027 et \u0027resolvectl query --dns-servers=127.0.0.53 --class IN example.com \u002Bdnssec\u0027 peuvent aider \u00E0 diagnostiquer.\n\nRemarque : d\u00E9pend fortement de la version de systemd ; v\u00E9rifier la doc distribu\u00E9e.\r\n\r\nPolitiques de s\u00E9curit\u00E9 et choix pratiques\r\nTrois grandes approches :\n- Hard-fail (s\u00E9curit\u00E9 maximale) : rejeter toute r\u00E9ponse qui \u00E9choue la validation (SERVFAIL) \u2014 recommand\u00E9 si vous contr\u00F4lez vos clients/SLAs et que vous pouvez tol\u00E9rer indisponibilit\u00E9 en cas d\u0027attaques ou de signatures expir\u00E9es.\n- Permissive / allow-downgrade : valider quand c\u0027est possible, mais accepter la r\u00E9ponse sinon \u2014 utile en migration ou si des upstreams ne prennent pas en charge DNSSEC.\n- Hybride : hard-fail pour zones critiques (ex.: domaines internes), permissive pour autres. Impl\u00E9mentable via vues/policy (BIND \u0027view\u0027/\u0027dnssec-must-be-secure\u0027, Unbound \u0027val-permissive-mode\u0027 ou policy scripting in Knot).\n\nConsid\u00E9rations \u00E0 prendre en compte : compatibilit\u00E9 des clients, impact sur la latence, ressources CPU/IO (validation co\u00FBteuse en CPU), taille de MTU/fragmentation (utiliser TCP fallback et EDNS0).\r\n\r\nGestion du cache et optimisation\r\nEffets DNSSEC : r\u00E9ponses plus grosses et RRSIGs entra\u00EEnant des TTL distincts. Bonnes pratiques :\n- Activer le pr\u00E9fetch (Unbound: prefetch, Knot: cache.prefetch) pour les enregistrements fr\u00E9quemment consult\u00E9s.\n- Ajuster cache-min-ttl et cache-max-ttl pour limiter latence et volume de requ\u00EAtes externes.\n- Monitorer le taux de collisions/miss et la saturation m\u00E9moire du cache (param\u00E8tres max-cache-size / memory-limit).\n- G\u00E9rer EDNS0 OK et augmenter la taille UDP si prise en charge du r\u00E9seau (mais pr\u00E9voir TCP fallback si fragment\u00E9).\n- Purger ou \u00ABpin\u00BB des enregistrements quand on met \u00E0 jour des cl\u00E9s (ex. lors de rotations) pour \u00E9viter SERVFAIL prolong\u00E9s.\n\nSurveillance : analyser m\u00E9triques : taux de SERVFAIL, nombre de validations, load CPU du validateur, logs RRSIG expir\u00E9s. Pr\u00E9voir alertes quand la confiance racine change (RFC 2028/5011 ops).\r\n\r\nGestion des trust anchors et RFC 5011\r\nRFC 5011 d\u00E9crit l\u0027automatisation de la gestion des trust anchors (d\u00E9tection et adoption de nouvelles cl\u00E9s racines via DS/DNSKEY sign\u00E9s). Impl\u00E9mentation : Unbound supporte l\u0027auto-trust-anchor-file ; BIND g\u00E8re les managed-keys quand dnssec-validation auto est utilis\u00E9 ; Knot Resolver peut n\u00E9cessiter gestion manuelle ou support selon version.\n\nBonnes pratiques :\n- S\u0027assurer que le r\u00E9solveur supporte RFC 5011 si vous souhaitez automatisation.\n- Garder des proc\u00E9dures manuelles de r\u00E9cup\u00E9ration en cas d\u0027anomalies (ex : rollback d\u0027une ancienne ancre).\n- Documenter et automatiser (via playbooks) la mise \u00E0 jour des fichiers d\u0027ancre en environnement restreint.\n- Utiliser des NTAs temporairement lors d\u0027incidents (par ex. une zone sign\u00E9e incorrectement) mais surveiller leur usage pour ne pas affaiblir la s\u00E9curit\u00E9.\r\n\r\nD\u00E9pannage courant\r\nSympt\u00F4mes et actions :\n- Beaucoup de SERVFAIL : v\u00E9rifier si validation DNSSEC \u00E9choue (logs \u0027insecure\u0027 ou \u0027bogus\u0027). Tester avec \u0027dig \u002Bdnssec @{resolver} example.com\u0027.\n- RRSIG expir\u00E9es : v\u00E9rifier l\u0027heure syst\u00E8me (NTP) \u2014 la validation \u00E9choue si l\u0027horloge est incorrecte.\n- R\u00E9ponses tronqu\u00E9es et timeout : v\u00E9rifier EDNS0, MTU/fragmentation, autoriser TCP fallback (firewall bloquant TCP/53 cause d\u0027\u00E9checs).\n- Changement de trust anchor rat\u00E9 : inspecter les fichiers d\u0027ancre, consulter commandes gestion (rndc managed-keys, unbound-control, outils Knot).\n- Performances CPU \u00E9lev\u00E9es : activer pr\u00E9fetch, augmenter m\u00E9moire cache, limiter logs verbeux, envisager offloading \u00E0 r\u00E9solveur externe pour charges extr\u00EAmes.\n\nProc\u00E9dure g\u00E9n\u00E9rique de diagnostic :\n1) Reproduire avec dig \u002Bdnssec\n2) Consulter logs du r\u00E9solveur\n3) V\u00E9rifier l\u0027heure syst\u00E8me\n4) V\u00E9rifier trust anchors et RFC 5011 state\n5) Ajuster temporairement la politique si n\u00E9cessaire (passer en permissive pour r\u00E9cup\u00E9ration contr\u00F4l\u00E9e)\r\n\r\nComparaison synth\u00E9tique des impl\u00E9mentations\r\nUnbound : con\u00E7u pour validation locale, support RFC 5011, facile \u00E0 configurer, bonnes options de pr\u00E9fetch et permissive mode.\nBIND : tr\u00E8s r\u00E9pandu, validation m\u00FBre, gestion automatique des managed-keys, configurations fines (views, server clauses) mais plus complexe.\nKnot Resolver : flexible (Lua), hautement scriptable pour politiques personnalis\u00E9es, performant pour les op\u00E9rateurs modernes, support variable de RFC 5011 selon versions.\nsystemd-resolved : pratique pour postes de travail et environnements desktop, mais pas un validateur DNSSEC complet \u2014 utiliser pour besoins l\u00E9gers ou comme forwarder, pas pour validation critique.\n\nChoix recommand\u00E9 : pour validation locale robuste et contr\u00F4le fin -\u003E Unbound ou Knot Resolver; pour serveurs faisant autorit\u00E9 et recursion combin\u00E9s -\u003E BIND (si vous ma\u00EEtrisez), pour ordinateurs clients -\u003E systemd-resolved peut suffire si version r\u00E9cente et options adapt\u00E9es.\r\n\r\nCl\u00F4ture et bonnes pratiques op\u00E9rationnelles\r\nChecklist op\u00E9rationnelle :\n- Activer NTP/chrony et surveiller l\u0027horloge.\n- S\u0027assurer que le r\u00E9solveur garde la trust anchor racine et supporte RFC 5011 si souhait\u00E9.\n- Choisir une politique (hard-fail vs permissive) en fonction du SLA et documenter l\u0027approche.\n- Automatiser les sauvegardes de configuration et pr\u00E9voir playbooks pour r\u00E9tablissement de trust anchors.\n- Mettre en place monitoring : taux de SERVFAIL, charge CPU du validateur, stats cache, alertes sur changements de trust anchors.\n- Tester p\u00E9riodiquement (dig \u002Bdnssec, outils de validation) et conserver proc\u00E9dures de mitigation (NTAs temporaires, basculement vers r\u00E9solveur de secours).\n\nLa validation DNSSEC renforce la s\u00E9curit\u00E9 DNS mais n\u00E9cessite une attention op\u00E9rationnelle : tests, monitoring et plans de secours.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "1) Sur un serveur Unbound, activez la validation DNSSEC en mode strict (hard-fail) et configurez la gestion automatique de la trust anchor racine. Indiquez les param\u00E8tres \u00E0 modifier et la commande pour v\u00E9rifier que la racine est bien install\u00E9e.",
              "Answer": "Modifier /etc/unbound/unbound.conf pour inclure :\n\nserver:\n  auto-trust-anchor-file: \u0022/var/lib/unbound/root.key\u0022\n  val-permissive-mode: no\n\nRed\u00E9marrer Unbound : systemctl restart unbound\nV\u00E9rifier l\u0027ancre : ls -l /var/lib/unbound/root.key ou unbound-control dump_trust_anchors\nTester la validation : dig \u002Bdnssec @127.0.0.1 example.com",
              "Explanation": "auto-trust-anchor-file permet \u00E0 Unbound d\u0027\u00E9crire et g\u00E9rer la cl\u00E9 racine (RFC 5011). val-permissive-mode: no force le rejet des r\u00E9ponses invalides. Apr\u00E8s red\u00E9marrage, le fichier root.key doit exister ; les commandes et dig testent la configuration."
            },
            {
              "Instruction": "2) Dans BIND, comment activer la validation DNSSEC et comment v\u00E9rifier l\u0027\u00E9tat des managed-keys ? Fournissez les directives et la commande de v\u00E9rification.",
              "Answer": "Dans named.conf.options :\n\noptions {\n  dnssec-validation auto;\n};\n\nRed\u00E9marrer named (ou rndc reconfig) : systemctl restart bind9\nV\u00E9rifier l\u0027\u00E9tat des managed-keys : rndc managed-keys status\n\nOn peut aussi utiliser \u0027dig @127.0.0.1 . DNSKEY \u002Bdnssec\u0027 pour inspecter la cl\u00E9 racine visible par BIND.",
              "Explanation": "dnssec-validation auto active la gestion automatique des cl\u00E9s g\u00E9r\u00E9es par BIND. \u0027rndc managed-keys status\u0027 montre quelles cl\u00E9s sont install\u00E9es et leur \u00E9tat. Le dig vers la zone racine permet de v\u00E9rifier la pr\u00E9sence de DNSKEY/RRSIG."
            },
            {
              "Instruction": "3) Vous recevez beaucoup de SERVFAIL pour les zones sign\u00E9es. Enum\u00E9rez 5 v\u00E9rifications ou actions rapides pour diagnostiquer et corriger le probl\u00E8me.",
              "Answer": "V\u00E9rifications/actions :\n1) V\u00E9rifier l\u0027heure syst\u00E8me et synchronisation NTP (ntpq/chronyc). Une horloge incorrecte casse la validation.\n2) Consulter les logs du r\u00E9solveur pour messages de type \u0027bogus\u0027 ou \u0027signature expired\u0027.\n3) Tester avec dig \u002Bdnssec pour isoler la requ\u00EAte et voir RRSIG/AD/ SERVFAIL.\n4) V\u00E9rifier la pr\u00E9sence/\u00E9tat des trust anchors et le support RFC 5011 (fichier root.key, managed-keys).\n5) V\u00E9rifier MTU/EDNS0 et firewall TCP/53 (r\u00E9ponses DNSSEC plus grandes peuvent n\u00E9cessiter TCP).",
              "Explanation": "SERVFAIL en contexte DNSSEC est souvent d\u00FB \u00E0 horloge syst\u00E8me, RRSIG expir\u00E9es, cl\u00E9s manquantes ou blocage TCP/EDNS0. Ces v\u00E9rifications couvrent les causes les plus fr\u00E9quentes et permettent de trouver et corriger la plupart des incidents."
            },
            {
              "Instruction": "4) Pour Knot Resolver, vous souhaitez mettre en place une politique qui autorise la r\u00E9solution m\u00EAme si la validation \u00E9choue pour une zone non critique. Quelle approche g\u00E9n\u00E9rale utiliser ?",
              "Answer": "Utiliser le module policy en Lua pour inspecter l\u0027\u00E9tat de validation et appliquer une d\u00E9cision permissive pour certaines zones. Exemple conceptuel :\n\nmodules = { \u0027validator\u0027, \u0027policy\u0027, ... }\npolicy.add_policy(function(request, policy)\n  local qname = request:qname()\n  if qname:endswith(\u0027.zonenoncritique.\u0027) then\n    return policy:accept_with_warning() -- comportement permissif pour cette zone\n  end\n  return policy:default()\nend)\n\nCette logique permet d\u0027autoriser r\u00E9solutions pour une zone cibl\u00E9e tout en gardant une politique stricte par d\u00E9faut.",
              "Explanation": "Knot Resolver est programmable en Lua ; la meilleure m\u00E9thode est d\u0027\u00E9crire une politique qui d\u00E9tecte le nom de zone et choisit d\u0027accepter ou non en fonction de la validation. Cela \u00E9vite une d\u00E9gradation globale de la s\u00E9curit\u00E9."
            },
            {
              "Instruction": "5) Avec systemd-resolved, comment configurer un compromis pour tenter la validation mais ne pas casser la r\u00E9solution si l\u0027upstream ne valide pas ?",
              "Answer": "Dans /etc/systemd/resolved.conf, d\u00E9finir :\n\n[Resolve]\nDNSSEC=allow-downgrade\n\nPuis red\u00E9marrer le service : systemctl restart systemd-resolved\nCe r\u00E9glage permet d\u0027exiger la validation quand elle est disponible mais d\u0027accepter une r\u00E9ponse non valid\u00E9e pour compatibilit\u00E9.",
              "Explanation": "DNSSEC=allow-downgrade est l\u0027option de compromis : elle essaie de valider mais ne force pas un rejet syst\u00E9matique si l\u0027upstream ou le chemin ne supporte pas DNSSEC, \u00E9vitant ainsi de casser la r\u00E9solution sur postes clients."
            }
          ]
        },
        {
          "Title": "Outils et m\u00E9thodes de diagnostic DNSSEC",
          "Summary": "Pr\u00E9sentation et d\u00E9monstration d\u0027outils (dig, delv, drill, kdig, dnssec-verify, tcptraceroute, journalisation du r\u00E9solveur) et comment interpr\u00E9ter leurs sorties pour identifier la source d\u0027un \u00E9chec de validation.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Conna\u00EEtre les principaux outils de diagnostic DNSSEC (dig, delv, drill, kdig, dnssec-verify, tcptraceroute) et la journalisation du r\u00E9solveur.",
            "Savoir ex\u00E9cuter des requ\u00EAtes sign\u00E9es et non sign\u00E9es et interpr\u00E9ter les drapeaux et champs utiles dans les sorties.",
            "Identifier les causes courantes d\u0027\u00E9chec de validation DNSSEC (DS manquant/erron\u00E9, cl\u00E9s/algorithmes, signatures expir\u00E9es, NSEC/NSEC3 incorrects, troncature UDP/EDNS).",
            "Mettre en place une d\u00E9marche de diagnostic syst\u00E9matique pour localiser la source d\u0027une rupture de validation (zone, parent, r\u00E9solveur, r\u00E9seau).",
            "Utiliser la journalisation du r\u00E9solveur et les informations de trace pour confirmer et isoler le probl\u00E8me."
          ],
          "Content": "Introduction et contexte\r\nRappel synth\u00E9tique : DNSSEC ajoute des signatures RRSIG et enregistrements de cl\u00E9 (DNSKEY) et pointeurs DS au parent. La validation \u00E9choue si la cha\u00EEne de confiance est rompue entre la racine et la zone interrog\u00E9e. Cette le\u00E7on couvre les outils et m\u00E9thodes pour rep\u00E9rer o\u00F9 la cha\u00EEne de confiance se casse.\r\n\r\nVue d\u0027ensemble des outils\r\nOutils pr\u00E9sent\u00E9s et r\u00F4le principal :\n- dig : outil g\u00E9n\u00E9raliste, flexible, tr\u00E8s r\u00E9pandu (option \u002Bdnssec, \u002Bdnssec \u002Bmulti pour d\u00E9tails).\n- delv : con\u00E7u pour d\u00E9bogage DNSSEC, affiche validation compl\u00E8te et raison des \u00E9checs.\n- drill / kdig : alternatives modernes (drill de ldns, kdig de Knot) avec affichage DNSSEC-friendly.\n- dnssec-verify : v\u00E9rification cryptographique locale d\u0027un RRset/RRSIG contre une cl\u00E9.\n- tcptraceroute : utile pour v\u00E9rifier si le trafic TCP/port 53 passe (\u00E9vite troncature UDP).\n- Journalisation du r\u00E9solveur (ex. systemd-resolved, unbound, bind) : montre pourquoi un r\u00E9solveur rejette une r\u00E9ponse.\nChaque outil a sorties et indicateurs sp\u00E9cifiques \u00E0 conna\u00EEtre pour interpr\u00E9ter des soucis de validation.\r\n\r\ndig : options et interpr\u00E9tation\r\nCommandes et indicateurs utiles :\n- dig \u002Bdnssec @server name type  \u2192 inclut DO bit et retourne RRSIG/DNSKEY jusqu\u0027\u00E0 ce que le serveur fournisse.\n- dig \u002Bshort \u002Bdnssec name type  \u2192 affichage compact.\n- Lire l\u0027ent\u00EAte : TC (troncature), AA, AD (Authentic Data), CD (Checking Disabled).\nInterpr\u00E9tation :\n- Si la r\u00E9ponse contient AD=1 (et vous interrogez un r\u00E9solveur valide), la validation a r\u00E9ussi c\u00F4t\u00E9 r\u00E9solveur.\n- Si RRSIGs manquent dans la r\u00E9ponse lorsque DO est demand\u00E9, le serveur peut \u00EAtre mal configur\u00E9 ou cacher RRSIG.\n- TC=1 \u002B serveur renvoyant des r\u00E9ponses incompl\u00E8tes \u21D2 essayez en TCP ; si TCP marche, la troncature UDP/EDNS peut causer probl\u00E8me.\nExemple d\u0027indicateur d\u0027erreur : \u00AB SERVFAIL \u00BB fr\u00E9quemment associ\u00E9 \u00E0 des erreurs de validation c\u00F4t\u00E9 r\u00E9solveur.\r\n\r\ndelv : sortie d\u00E9di\u00E9e DNSSEC\r\ndelv (DNSSEC debugger) fait la validation port\u00E9e par l\u0027outil et explique la raison d\u0027un \u00E9chec.\n- Ex\u00E9cuter : delv @server name type\n- delv montre la cha\u00EEne de d\u00E9l\u00E9gation, affiche les DS et DNSKEY trouv\u00E9s, v\u00E9rifie RRSIG vs DNSKEY et donne un verdict.\nInterpr\u00E9tation :\n- \u0027chain of trust broken at ...\u0027 indique le niveau exact (par exemple parent DS absent ou cl\u00E9 non correspondante).\n- \u0027no DS\u0027 au niveau du parent signifie que le parent n\u0027a pas publi\u00E9 le DS attendu (erreur de publication, typo, d\u00E9lai de propagation).\n- \u0027RRSIG validation failed\u0027 \u002B raison (bad key, signature expired) pointe vers cl\u00E9/validit\u00E9 sign\u00E9e incorrecte.\r\n\r\ndrill et kdig : usages et diff\u00E9rences\r\ndrill (ldns) et kdig (Knot) offrent des sorties concises et orient\u00E9es DNSSEC.\n- drill \u002Bdnssec name type @server affiche DNSSEC et met en \u00E9vidence la validation locale si l\u0027option correspondante est utilis\u00E9e.\n- kdig \u002Bdnssec \u002Bnorecurse permet d\u0027inspecter les r\u00E9ponses des serveurs autoritaires.\nPoints cl\u00E9s : consulter les enregistrements DNSKEY, DS, RRSIG et comparer les cl\u00E9s (cl\u00E9-id, algorithm) pour rep\u00E9rer un mismatch. kdig montre souvent le KEYTAG et l\u0027algorithme clairement.\r\n\r\ndnssec-verify et v\u00E9rification cryptographique\r\ndnssec-verify (ou outils similaires) permet de v\u00E9rifier math\u00E9matiquement qu\u0027un RRSIG correspond \u00E0 un RRset et \u00E0 une DNSKEY.\nProc\u00E9dure : extraire le RRset et la RRSIG, puis la DNSKEY (matching key tag/alg), et lancer la v\u00E9rification locale.\nInterpr\u00E9tation :\n- V\u00E9rification r\u00E9ussie \u2192 la signature est correcte pour la cl\u00E9 fournie.\n- \u00C9chec \u2192 cl\u00E9 erron\u00E9e, algorithme non support\u00E9, ou signature corrompue/alt\u00E9r\u00E9e.\nCe test permet de d\u00E9terminer si le probl\u00E8me est cryptographique (signature/DNSKEY) ou organisationnel (DS manquant chez le parent).\r\n\r\ntcptraceroute et probl\u00E8mes de transport (UDP vs TCP / EDNS)\r\nLes grandes r\u00E9ponses sign\u00E9es peuvent provoquer la troncature UDP et n\u00E9cessiter TCP. Les probl\u00E8mes possibles : filtres anti-DNS, MTU/fragmentation, incapacit\u00E9 \u00E0 \u00E9tablir TCP sur 53.\n- Utiliser tcptraceroute/ traceroute -T ciblant port 53 pour v\u00E9rifier si TCP sur port 53 est accessible jusqu\u0027au serveur.\nInterpr\u00E9tation :\n- TCP passe mais UDP est tronqu\u00E9 \u2192 probable probl\u00E8me d\u0027EDNS/fragmentation/pare-feu qui bloque les fragments.\n- Ni TCP ni UDP n\u0027atteignent le serveur \u2192 probl\u00E8me r\u00E9seau/filtrage plus g\u00E9n\u00E9ral.\r\n\r\nJournalisation et logs du r\u00E9solveur\r\nLes r\u00E9solveurs (Unbound, BIND, systemd-resolved) peuvent produire des logs d\u00E9taill\u00E9s sur la validation : cl\u00E9 utilis\u00E9e, signature expir\u00E9e, DS mismatched, etc.\n- Activer un niveau de log plus verbeux temporairement pour capturer l\u0027erreur.\n- Exemples de messages : \u0027could not validate RRSIG: keyid X algo Y\u0027, \u0027no DS found at child for signer\u0027, \u0027RRSIG failed to validate: signature expired\u0027.\nInterpr\u00E9tation :\n- Si le r\u00E9solveur indique explicitement \u0027signature expired\u0027, la zone doit re-signer.\n- \u0027DS mismatch\u0027 \u2192 v\u00E9rifier publication DS au parent vs DNSKEY de la zone.\n- \u0027no response\u0027 \u002B SERVFAIL \u2192 peut indiquer que le validateur a d\u00E9cid\u00E9 d\u0027abandonner la r\u00E9solution apr\u00E8s \u00E9chec de s\u00E9curit\u00E9.\r\n\r\nM\u00E9thodologie de diagnostic syst\u00E9matique\r\n\u00C9tapes recommand\u00E9es :\n1) Reproduire le probl\u00E8me depuis un validateur public (ex. 1.1.1.1, 9.9.9.9) et depuis l\u0027autorit\u00E9 pour comparer.\n2) Avec dig/delv/kdig, r\u00E9cup\u00E9rer: r\u00E9ponse, RRSIG, DNSKEY de la zone, DS au parent.\n3) V\u00E9rifier la correspondance entre DS(parent) et DNSKEY(zone) (keytag/algorithme/empreinte).\n4) V\u00E9rifier validit\u00E9 temporelle des RRSIG (dates) et des cl\u00E9s (expiration/rollover).\n5) Tester en TCP si troncature suspect\u00E9e et v\u00E9rifier pare-feu/EDNS/MTU.\n6) Consulter logs du r\u00E9solveur pour message pr\u00E9cis.\n7) Si tout localement correct, v\u00E9rifier propagation/serveurs parent et registrar (DS publi\u00E9).\r\n\r\nCas d\u0027\u00E9checs courants et comment les reconna\u00EEtre\r\nListe de sc\u00E9narios fr\u00E9quents et indices pour les reconna\u00EEtre :\n- DS absent au parent \u2192 delv/ dig montrent l\u0027absence de DS ; le validateur renvoie INSECURE ou SERVFAIL selon configuration.\n- DS incorrect/mismatch \u2192 DS pr\u00E9sent mais la v\u00E9rification du RRSIG avec DNSKEY \u00E9choue ; keytag/algorithms ne correspondent pas.\n- Signature expir\u00E9e \u2192 RRSIG contient une date de fin pass\u00E9e.\n- Mauvaise cl\u00E9 apr\u00E8s rollover \u2192 DNSKEY nouvelle mais DS au parent encore anciene (ou inverse).\n- Troncature UDP/EDNS \u2192 dig montre TC=1 ; la r\u00E9ponse TCP fonctionne.\n- Algorithme non support\u00E9 \u2192 logs indiquent algorithme non g\u00E9r\u00E9 ou erreur de v\u00E9rification cryptographique.\nPour chacun, l\u0027outil delv indiquera souvent le point exact de rupture.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "On ex\u00E9cute : delv @8.8.8.8 example.org A et l\u0027outil r\u00E9pond \u0022chain of trust broken at example.org: no DS\u0022. Que signifie ce message et quelles sont les \u00E9tapes suivantes pour lever l\u0027ambigu\u00EFt\u00E9 ?",
              "Answer": "Le parent (souvent le registrar/zone .org) ne publie pas d\u0027enregistrement DS pour example.org ; la zone enfant est donc trait\u00E9e comme non sign\u00E9e. \u00C9tapes : 1) v\u00E9rifier c\u00F4t\u00E9 autoritatif de example.org la pr\u00E9sence de DNSKEY et RRSIG; 2) demander au registrar si un DS doit \u00EAtre publi\u00E9 (ou v\u00E9rifier l\u0027interface du registrar); 3) confirmer qu\u0027il n\u0027y a pas eu d\u0027erreur de transmission du DS (format, digest type).",
              "Explanation": "\u00AB no DS \u00BB indique que la cha\u00EEne de confiance s\u0027arr\u00EAte au parent car aucun DS n\u0027est pr\u00E9sent. Si la zone est effectivement sign\u00E9e, le probl\u00E8me est la publication du DS; si la zone n\u0027est pas sign\u00E9e, alors aucun probl\u00E8me technique (comportement attendu). On doit donc v\u00E9rifier l\u0027\u00E9tat r\u00E9el de la zone et la publication chez le registrar."
            },
            {
              "Instruction": "dig \u002Bdnssec @ns1.example.net zone.example DNSKEY renvoie une DNSKEY avec keytag 12345 et alg 8. Le parent publie un DS avec keytag 54321. Quelle est la cause probable de l\u0027\u00E9chec de validation et comment la corriger ?",
              "Answer": "Il y a un d\u00E9calage de keytag entre la DNSKEY r\u00E9elle (12345) et le DS publi\u00E9 (54321) \u2192 DS erron\u00E9 ou obsol\u00E8te. Corriger en publiant au parent le DS correspondant \u00E0 la DNSKEY active (ou mettre \u00E0 jour la DNSKEY si rollover incomplet).",
              "Explanation": "La validation DNSSEC utilise le DS c\u00F4t\u00E9 parent qui doit correspondre \u00E0 une DNSKEY de l\u0027enfant (m\u00EAme keytag et m\u00EAme digest). Un keytag diff\u00E9rent signifie que le parent a publi\u00E9 un DS qui ne correspond pas \u00E0 la cl\u00E9 publique actuelle de la zone \u2014 typiquement d\u00FB \u00E0 un rollover mal coordonn\u00E9 ou \u00E0 une erreur manuelle au registrar."
            },
            {
              "Instruction": "dig \u002Bdnssec @1.1.1.1 bigzone.example TXT retourne TC=1 via UDP ; via TCP la r\u00E9ponse contient RRSIGs et AD=1. Quel diagnostic et quelles actions ?",
              "Answer": "Diagnostic : la r\u00E9ponse UDP est tronqu\u00E9e (TC=1), mais en TCP la validation r\u00E9ussit (AD=1). Probable cause : la taille de la r\u00E9ponse DNSSEC d\u00E9passe la MTU ou un pare-feu bloque la fragmentation/EDNS. Actions : permettre TCP/53, ajuster MTU/fragmentation ou r\u00E9duire la taille (NSEC3 opt), ou v\u00E9rifier les \u00E9quipements bloquant fragments/EDNS.",
              "Explanation": "Les grosses zones sign\u00E9es peuvent d\u00E9passer la taille UDP; la sp\u00E9cification pr\u00E9voit fallback vers TCP. Si le r\u00E9seau bloque TCP ou les fragments, la r\u00E9solution \u00E9choue pour les validateurs qui ne peuvent pas obtenir la r\u00E9ponse compl\u00E8te via UDP."
            },
            {
              "Instruction": "delv @9.9.9.9 signed.example A affiche \u00AB RRSIG validation failed: signature expired \u00BB. Que faut-il v\u00E9rifier et corriger sur la zone ?",
              "Answer": "V\u00E9rifier les dates de RRSIG sur la zone (inspirer par dig ou drill) et re-signer la zone si les signatures sont expir\u00E9es. V\u00E9rifier aussi l\u0027horloge du serveur de noms pour s\u0027assurer qu\u0027il n\u0027y a pas de d\u00E9calage horaire (NTP).",
              "Explanation": "Une signature expir\u00E9e signifie que les signatures RRSIG ont d\u00E9pass\u00E9 leur date de validit\u00E9 ; la solution est de re-g\u00E9n\u00E9rer de nouvelles signatures pour les RRsets et de d\u00E9ployer les nouvelles signatures. Un d\u00E9calage d\u0027horloge c\u00F4t\u00E9 serveur peut aussi provoquer une lecture d\u0027expiration incorrecte."
            }
          ]
        },
        {
          "Title": "Diagnostic des erreurs courantes (cha\u00EEne de confiance)",
          "Summary": "Cas fr\u00E9quents : DS absent ou erron\u00E9, erreur d\u0027alignement KSK/ZSK, mauvaise d\u00E9l\u00E9gation, signatures expir\u00E9es, probl\u00E8mes d\u0027horloge et de TTL. M\u00E9thode pas-\u00E0-pas pour isoler le maillon d\u00E9faillant.",
          "EstimatedMinutes": 60,
          "LearningObjectives": [
            "Comprendre la cha\u00EEne de confiance DNSSEC et ses maillons (root \u2192 parent \u2192 enfant \u2192 r\u00E9solveur)",
            "Identifier les causes fr\u00E9quentes d\u0027\u00E9chec de validation : DS absent/erron\u00E9, d\u00E9salignement KSK/ZSK, mauvaise d\u00E9l\u00E9gation, signatures expir\u00E9es, probl\u00E8mes d\u0027horloge et TTL",
            "Appliquer une m\u00E9thode pas-\u00E0-pas pour isoler le maillon d\u00E9faillant",
            "Utiliser des outils standards (dig, drill, delv, DNSViz, outils de calcul DS) pour diagnostiquer et corriger",
            "Savoir quelles actions de cl\u00F4ture entreprendre et quelles v\u00E9rifications finales effectuer"
          ],
          "Content": "R\u00E9sum\u00E9 et contexte\r\nLa \u00AB cha\u00EEne de confiance \u00BB DNSSEC relie la racine aux enregistrements sign\u00E9s d\u0027un domaine via des enregistrements DS publi\u00E9s par la zone parente. Un \u00E9chec de validation peut venir de n\u0027importe quel maillon : absence ou erreur du DS au parent, cl\u00E9s publi\u00E9es et DS non align\u00E9s, d\u00E9l\u00E9gation incorrecte (NS/glue), signatures RRSIG expir\u00E9es, probl\u00E8mes d\u0027heure sur serveurs ou r\u00E9solveurs, ou TTL/prolif\u00E9ration d\u0027anciens enregistrements. L\u0027objectif est d\u0027isoler syst\u00E9matiquement l\u0027origine du probl\u00E8me.\r\n\r\nCas fr\u00E9quents\r\n1) DS absent ou erron\u00E9 au niveau du parent : le parent n\u0027a pas de DS ou a un DS qui ne correspond \u00E0 la cl\u00E9 enfant.\n2) D\u00E9salignement KSK/ZSK : la cl\u00E9 publi\u00E9e dans DNSKEY ne correspond pas au DS (mauvais tag, algorithme, ou digest).\n3) Mauvaise d\u00E9l\u00E9gation : NS incoh\u00E9rents entre parent et enfant, ou glue manquante pour les serveurs en-bailiwick.\n4) Signatures expir\u00E9es : RRSIG de la zone ont une date d\u0027expiration pass\u00E9e ou des signatures trop r\u00E9centes/incoh\u00E9rentes.\n5) Probl\u00E8mes d\u0027horloge : r\u00E9solveur ou serveur ma\u00EEtre a une horloge hors tol\u00E9rance, rendant invalide la p\u00E9riode inception/expiration.\n6) Probl\u00E8mes li\u00E9s au TTL : propagation lente ou cache avec anciens enregistrements (DS/NS/KEY) provoquant discordance.\r\n\r\nM\u00E9thode pas-\u00E0-pas pour isoler le maillon d\u00E9faillant\r\n\u00C9tape 0 \u2014 Pr\u00E9parer les outils : dig, drill, delv, DNSViz, dnssec-dsfromkey/dnssec-keygen ou \u00E9quivalents.\n\u00C9tape 1 \u2014 Tester la validation depuis un r\u00E9solveur public (point de d\u00E9part) : dig \u002Bdnssec @1.1.1.1 example.tld A. Si la r\u00E9solution \u00E9choue avec SERVFAIL et que la cause semble DNSSEC, poursuivre.\n\u00C9tape 2 \u2014 V\u00E9rifier depuis la racine vers le domaine (trace DNSSEC) : dig \u002Btrace \u002Bdnssec example.tld. Chercher le point o\u00F9 la cha\u00EEne se brise (absence de DS, \u00E9chec de v\u00E9rification de RRSIG,...).\n\u00C9tape 3 \u2014 V\u00E9rifier le DS au parent : dig @parent-server DS example.tld \u002Bshort. Comparer avec le DNSKEY publi\u00E9 par l\u0027enfant : dig @child-server DNSKEY example.tld \u002Bdnssec \u002Bshort. V\u00E9rifier le key tag, algorithme et digest.\n\u00C9tape 4 \u2014 Recalculer le DS \u00E0 partir du DNSKEY enfant : dnssec-dsfromkey zonefile ou utilitaire local, puis comparer le digest avec le DS au parent.\n\u00C9tape 5 \u2014 V\u00E9rifier les RRSIG et leur validit\u00E9 : dig @child-server A example.tld \u002Bdnssec et inspecter les champs inception/expiration des RRSIG. Si expir\u00E9es, re-signer la zone.\n\u00C9tape 6 \u2014 Contr\u00F4ler la d\u00E9l\u00E9gation : comparer NS au parent (dig @parent NS example.tld) et NS au n\u0153ud enfant (dig NS example.tld). V\u00E9rifier la pr\u00E9sence de glue pour NS en-bailiwick (adresses donn\u00E9es par le parent via A/AAAA).\n\u00C9tape 7 \u2014 V\u00E9rifier les horloges : sur les serveurs ma\u00EEtres et sur le r\u00E9solveur effectuant la validation. Une horloge trop en avance ou retard\u00E9e peut rendre RRSIG invalides. Utiliser ntp/chrony et v\u00E9rifier l\u0027heure avec date/ntpq.\n\u00C9tape 8 \u2014 V\u00E9rifier le cache/TTL : forcer une r\u00E9cursion depuis un r\u00E9solveur propre (r\u00E9solveur non mis en cache) ou attendre la dur\u00E9e maximale d\u0027un TTL suspect. Purger caches si possible.\n\u00C9tape 9 \u2014 Finaliser : une fois la cause identifi\u00E9e (par ex. DS manquant), appliquer la correction (publier DS au parent, re-signer, corriger NS/glue, corriger horloge), puis retester avec dig \u002Btrace \u002Bdnssec et outils de visualisation (DNSViz) pour confirmer la cha\u00EEne intacte.\r\n\r\nSignes et sorties \u00E0 rep\u00E9rer dans les commandes\r\ndig \u002Bdnssec : RRSIG pr\u00E9sents, et dans cas d\u0027\u00E9chec DNSSEC on observe g\u00E9n\u00E9ralement SERVFAIL. dig \u002Btrace : indique le saut o\u00F9 la validation \u00E9choue. dig @parent DS : absence signifie DS manquant au parent. dig @child DNSKEY : liste des cl\u00E9s et leurs key tags. Outils de calcul de digest : permettent de v\u00E9rifier si le DS du parent correspond vraiment au DNSKEY enfant. Les timestamps inception/expiration dans RRSIG donnent la fen\u00EAtre de validit\u00E9.\r\n\r\nOutils recommand\u00E9s\r\ndig (BIND), drill (ldns), delv (debugger DNSSEC interactif), DNSViz (analyse graphique de la cha\u00EEne de confiance), dnssec-dsfromkey / dnssec-keygen (calcul/gestion des DS et cl\u00E9s), outils de monitoring et NTP/chrony pour l\u0027horloge. Utiliser \u00E9galement les logs du serveur DNS (named, nsd, knot, powerdns) pour d\u00E9tecter erreurs de signature ou \u00E9chec de chargement des cl\u00E9s.\r\n\r\nBonnes pratiques et cl\u00F4ture\r\n1) Automatiser la g\u00E9n\u00E9ration et publication des DS (CDS/CDNSKEY) si le registre et le parent le supportent ; 2) Mettre en place un processus de rollover clair et document\u00E9 (KSK vs ZSK) ; 3) S\u0027assurer que les horloges sont synchronis\u00E9es sur tous les serveurs ; 4) Apr\u00E8s correction, v\u00E9rifier depuis plusieurs r\u00E9solveurs publics et via DNSViz ; 5) Tenir un journal des actions et des timestamps (re-sign, publication DS) pour audits.\r\n\r\nCheck\u2011list rapide de d\u00E9pannage\r\n1) dig \u002Btrace \u002Bdnssec pour localiser l\u0027\u00E9chec. 2) V\u00E9rifier DS au parent vs DNSKEY enfant (key tag algorithme digest). 3) V\u00E9rifier les RRSIG inception/expiration. 4) Contr\u00F4ler NS parent/child et glue. 5) V\u00E9rifier l\u0027heure syst\u00E8me sur serveurs et r\u00E9solveurs. 6) Purger caches si TTL obsol\u00E8te. 7) Retester et documenter.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 DS absent : Vous suspectez que la validation DNSSEC \u00E9choue parce que le parent n\u0027a pas de DS pour example.tld. Indiquez les commandes \u00E0 ex\u00E9cuter pour confirmer cela et d\u00E9crivez le point pr\u00E9cis \u00E0 v\u00E9rifier dans la sortie.",
              "Answer": "Commandes \u00E0 ex\u00E9cuter : 1) dig \u002Btrace \u002Bdnssec example.tld 2) dig @\u003Cserveur_parent\u003E DS example.tld \u002Bshort 3) dig @\u003Cserveur_enfant\u003E DNSKEY example.tld \u002Bdnssec \u002Bshort. Point \u00E0 v\u00E9rifier : l\u0027absence de ligne DS dans la sortie du dig vers le parent. Si le parent renvoie aucune entr\u00E9e DS alors que l\u0027enfant a des DNSKEY sign\u00E9s, la cha\u00EEne est rompue au parent.",
              "Explanation": "dig \u002Btrace \u002Bdnssec montrera o\u00F9 la validation \u00E9choue (souvent SERVFAIL au saut du parent). En interrogeant explicitement le serveur parent pour l\u0027enregistrement DS, on confirme s\u0027il y a un DS publi\u00E9. Si le parent ne renvoie aucun DS mais l\u0027enfant publie des DNSKEY et RRSIG valides, il faut publier un DS correct au parent ou retirer la signature si on retire DNSSEC."
            },
            {
              "Instruction": "Exercice 2 \u2014 D\u00E9salignement KSK/ZSK : On observe que la validation \u00E9choue malgr\u00E9 la pr\u00E9sence d\u0027un DS au parent. Quelle proc\u00E9dure permet de v\u00E9rifier si le DS correspond r\u00E9ellement \u00E0 la cl\u00E9 publi\u00E9e par le domaine enfant ?",
              "Answer": "Proc\u00E9dure : 1) r\u00E9cup\u00E9rer le DNSKEY de l\u0027enfant : dig @\u003Cchild\u003E DNSKEY example.tld \u002Bdnssec \u002Bshort 2) calculer le DS \u00E0 partir du DNSKEY (outil dnssec-dsfromkey ou dnssec-keygen --compute-ds) 3) r\u00E9cup\u00E9rer le DS du parent : dig @\u003Cparent\u003E DS example.tld \u002Bshort 4) comparer les digests et key tags. Si le digest/key tag diff\u00E8re, il y a un d\u00E9salignement.",
              "Explanation": "Le DS est un hash de la DNSKEY. M\u00EAme si un DS est pr\u00E9sent, il doit correspondre exactement au hash calcul\u00E9 depuis la cl\u00E9 enfant (m\u00EAme algorithme et m\u00EAme key tag). Le calcul local permet de confirmer si le DS publi\u00E9 est celui qui correspond \u00E0 la cl\u00E9 actuellement en zone. Si non, soit le parent contient un ancien DS (mettre \u00E0 jour), soit la zone enfant a roul\u00E9 ses cl\u00E9s sans mise \u00E0 jour du parent."
            },
            {
              "Instruction": "Exercice 3 \u2014 Mauvaise d\u00E9l\u00E9gation / glue : Un domaine example.tld ne r\u00E9sout pas depuis l\u0027ext\u00E9rieur. Expliquez comment v\u00E9rifier si la d\u00E9l\u00E9gation NS et les adresses glue sont correctes et coh\u00E9rentes entre parent et enfant.",
              "Answer": "\u00C9tapes : 1) interroger le parent pour les NS : dig @\u003Cparent\u003E NS example.tld \u002Bshort 2) interroger le n\u0153ud enfant pour les NS : dig NS example.tld \u002Bshort 3) comparer les listes ; elles doivent \u00EAtre identiques. 4) pour chaque nameserver en-bailiwick (ns1.example.tld), v\u00E9rifier que le parent publie les enregistrements A/AAAA (glue) : dig @\u003Cparent\u003E A ns1.example.tld \u002Bshort. Si glue manquante pour in\u2011bailiwick NS, la r\u00E9solution peut \u00E9chouer.",
              "Explanation": "Le parent doit contenir la d\u00E9l\u00E9gation (les noms des serveurs NS) et, pour les serveurs dont le nom est sous le m\u00EAme domaine (in-bailiwick), le parent doit aussi fournir les adresses (glue). Un mismatch NS (parent vs enfant) provoque incoh\u00E9rence et parfois r\u00E9solution erron\u00E9e ; l\u0027absence de glue emp\u00EAche la d\u00E9couverte des adresses des serveurs."
            },
            {
              "Instruction": "Exercice 4 \u2014 Signatures expir\u00E9es et horloge : Vous voyez des RRSIG avec des dates d\u0027expiration d\u00E9j\u00E0 d\u00E9pass\u00E9es. Que devez-vous v\u00E9rifier imm\u00E9diatement et quelles actions entreprendre ?",
              "Answer": "V\u00E9rifier : 1) l\u0027heure syst\u00E8me sur le serveur ma\u00EEtre et les serveurs secondaires (commande date) ; 2) que les RRSIG montrent bien une date d\u0027expiration pass\u00E9e (dig \u002Bdnssec). Actions : si l\u0027heure syst\u00E8me est incorrecte, corriger-la via NTP/chrony et red\u00E9marrer les services si n\u00E9cessaire. Si les signatures sont r\u00E9ellement expir\u00E9es, re-signer la zone (g\u00E9n\u00E9rer de nouveaux RRSIG) et republier. Apr\u00E8s correction, retester la validation depuis plusieurs r\u00E9solveurs.",
              "Explanation": "Une horloge mal r\u00E9gl\u00E9e peut faire appara\u00EEtre des signatures valides comme expir\u00E9es ou pas encore valides. Corriger l\u0027horloge est prioritaire. Si l\u0027horloge est correcte mais les RRSIG ont expir\u00E9, cela signifie que la zone n\u0027a pas \u00E9t\u00E9 re-sign\u00E9e : il faut ex\u00E9cuter le processus de signature (automatique si outil de d\u00E9ploiement pr\u00E9sent) et s\u0027assurer de la publication compl\u00E8te des nouveaux RRSIG."
            }
          ]
        },
        {
          "Title": "Erreurs li\u00E9es aux signatures et aux algorithmes",
          "Summary": "Analyse des probl\u00E8mes li\u00E9s aux algorithmes obsol\u00E8tes ou non support\u00E9s, rollover de cl\u00E9s, incoh\u00E9rences d\u0027algorithmes entre DS et DNSKEY, et strat\u00E9gies de mitigation.",
          "EstimatedMinutes": 50,
          "LearningObjectives": [
            "Comprendre les causes courantes d\u0027erreurs li\u00E9es aux signatures et aux algorithmes DNSSEC (algorithmes obsol\u00E8tes, incompatibilit\u00E9s, rollover de cl\u00E9s).",
            "Savoir d\u00E9tecter et diagnostiquer les probl\u00E8mes de validation DNSSEC (signatures expir\u00E9es, algorithmes non support\u00E9s, incoh\u00E9rences DS/DNSKEY).",
            "Ma\u00EEtriser les proc\u00E9dures de rollover de cl\u00E9 (pr\u00E9par\u00E9 et d\u0027urgence) et les meilleures pratiques pour changer d\u0027algorithme sans interrompre la validation.",
            "Savoir coordonner les changements entre zone et parent (publication/modification du DS) et minimiser les risques d\u0027indisponibilit\u00E9.",
            "Appliquer des strat\u00E9gies de mitigation efficaces (double-signing, publication progressive, restauration rapide) et automatiser la surveillance.",
            "Prendre des d\u00E9cisions adapt\u00E9es selon le contexte (infrastructure interne, r\u00E9solveurs clients, exigences r\u00E9glementaires)."
          ],
          "Content": "Contexte et risques principaux\r\nLes erreurs li\u00E9es aux signatures et aux algorithmes DNSSEC surviennent quand la cha\u00EEne de confiance ne peut \u00EAtre valid\u00E9e. Causes typiques : algorithmes obsol\u00E8tes ou non support\u00E9s par certains validateurs, signatures expir\u00E9es ou g\u00E9n\u00E9r\u00E9es avec une cl\u00E9 absente, incoh\u00E9rences entre l\u0027enregistrement DS au parent et la cl\u00E9 DNSKEY publi\u00E9e dans la zone, et erreurs lors de rollovers de cl\u00E9s. Les cons\u00E9quences vont du retour d\u0027une r\u00E9solution non s\u00E9curis\u00E9e \u00E0 des \u00E9checs complets (SERVFAIL) pour les r\u00E9solutions DNS des clients d\u00E9pendant de la validation.\r\n\r\nAlgorithmes obsol\u00E8tes ou non support\u00E9s\r\nCertains algorithmes historiques (par exemple RSA/SHA-1) sont consid\u00E9r\u00E9s comme obsol\u00E8tes et peuvent ne plus \u00EAtre support\u00E9s par des r\u00E9solveurs modernes ou \u00EAtre d\u00E9conseill\u00E9s pour des raisons de s\u00E9curit\u00E9. De nouveaux algorithmes (p. ex. ECDSA, Ed25519) peuvent ne pas \u00EAtre support\u00E9s par des infrastructure ou des r\u00E9solveurs anciens. Identifier le probl\u00E8me : v\u00E9rifier les algorithmes utilis\u00E9s dans les enregistrements DNSKEY et RRSIG. D\u00E9tection : outils comme dig \u002Bdnssec, drill, ou les journaux des validateurs indiquent souvent \u0022algorithm not supported\u0022 ou \u0022bad algorithm\u0022. Mitigation : re-signer la zone avec algorithmes largement support\u00E9s, effectuer un rollover d\u0027algorithme planifi\u00E9 (double-signing durant la transition), informer les parties prenantes et maintenir compatibilit\u00E9 transitoire lorsqu\u0027elle est n\u00E9cessaire.\r\n\r\nRollover de cl\u00E9s : principes et m\u00E9thodes\r\nRollover planifi\u00E9 de KSK/ZSK : pr\u00E9parer une nouvelle cl\u00E9 (key generation), publier la nouvelle DNSKEY dans la zone (sans encore retirer l\u0027ancienne), signer la zone avec les anciennes et nouvelles cl\u00E9s (double-signing), et, pour une KSK, soumettre un nouveau DS au parent. Attendre la propagation et v\u00E9rifier que les validateurs acceptent la nouvelle cl\u00E9, puis retirer l\u0027ancienne apr\u00E8s des TTLs appropri\u00E9s. Rollover d\u0027urgence : si une cl\u00E9 est compromise ou si un changement doit \u00EAtre imm\u00E9diat, la proc\u00E9dure peut \u00EAtre acc\u00E9l\u00E9r\u00E9e mais n\u00E9cessite coordination, publication rapide d\u0027anciennes signatures restaur\u00E9es et potentiellement la r\u00E9introduction d\u0027un DS pr\u00E9c\u00E9dent chez le parent. Toujours planifier les p\u00E9riodes de chevauchement pour \u00E9viter des fen\u00EAtres o\u00F9 seules des signatures non valides existent.\r\n\r\nIncoh\u00E9rences entre DS et DNSKEY\r\nUne incoh\u00E9rence se produit quand le DS publi\u00E9 chez le parent ne correspond pas \u00E0 la cl\u00E9 DNSKEY publi\u00E9e dans la zone (mauvais digest, mauvais algorithme, cl\u00E9 absente). Sympt\u00F4mes : validation \u00E9choue syst\u00E9matiquement, la zone est consid\u00E9r\u00E9e comme non valide et les r\u00E9solveurs peuvent renvoyer SERVFAIL. Causes fr\u00E9quentes : erreur humaine lors de la mise \u00E0 jour du DS, utilisation d\u0027un digest de type diff\u00E9rent, rollover incomplet (nouvelle cl\u00E9 publi\u00E9e dans la zone mais DS non mis \u00E0 jour), ou publication simultan\u00E9e d\u0027un DS erron\u00E9. D\u00E9tection : comparer le DS dans la zone parente avec le hash (digest) calcul\u00E9 des DNSKEY pr\u00E9sents; les outils de diagnostic et validateurs renvoient des messages explicites. Correction : r\u00E9tablir l\u0027alignement en publiant le DS correct \u00E0 la partie parentale ou en restaurant la DNSKEY attendue, en privil\u00E9giant une proc\u00E9dure qui \u00E9vite une fen\u00EAtre sans DS valide.\r\n\r\nStrat\u00E9gies de mitigation d\u00E9taill\u00E9es\r\n1) Double-signing et double-DS : conserver simultan\u00E9ment anciennes et nouvelles cl\u00E9s/signatures jusqu\u0027\u00E0 propagation compl\u00E8te; pour la KSK, soumettre le DS du nouvel algorithme puis garder l\u0027ancien DS encore pr\u00E9sent jusqu\u0027\u00E0 confirmation. 2) Rollover en plusieurs \u00E9tapes : g\u00E9n\u00E9rer cl\u00E9 -\u003E publier DNSKEY -\u003E signer -\u003E publier DS au parent -\u003E attendre TTLs -\u003E retirer l\u0027ancienne cl\u00E9. 3) Restaurations rapides : avoir proc\u00E9dures et scripts pr\u00EAts pour r\u00E9introduire rapidement l\u0027ancienne cl\u00E9 et signatures si la validation \u00E9choue. 4) Tests et environnements de simulation : valider les changements dans un environnement de test et simuler diff\u00E9rents validateurs (anciens/nouveaux). 5) Surveillance et alerting : surveiller indicateurs (SERVFAILs, taux d\u0027\u00E9chec DNSSEC, logs de validateurs) et automatiser alertes. 6) Communication et coordination : informer op\u00E9rateurs du parent, registraires, et grandes parties prenantes ; coordonner priopert\u00E9 temporelle (TTL) et fen\u00EAtres de maintenance. 7) Politique d\u0027algorithme : d\u00E9cider d\u0027une liste d\u0027algorithmes support\u00E9s et planifier des rollovers r\u00E9guliers pour migrer loin des algorithmes d\u00E9pr\u00E9ci\u00E9s.\r\n\r\nOutils et diagnostics pratiques\r\nOutils utiles : dig \u002Bdnssec pour inspecter RRSIG/DNSKEY/DS, drill pour tests de validation, validators (Unbound, BIND) en mode debug, et services en ligne de validation DNSSEC. V\u00E9rifications cl\u00E9s : comparer le digest DS au calcul local de la DNSKEY; v\u00E9rifier dates d\u0027expiration des signatures (RRSIG) pour \u00E9viter signatures expir\u00E9es; rechercher messages d\u0027erreur tels que \u0022RRSIG verification failed\u0022, \u0022incompatible algorithm\u0022, ou \u0022SERVFAIL due to DNSSEC\u0022. Automatiser les v\u00E9rifications p\u00E9riodiques et conserver historiques pour d\u00E9tecter d\u00E9gradations apr\u00E8s changements.\r\n\r\nBonnes pratiques op\u00E9rationnelles\r\nPlanifier syst\u00E9matiquement les rollovers (ex : KSK tous les 1-3 ans selon politique), garder fen\u00EAtres de chevauchement confortables bas\u00E9es sur TTLs, documenter chaque \u00E9tape et mandat de validation, utiliser scripts et automatisation pour r\u00E9duire erreurs humaines, et tester tout changement avec clones de l\u0027environnement productif. \u00C9viter de compter uniquement sur l\u0027automatisation du trust anchor chez les r\u00E9solveurs (RFC 5011) sans comprendre ses implications : pour certaines topologies, une mise \u00E0 jour manuelle et coordonn\u00E9e du DS chez le parent est pr\u00E9f\u00E9rable.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Vous observez que votre zone renvoie SERVFAIL pour la plupart des clients DNSSEC-validants depuis la publication d\u0027une nouvelle cl\u00E9. Listez les trois premi\u00E8res v\u00E9rifications imm\u00E9diates \u00E0 effectuer pour diagnostiquer le probl\u00E8me.",
              "Answer": "1) V\u00E9rifier que la DNSKEY publi\u00E9e dans la zone contient bien la cl\u00E9 attendue et les algorithmes. 2) Comparer le DS publi\u00E9 chez le parent avec le digest calcul\u00E9 de la DNSKEY (alignement DS/DNSKEY). 3) Contr\u00F4ler les RRSIG pour expiration ou pour utilisation d\u0027un algorithme non support\u00E9.",
              "Explanation": "Ces v\u00E9rifications ciblent les causes les plus communes d\u0027\u00E9chec : cl\u00E9 publi\u00E9e incorrecte, mismatch entre DS parent et DNSKEY, et signatures expir\u00E9es/incompatibles. Elles se font rapidement avec des outils comme dig/drill et permettent d\u0027orienter la rem\u00E9diation (r\u00E9introduction de la bonne cl\u00E9, mise \u00E0 jour du DS, ou r\u00E9g\u00E9n\u00E9ration des signatures)."
            },
            {
              "Instruction": "D\u00E9crivez une proc\u00E9dure de rollover d\u0027algorithme pour une KSK de mani\u00E8re \u00E0 minimiser le risque d\u0027interruption pour les validateurs externes.",
              "Answer": "1) G\u00E9n\u00E9rer la nouvelle KSK localement. 2) Publier la nouvelle DNSKEY dans la zone sans retirer l\u0027ancienne (double DNSKEY). 3) Signer la zone avec l\u0027ancienne et la nouvelle KSK (double-signing). 4) Calculer le DS correspondant \u00E0 la nouvelle KSK et soumettre ce DS au parent. 5) Attendre la propagation et v\u00E9rifier que les validateurs acceptent la nouvelle KSK (monitoring). 6) Apr\u00E8s confirmation et d\u00E9lai suffisant (bas\u00E9 sur TTL), supprimer l\u0027ancienne KSK et son DS au parent.",
              "Explanation": "La cl\u00E9 du succ\u00E8s est le chevauchement : tant que l\u0027ancienne KSK et son DS existent, les validateurs ont le temps d\u0027apprendre et accepter la nouvelle KSK sans rupture. Les \u00E9tapes imposent de coordonner la soumission du DS au parent et d\u0027attendre la propagation avant suppression."
            },
            {
              "Instruction": "Votre monitoring signale que certains validateurs indiquent \u0022algorithm not supported\u0022 pour la signature RRSIG. Quelle strat\u00E9gie de mitigation appliquez-vous si le changement d\u0027algorithme est planifi\u00E9 mais quelques validateurs sont encore anciens ?",
              "Answer": "Mettre en place une p\u00E9riode transitoire de double-signing : conserver les signatures utilisant l\u0027ancien algorithme simultan\u00E9ment aux signatures utilisant le nouvel algorithme, afin de garantir compatibilit\u00E9 avec validateurs anciens et nouveaux. Planifier une p\u00E9riode d\u0027observation, informer parties prenantes, puis retirer progressivement l\u0027ancien algorithme quand sa base d\u0027utilisateurs a diminu\u00E9.",
              "Explanation": "Le double-signing permet aux validateurs qui n\u0027ont pas encore migr\u00E9 de continuer \u00E0 valider. Supprimer trop t\u00F4t l\u0027ancien algorithme cause des \u00E9checs pour validateurs non compatibles. La mitigation suppose aussi de surveiller l\u0027usage et d\u0027avoir une politique de fin de vie pour l\u0027ancien algorithme."
            }
          ]
        },
        {
          "Title": "Exercice pratique 1 : d\u00E9pannage d\u0027un \u00E9chec simple",
          "Summary": "Atelier guid\u00E9 sur un incident type (signature expir\u00E9e ou DS manquant) : collecte d\u0027informations, tests \u00E0 r\u00E9aliser, correction et v\u00E9rification de la r\u00E9solution.",
          "EstimatedMinutes": 60,
          "LearningObjectives": [
            "Reconna\u00EEtre et d\u00E9crire un incident DNSSEC courant (signature RRSIG expir\u00E9e ou cl\u00E9/DS manquante au parent).",
            "Collecter les donn\u00E9es n\u00E9cessaires pour diagnostiquer l\u0027incident (zones, enregistrements, journaux, dates).",
            "Ex\u00E9cuter les tests techniques pertinents pour localiser la cause (dig/drill/dnssec-tools, v\u00E9rification des signatures et de la pr\u00E9sence du DS).",
            "Appliquer les corrections appropri\u00E9es pour r\u00E9tablir la validation DNSSEC (re-signature, publication de DS, synchronisation des cl\u00E9s).",
            "V\u00E9rifier et valider la r\u00E9solution apr\u00E8s correction et documenter la cl\u00F4ture de l\u0027incident."
          ],
          "Content": "Introduction\r\nObjectif de l\u0027atelier : guider pas \u00E0 pas le d\u00E9pannage d\u0027un incident DNSSEC typique. Sc\u00E9narios types trait\u00E9s : (A) RRSIG expir\u00E9e / zone non re-sign\u00E9e, (B) DS absent au parent (ou incorrect). Ce module couvre la collecte d\u0027informations, les commandes de test, les actions correctives et les v\u00E9rifications finales.\r\n\r\nPr\u00E9requis et outils\r\nAcc\u00E8s aux serveurs DNS faisant autorit\u00E9, acc\u00E8s au registrar/zone parent pour publier DS, et aux fichiers de zone. Outils courants : dig, drill, delv, dnssec-tools (ldns), bind-utils (named-checkzone, dnssec-keygen, dnssec-signzone), openssl (pour dates), et interfaces d\u0027administration du registrar. Acc\u00E8s aux journaux des serveurs DNS et aux fichiers de configuration (named.conf, auto-dnssec).\r\n\r\nCollecte d\u0027informations\r\nInformations \u00E0 rassembler au d\u00E9but : nom de la zone, serveurs faisant autorit\u00E9, \u00E9tat actuel des enregistrements DNSKEY/DS/RRSIG, date/heure syst\u00E8me des serveurs, proc\u00E9dure automatique de re-signature (si pr\u00E9sente), changements r\u00E9cents (rotations de cl\u00E9, modifications chez le registrar), et copies des messages d\u0027erreur clients/validateurs. Noter aussi TTLs et dates d\u0027expiration visibles dans RRSIG.\r\n\r\nTests initiaux \u00E0 r\u00E9aliser\r\nCommandes et v\u00E9rifications de base :\n- V\u00E9rifier r\u00E9solution et DNSSEC depuis un validateur public : dig \u002Bdnssec @\u003Cserveur\u003E \u003Czone\u003E SOA / A pour voir AD et pr\u00E9sence RRSIG.\n- Obtenir RRSIG et DNSKEY : dig \u002Bdnssec DNSKEY \u003Czone\u003E ; dig \u002Bdnssec @parent \u003Czone\u003E DS\n- V\u00E9rifier signature et dates : dig \u002Bmulti \u002Bdnssec SOA \u003Czone\u003E ; examiner les champs inception/expire des RRSIG.\n- V\u00E9rifier que le DS publi\u00E9 au parent correspond \u00E0 la cl\u00E9 KSK (algorithme, digest) : comparer hash DS et calculer localement avec dnssec-dsfromkey.\n- Utiliser delv/drill pour tests de validation r\u00E9cursifs et voir o\u00F9 la validation casse.\n- Examiner journaux du serveur faisant autorit\u00E9 pour erreurs de signature ou d\u0027horloge.\r\n\r\nDiagnostic : interpr\u00E9tation des r\u00E9sultats\r\nSignes typiques :\n- RRSIG expir\u00E9e : RRSIG existant mais la date d\u0027expiration est ant\u00E9rieure \u00E0 l\u0027heure syst\u00E8me ; les validateurs refuseront. Cause : zone non re-sign\u00E9e automatiquement, t\u00E2che Cron d\u00E9sactiv\u00E9e ou \u00E9chec de re-signature.\n- DS absent/incorrect au parent : la zone autoritaire contient DNSKEY valides mais le parent n\u0027a pas le DS correspondant ou a un DS diff\u00E9rent ; les validateurs au-del\u00E0 du parent \u00E9chouent.\n- Probl\u00E8mes d\u0027horloge : si l\u0027heure syst\u00E8me est incorrecte, RRSIG appara\u00EEtront comme pas encore valides ou expir\u00E9s.\n- Mismatch KSK/ZSK : publications de DS correspondant \u00E0 une ancienne cl\u00E9 ou erreur lors de rotation de cl\u00E9.\r\n\r\nCorrection : cas A \u2014 RRSIG expir\u00E9e\r\n\u00C9tapes pratiques :\n1) Confirmer l\u0027expiration via dig (examiner expiry timestamp).\n2) V\u00E9rifier si la zone est sign\u00E9e automatiquement (dnssec-signzone en Cron ou m\u00E9canisme d\u0027auto-signing du serveur). Si le service est en panne, red\u00E9marrer / corriger l\u0027automate.\n3) Si re-signature manuelle n\u00E9cessaire : ex\u00E9cuter la commande de signature appropri\u00E9e (ex. dnssec-signzone ou outil \u00E9quivalent) sur la derni\u00E8re version de la zone. Si vous utilisez une KSK/ZSK, assurez-vous que les bonnes cl\u00E9s sont r\u00E9f\u00E9renc\u00E9es.\n4) D\u00E9ployer la nouvelle zone sign\u00E9e sur les serveurs faisant autorit\u00E9 (recharger le serveur DNS : rndc reload ou red\u00E9marrage contr\u00F4l\u00E9).\n5) V\u00E9rifier les timestamps des nouvelles RRSIG et s\u0027assurer qu\u0027ils couvrent l\u0027intervalle actuel avec marge suffisante.\n6) Surveiller pour s\u0027assurer qu\u0027aucune autre erreur n\u0027appara\u00EEt dans les logs.\r\n\r\nCorrection : cas B \u2014 DS manquant ou incorrect au parent\r\n\u00C9tapes pratiques :\n1) V\u00E9rifier que la zone contient la DNSKEY publique correspondant au DS attendu et identifier la cl\u00E9 KSK utilis\u00E9e pour g\u00E9n\u00E9rer le DS.\n2) Calculer le DS localement (ex. dnssec-dsfromkey ou ldns-key2ds) et v\u00E9rifier algorithme/digest.\n3) Si le DS n\u0027est pas publi\u00E9 chez le registrar/parent : cr\u00E9er la valeur DS correcte et la soumettre via l\u0027interface du registrar ou API.\n4) Si le DS est incorrect (valeur diff\u00E9rente) : corriger le DS publi\u00E9 par une nouvelle soumission.\n5) Si vous devez effectuer une rotation de KSK : suivre la proc\u00E9dure de double-publish (publier nouvelle DNSKEY, publier DS au parent, attendre propagation, puis retirer l\u0027ancienne) selon la politique choisie.\n6) Apr\u00E8s publication, attendre la propagation du parent (variable selon TTL et process du registrar) puis v\u00E9rifier.\r\n\r\nV\u00E9rification apr\u00E8s correction\r\nChecklist de validation :\n- Ex\u00E9cuter dig \u002Bdnssec pour v\u00E9rifier que les RRSIG sont pr\u00E9sentes et non expir\u00E9es et que la validation aboutit (AD flag ou delv OK).\n- V\u00E9rifier la pr\u00E9sence et la correspondance du DS au parent (dig @parent DS \u003Czone\u003E).\n- Tester depuis plusieurs r\u00E9solveurs publics et outils de validation (Google Public DNS, Cloudflare, delv, dnsviz) pour confirmer r\u00E9solutions externes.\n- Examiner journaux de validateurs si accessible et surveiller pour r\u00E9gressions pendant au moins une fen\u00EAtre correspondant aux TTLs.\n- Mettre \u00E0 jour la fiche d\u0027incident (actions effectu\u00E9es, timestamps, commandes utilis\u00E9es, preuves) et clore.\r\n\r\nCl\u00F4ture, suivi et bonnes pratiques\r\nDocumenter cause racine, actions entreprises, le\u00E7ons apprises et recommandations (p.ex. automatiser la re-signature, monitorer l\u0027\u00E9tat DNSSEC, tester la proc\u00E9dure de rotation, configurer alertes sur RRSIG expirant). \u00C9tablir un plan de test p\u00E9riodique pour s\u0027assurer que les signatures et DS restent corrects.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 Diagnostic d\u0027une RRSIG expir\u00E9e : Vous recevez un rapport indiquant que les validateurs renvoient une erreur DNSSEC failure pour example.com. Commandes utiles ont renvoy\u00E9 : dig \u002Bdnssec SOA example.com montre un RRSIG avec expiration ant\u00E9rieure \u00E0 l\u0027heure actuelle. D\u00E9crivez les \u00E9tapes concr\u00E8tes pour r\u00E9soudre cet incident et les commandes cl\u00E9s que vous lanceriez.",
              "Answer": "1) Confirmer l\u0027expiration : dig \u002Bdnssec SOA example.com et noter les champs inception/expire.\n2) V\u00E9rifier l\u0027heure syst\u00E8me sur les serveurs faisant autorit\u00E9 (date / timedatectl).\n3) V\u00E9rifier si la zone est configur\u00E9e pour signature automatique (contr\u00F4ler Cron, systemd timers, ou auto-signing du serveur) et les logs de l\u0027outil de signature.\n4) Si n\u00E9cessaire re-signer la zone manuellement (ex. dnssec-signzone -o example.com db.example.com) puis recharger le serveur (rndc reload).\n5) V\u00E9rifier les nouvelles RRSIG : dig \u002Bdnssec SOA example.com et s\u0027assurer que les timestamps sont corrects.\n6) Surveiller les logs et tester depuis plusieurs validateurs.",
              "Explanation": "La proc\u00E9dure suit la logique : confirmer le probl\u00E8me (preuve avec dig), exclure cause d\u0027horloge, identifier si l\u0027automatisation a \u00E9chou\u00E9, corriger (re-sign) puis d\u00E9ployer et v\u00E9rifier. Les commandes cit\u00E9es sont celles g\u00E9n\u00E9ralement utilis\u00E9es pour inspection et re-signature."
            },
            {
              "Instruction": "Exercice 2 \u2014 DS manquant au parent : Le serveur faisant autorit\u00E9 contient une DNSKEY KSK publique. Cependant, les validateurs externes n\u0027arrivent pas \u00E0 valider la zone. En local vous ex\u00E9cutez dig @a.root-servers.net DS example.org et ne voyez pas de DS. Quels sont vos actions et dans quel ordre pour r\u00E9tablir la validation ?",
              "Answer": "1) G\u00E9n\u00E9rer/extraire le DS correspondant \u00E0 la KSK locale (ex. dnssec-dsfromkey Kexample.org.\u002B008\u002B12345.key).\n2) V\u00E9rifier que la DS calcul\u00E9e correspond bien \u00E0 la cl\u00E9 publique utilis\u00E9e pour signer (contr\u00F4le d\u0027algorithme et digest).\n3) Se connecter \u00E0 l\u0027interface du registrar/parent pour soumettre la valeur DS correcte (ou utiliser l\u0027API du registrar).\n4) Confirmer la publication via dig @parent DS example.org apr\u00E8s propagation.\n5) Une fois le DS pr\u00E9sent, tester la validation depuis validateurs externes (delv/drill) et surveiller.\n6) Si une rotation de KSK \u00E9tait en cours, suivre la proc\u00E9dure pr\u00E9vue pour double publication puis retrait de l\u0027ancienne cl\u00E9.",
              "Explanation": "L\u0027absence de DS au parent casse la cha\u00EEne de confiance. La solution est de calculer le DS correct \u00E0 partir de la DNSKEY en usage et de le publier au parent. L\u0027ordre garanti d\u0027abord la coh\u00E9rence locale (DS calcul\u00E9), puis la publication et la v\u00E9rification."
            },
            {
              "Instruction": "Exercice 3 \u2014 Commandes de v\u00E9rification et r\u00E9sultats attendus : Donnez trois commandes concr\u00E8tes pour v\u00E9rifier apr\u00E8s correction que la zone est bien valid\u00E9e par les r\u00E9solveurs, et d\u00E9crivez bri\u00E8vement ce que doit montrer chacune.",
              "Answer": "1) dig \u002Bdnssec @\u003Cserveur_authoritatif\u003E example.net SOA\n   - R\u00E9sultat attendu : pr\u00E9sence de l\u0027enregistrement SOA et de RRSIG associ\u00E9s avec dates valides ; le champ AD peut ne pas \u00EAtre pr\u00E9sent si le serveur n\u0027effectue pas de validation mais les RRSIG doivent \u00EAtre non expir\u00E9s.\n2) delv example.net @1.1.1.1\n   - R\u00E9sultat attendu : delv doit indiquer que la validation est OK et ne renvoyer aucune erreur DNSSEC (cha\u00EEne de confiance v\u00E9rifi\u00E9e).\n3) dig @\u003Cparent_server\u003E DS example.net\n   - R\u00E9sultat attendu : le serveur parent doit renvoyer la/les valeurs DS publi\u00E9es et celles-ci doivent correspondre au DS calcul\u00E9 localement.",
              "Explanation": "Ces commandes couvrent : v\u00E9rification directe des signatures sur le serveur faisant autorit\u00E9 (dig \u002Bdnssec), test de validation c\u00F4t\u00E9 r\u00E9curseur public (delv ou drill), et confirmation de la pr\u00E9sence du DS chez le parent. Ensemble elles d\u00E9montrent qu\u0027on a corrig\u00E9 \u00E0 la fois la zone et la cha\u00EEne de confiance."
            }
          ]
        },
        {
          "Title": "Exercice pratique 2 : incident complexe en environnement multi-r\u00E9solveurs",
          "Summary": "Sc\u00E9nario avanc\u00E9 impliquant rollover de cl\u00E9s, caches divergents et r\u00E9solveurs avec politiques diff\u00E9rentes. Travail en \u00E9quipe pour \u00E9laborer plan de rem\u00E9diation et v\u00E9rification post-correction.",
          "EstimatedMinutes": 120,
          "LearningObjectives": [
            "Comprendre les impacts d\u2019un rollover de cl\u00E9s DNS (KSK/ZSK) sur diff\u00E9rents r\u00E9solveurs et caches",
            "Diagnostiquer un incident impliquant des caches divergents et des r\u00E9solveurs appliquant des politiques diff\u00E9rentes (DNSSEC strict vs permissif)",
            "\u00C9laborer un plan de rem\u00E9diation coordonn\u00E9 en \u00E9quipe pour r\u00E9tablir la r\u00E9solution correcte tout en limitant les r\u00E9gressions",
            "Mettre en place et ex\u00E9cuter des v\u00E9rifications post-correction robustes pour confirmer la coh\u00E9rence des donn\u00E9es \u00E0 travers l\u2019\u00E9cosyst\u00E8me",
            "R\u00E9diger une communication op\u00E9rationnelle claire (status, actions prises, recommandations) et pr\u00E9parer un compte\u2011rendu postmortem technique"
          ],
          "Content": "Contexte du sc\u00E9nario\r\nVous \u00EAtes l\u2019\u00E9quipe de validation et d\u00E9pannage d\u2019un op\u00E9rateur de registre/zone de premier ou second niveau. Un rollover de cl\u00E9s DNSSEC a \u00E9t\u00E9 effectu\u00E9 r\u00E9cemment. Peu apr\u00E8s, des rapports d\u2019utilisateurs et des alertes de monitoring indiquent des \u00E9checs intermittents de r\u00E9solution pour certains clients. Les sympt\u00F4mes varient selon l\u2019emplacement r\u00E9seau et le r\u00E9solveur consult\u00E9 : certains r\u00E9solveurs renvoient des r\u00E9ponses sign\u00E9es valides, d\u2019autres \u00E9chouent la validation DNSSEC, et certains renvoient des donn\u00E9es anciennes stock\u00E9es en cache. L\u2019incident implique des caches r\u00E9solveurs publics, des r\u00E9solveurs d\u2019ISP ayant des politiques diff\u00E9rentes (mode strict, mode permissif ou validation d\u00E9l\u00E9gu\u00E9e) et des TTLs non homog\u00E8nes dans les cha\u00EEnes de d\u00E9l\u00E9gation.\r\n\r\n\u00C9l\u00E9ments techniques cl\u00E9s\r\nComposants \u00E0 consid\u00E9rer : KSK/ZSK (Key Signing Key / Zone Signing Key), DS dans la zone parente, enregistrements RRSIG, caches r\u00E9cursifs (RRset TTL), politiques des validateurs DNSSEC (validation strict/ permissive), m\u00E9canismes de rollover (pre-publish, double-signing, retrait progressif), propagation des mises \u00E0 jour de DS aupr\u00E8s des registrars/parents, et outils de diagnostic (dig \u002Bdnssec, ldns, delv, drill, tcpdump, logs de r\u00E9solution).\r\n\r\nSympt\u00F4mes et hypoth\u00E8ses initiales\r\nSympt\u00F4mes observables : \u00E9checs NXDOMAIN ou SERVFAIL pour certains r\u00E9solveurs, r\u00E9ponses correctes pour d\u2019autres, incoh\u00E9rences temporelles indiquant caches divergents, erreurs DNSSEC type RRSIG invalid ou DS mismatch. Hypoth\u00E8ses \u00E0 tester : 1) le rollover n\u2019a pas respect\u00E9 la strat\u00E9gie double-signing correctement ; 2) certaines caches contiennent RRSIG ou enregistrements anciens au-del\u00E0 des TTL attendus ; 3) le DS parent n\u2019a pas \u00E9t\u00E9 mis \u00E0 jour ou a \u00E9t\u00E9 mis \u00E0 jour pr\u00E9matur\u00E9ment ; 4) des r\u00E9solveurs en mode strict rejettent la zone suite \u00E0 signature invalide.\r\n\r\nOrganisation du travail en \u00E9quipe\r\nFormer des r\u00F4les : lead incident (coordination), diagnostiqueur (collecte logs \u0026 traces), op\u00E9rateur zone (v\u00E9rification signatures \u0026 cl\u00E9s), r\u00E9seau (monitoring \u0026 routage), communication (status internes/externes). D\u00E9finir canal de communication unique et proc\u00E9dure d\u2019escalade. Prioriser actions ayant faible risque (collecte de donn\u00E9es, tests non intrusifs) avant modifications sur la zone en production.\r\n\r\nPlan de rem\u00E9diation type\r\n\u00C9tapes recommand\u00E9es : 1) collecter logs et exemples de r\u00E9solutions probl\u00E9matiques (dig \u002Btrace, dig \u002Bdnssec, timestamps, source IP des r\u00E9solveurs) ; 2) v\u00E9rifier l\u2019\u00E9tat des signatures locales avec outils de signature et l\u2019alignement des KSK/ZSK ; 3) v\u00E9rifier DS chez le parent ; 4) si mauvaise double-signing : restaurer temporairement l\u2019ancienne cl\u00E9/versions sign\u00E9es (retour en arri\u00E8re contr\u00F4l\u00E9) ou publier cl\u00E9s pr\u00E9-publi\u00E9es ; 5) coordonner avec grands r\u00E9solveurs publics/ISPs pour purge de caches ou acc\u00E9l\u00E9ration de refresh si n\u00E9cessaire ; 6) appliquer changements minimaux et surveiller ; 7) documenter et pr\u00E9parer postmortem.\r\n\r\nV\u00E9rifications post-correction\r\nChecks essentiels : valider depuis multiples r\u00E9solveurs publics (Google, Cloudflare, OpenDNS), depuis r\u00E9solveurs d\u2019ISP affect\u00E9s et depuis clients internes ; v\u00E9rifier RRSIG/KEY/DS coherents entre zone et parent ; v\u00E9rifier TTL et propagation ; monitorer taux de SERVFAIL/NXDOMAIN ; ex\u00E9cuter tests automatis\u00E9s r\u00E9p\u00E9t\u00E9s sur 48-72h pour confirmer stabilit\u00E9. Archivez toutes les traces et commandes utilis\u00E9es.\r\n\r\nCommunication et postmortem\r\nProduire messages clairs pour parties prenantes : statut actuel, impact estim\u00E9, actions entreprises et plan restant. Apr\u00E8s r\u00E9tablissement, r\u00E9diger un postmortem technique incluant timeline, cause racine, d\u00E9cisions prises, enseignements, actions pr\u00E9ventives (proc\u00E9dures de rollover plus strictes, tests pr\u00E9-prod, playbooks de rollback, accords avec grands r\u00E9solveurs pour purge coordonn\u00E9e).\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "Exercice 1 \u2014 Diagnostic initial : vous recevez deux \u00E9chantillons de r\u00E9solution d\u2019un nom de zone : de la part d\u2019un r\u00E9solveur A (Google Public DNS) la r\u00E9solution \u00E9choue (SERVFAIL) et de la part d\u2019un r\u00E9solveur B (r\u00E9solveur interne permissif) la r\u00E9solution r\u00E9ussit. D\u00E9crivez les trois commandes principales que vous lanceriez imm\u00E9diatement pour collecter des informations, et ce que vous recherchez dans leurs sorties.",
              "Answer": "1) dig \u002Bdnssec example.tld @8.8.8.8 \u002Bnoall \u002Banswer \u002Bcomments : pour voir si le r\u00E9solveur A renvoie SERVFAIL et observer les RRSIG/STATUS/AD bits. 2) dig \u002Bdnssec example.tld @\u003Cinternal-resolver\u003E \u002Bnoall \u002Banswer \u002Bcomments : pour comparer la r\u00E9ponse r\u00E9ussie et examiner les RRSIG, TTL et signatures pr\u00E9sentes. 3) dig \u002Btrace example.tld @8.8.8.8 : pour tracer la r\u00E9solution depuis la racine et v\u00E9rifier \u00E0 quel niveau la validation \u00E9choue (zone parent, d\u00E9l\u00E9gation, zone elle-m\u00EAme). Dans les sorties on recherche : incoh\u00E9rence de RRSIG, DS mismatch entre parent et zone, diff\u00E9rences de TTL/RRSIG expir\u00E9s, et le point de validation qui cause le SERVFAIL.",
              "Explanation": "Ces commandes fournissent une vue comparative entre r\u00E9solveurs et permettent d\u2019isoler si l\u2019\u00E9chec est li\u00E9 \u00E0 DNSSEC (RRSIG/DS), \u00E0 d\u00E9l\u00E9gation (DS absent/incorrect) ou \u00E0 signatures expir\u00E9es. \u002Btrace localise la partie de la cha\u00EEne de r\u00E9solution posant probl\u00E8me. Les bits AD/RA et les messages de statut aident \u00E0 interpr\u00E9ter si la validation est faite et o\u00F9 elle casse."
            },
            {
              "Instruction": "Exercice 2 \u2014 \u00C9laboration du plan de rem\u00E9diation : apr\u00E8s diagnostic, vous constatez que la zone a \u00E9t\u00E9 sign\u00E9e uniquement avec la nouvelle ZSK et que la DS parent a \u00E9t\u00E9 mise \u00E0 jour trop t\u00F4t (le double-signing n\u2019a pas \u00E9t\u00E9 maintenu). Proposez un plan de rem\u00E9diation en 5 \u00E9tapes minimales, prioris\u00E9es, et pr\u00E9cisez les risques associ\u00E9s \u00E0 chaque \u00E9tape.",
              "Answer": "1) Communiquer statut interne et bloquer toute autre op\u00E9ration de signature ou modification de DS (risque faible : retard mais \u00E9vite aggravation). 2) Republisher l\u2019ancienne ZSK/AZSIG (si disponible) ou restaurer une version sign\u00E9e double-sign\u00E9e afin de r\u00E9introduire la signature que certains caches attendent (risque moyen : n\u00E9cessite acc\u00E8s aux cl\u00E9s/archives et coordination temporelle). 3) Informer et coordonner avec principaux r\u00E9solveurs publics et ISPs affect\u00E9s pour demander purge acc\u00E9l\u00E9r\u00E9e des caches ou rollback cibl\u00E9 si possible (risque \u00E9lev\u00E9 : d\u00E9pend des tiers et communications peuvent \u00EAtre lentes). 4) Une fois la double-signature effective et propag\u00E9e, v\u00E9rifier coh\u00E9rence DS et RRSIG via tests multi-resolveurs ; si OK, revalider et ensuite retirer progressivement l\u2019ancienne signature selon proc\u00E9dure planifi\u00E9e (risque faible \u00E0 moyen : manipulation de cl\u00E9s). 5) Documenter actions, monitorer pendant 48-72h et pr\u00E9parer postmortem \u002B am\u00E9liorations du processus de rollover (risque op\u00E9rationnel faible mais important pour futur).",
              "Explanation": "L\u2019objectif est minimiser l\u2019impact client en restaurant l\u2019\u00E9tat attendu par les r\u00E9solveurs stricts avant d\u2019enlever la cl\u00E9 historique. La communication et coordination limitent les surprises. Les principales difficult\u00E9s sont acc\u00E8s aux anciennes cl\u00E9s/signatures et la d\u00E9pendance aux tiers pour la purge des caches."
            },
            {
              "Instruction": "Exercice 3 \u2014 V\u00E9rification post-correction : listez 6 v\u00E9rifications concr\u00E8tes \u00E0 automatiser dans les 72 heures suivant le correctif pour s\u2019assurer que l\u2019\u00E9cosyst\u00E8me est \u00E0 nouveau coh\u00E9rent. Pour chacune, indiquez l\u2019outil/commande recommand\u00E9 et le crit\u00E8re de succ\u00E8s.",
              "Answer": "1) V\u00E9rifier r\u00E9solution depuis plusieurs r\u00E9solveurs publics : outil dig \u002Bdnssec (ex: dig \u002Bdnssec example.tld @8.8.8.8) ; succ\u00E8s = r\u00E9ponse avec AD bit ou RRSIG valides et absence de SERVFAIL. 2) V\u00E9rifier DS dans la zone parente : dig DS example.tld @\u003Cparent-server\u003E ; succ\u00E8s = DS pr\u00E9sent et correspond \u00E0 la KSK publi\u00E9e dans la zone. 3) V\u00E9rifier signatures dans la zone : delv example.tld ou drill -S example.tld ; succ\u00E8s = toutes les RRSIG valident et ne sont pas expir\u00E9es. 4) Contr\u00F4ler taux d\u2019erreurs monitor\u00E9es : agr\u00E9gation des logs DNS/monitoring (Grafana/Prometheus) ; succ\u00E8s = taux SERVFAIL/NXDOMAIN retombe au niveau baseline. 5) Purge / v\u00E9rification des caches c\u00F4t\u00E9 ISP critiques : coordination \u002B test dig depuis ces r\u00E9solveurs ; succ\u00E8s = r\u00E9solutions correctes confirm\u00E9es par l\u2019ISP. 6) Tests clients r\u00E9els (p\u00E9riodes horaires, g\u00E9os) : ping/http lookup automatis\u00E9 depuis sondes (RUM/synthetic) ; succ\u00E8s = absence d\u2019erreurs de r\u00E9solution utilisateur sur 48-72h et latence stable.",
              "Explanation": "Ces v\u00E9rifications couvrent la cha\u00EEne technique (zone \u0026 parent), les validateurs externes, la surveillance m\u00E9tier et les tests utilisateurs. L\u2019automatisation permet de d\u00E9tecter r\u00E9gressions tardives (TTL) et offre preuves pour le postmortem."
            }
          ]
        },
        {
          "Title": "Automatisation des v\u00E9rifications et scripts de surveillance",
          "Summary": "Approches et exemples de scripts pour surveiller la validit\u00E9 des signatures, d\u00E9tecter les anomalies (prochaine expiration, incoh\u00E9rences DS/DNSKEY) et alerting int\u00E9gr\u00E9 aux outils de supervision.",
          "EstimatedMinutes": 90,
          "LearningObjectives": [
            "Comprendre les enjeux et les indicateurs cl\u00E9s \u00E0 surveiller pour la validation DNS/DNSSEC en production.",
            "Savoir impl\u00E9menter des contr\u00F4les automatis\u00E9s de validit\u00E9 des signatures (RRSIG) et d\u00E9tecter les expirations imminentes.",
            "\u00CAtre capable de v\u00E9rifier la coh\u00E9rence entre DS et DNSKEY et d\u00E9tecter les incoh\u00E9rences provoquant une rupture de cha\u00EEne de validation.",
            "Concevoir des scripts simples (bash/python) robustes pour la surveillance et l\u2019int\u00E9grer dans une boucle d\u2019op\u00E9ration (cron, systemd).",
            "Int\u00E9grer des alertes vers des outils de supervision (Nagios/Icinga, Prometheus/Alertmanager, messagerie/Slack) et d\u00E9finir niveaux d\u2019alerte pertinents.",
            "Appliquer les bonnes pratiques de tests, journalisation et reprise (retry/backoff) pour minimiser les faux positifs et charges r\u00E9seau inutiles."
          ],
          "Content": "Contexte et objectifs de la surveillance DNS/DNSSEC\r\nPourquoi automatiser ? La surveillance manuelle est peu fiable pour des \u00E9l\u00E9ments p\u00E9rissables comme les signatures RRSIG ou pour d\u00E9tecter des ruptures DS/DNSKEY. Objectifs : d\u00E9tection pr\u00E9coce d\u2019expiration de signatures, d\u00E9tection d\u2019incoh\u00E9rences dans la cha\u00EEne de confiance, supervision continue pour d\u00E9clencher des actions (alerte, bascule, ticket). Indicateurs clefs : date d\u0027expiration RRSIG, pr\u00E9sence/absence de DNSKEY, correspondance DS c\u00F4t\u00E9 parent, statut de validation AD/DO depuis r\u00E9solveurs, fr\u00E9quence d\u0027erreurs SERVFAIL li\u00E9es \u00E0 DNSSEC.\r\n\r\nApproches de surveillance\r\nApproches possibles : sondes actives (interroger r\u00E9guli\u00E8rement des r\u00E9solveurs ou serveurs d\u0027autorit\u00E9), sondes passives (logs des r\u00E9solveurs/serveurs pour anomalies), v\u00E9rifications hybrides (ex : sondes actives horaires et corr\u00E9lation avec logs). Fr\u00E9quence : adapt\u00E9e au TTL/au temps restant des signatures \u2014 ex. v\u00E9rification quotidienne si expirations \u003E 7 jours, puis toutes les heures si \u003C 48 heures. Robustesse : multi-r\u00E9solveurs (r\u00E9solveur public \u002B r\u00E9solveur local), backoff en cas d\u2019erreurs r\u00E9seau, suppression des faux positifs (r\u00E9tries, fen\u00EAtres de tol\u00E9rance).\r\n\r\nV\u00E9rification de validit\u00E9 des signatures (RRSIG)\r\nPrincipe : r\u00E9cup\u00E9rer l\u2019enregistrement RRSIG d\u2019une zone ou d\u2019un RRset et analyser le champ \u0027expiration\u0027 (Inception/Expiration). Outils utiles : dig (bind-utils), delv (DNSSEC-aware), ldns/ldns-tools, dnssec-tools, dnspython (pour scripts Python). Exemple de logique : 1) interroger _dnskey_ et _RRSIG_ ; 2) extraire la date d\u0027expiration ; 3) calculer le delta par rapport \u00E0 maintenant ; 4) alerter si delta \u003C seuil_alerte (ex. 7 jours) ou n\u00E9gatif (d\u00E9j\u00E0 expir\u00E9). Conseils : tenir compte du fuseau horaire UTC, parser les formats timestamps correctement, loguer valeurs brutes et d\u00E9cision. \u00C9viter de surcharger les serveurs d\u0027autorit\u00E9 (respecter politesses et caches).\r\n\r\nD\u00E9tection d\u2019incoh\u00E9rences DS / DNSKEY\r\nProbl\u00E8me courant : la cl\u00E9 publi\u00E9e par la zone (DNSKEY) ne correspond pas au DS publi\u00E9 chez le parent, entrainant une rupture de confiance. M\u00E9thode : 1) r\u00E9cup\u00E9rer DNSKEY depuis l\u2019autorit\u00E9, 2) g\u00E9n\u00E9rer la cl\u00E9 de hachage au format DS (SHA-1, SHA-256, \u00E9ventuellement SHA-384 selon pratique), 3) r\u00E9cup\u00E9rer l\u2019enregistrement DS depuis le parent, 4) comparer les empreintes. Outils : dnssec-dsfromkey (ldns), openssl \u002B scripts, dnspython \u002B hashlib. Cas particuliers: plusieurs cl\u00E9s actives, algorithmes multiples, rollover en cours (il peut y avoir DSs en double ou p\u00E9riode de coexistence). Politique d\u2019alerte : alerter si aucun DS ne correspond \u00E0 un DNSKEY actif (sauf si on d\u00E9tecte un rollover planifi\u00E9 en cours via m\u00E9tadonn\u00E9es op\u00E9rationnelles).\r\n\r\nExemples de scripts pratiques\r\na) Bash simple avec dig : script qui interroge RRSIG et extrait la date d\u0027expiration via awk/sed, calcule jours restants et renvoie code d\u0027\u00E9tat pour Nagios. b) Python avec dnspython : r\u00E9cup\u00E9rer RRSIG et DNSKEY, parser les timestamps, comparer et exposer m\u00E9triques Prometheus (via exposition HTTP) ou exit codes. c) V\u00E9rification DS : usage de ldns-key2ds/ldns-dane tools ou impl\u00E9mentation via dnspython \u002B hashlib (SHA-1/256). Pour chaque script pr\u00E9voir : retries, timeout, retour d\u2019\u00E9tat standard (0 OK, 1 WARNING, 2 CRITICAL), log rotation et mode --dry-run pour tests.\r\n\r\nInt\u00E9gration aux syst\u00E8mes d\u2019alerte et bonnes pratiques\r\nInt\u00E9grations possibles : - Nagios/Icinga : scripts de check retournant exit codes et messages ; d\u00E9finir services et seuils. - Prometheus : exporter ou pushgateway ; surveiller m\u00E9triques \u0027dnssec_signature_days_remaining\u0027 et \u0027dnssec_ds_mismatch\u0027 ; rules Alertmanager pour notifications. - Webhooks/Slack/Email : envoyer messages contenant contexte (zone, valeur trouv\u00E9e, timestamp) et lien vers runbook. Bonnes pratiques : inclure contexte complet (r\u00E9solveur utilis\u00E9, timestamp UTC, version du script), \u00E9viter alertes redondantes (silences, deduplication), mettre en place playbooks pour escalade, ex\u00E9cuter sur plusieurs sondes pour corr\u00E9lation, secourir par tests manuels guid\u00E9s si alerte critique.\r\n\r\nD\u00E9ploiement, tests et maintenance\r\nTests unitaires et d\u2019int\u00E9gration : fixtures DNS locales (serveur d\u2019autorit\u00E9 de test) et sc\u00E9narios de rollover. Validation continue des scripts (CI) avec mocks dnspython ou serveurs de test. Monitoring de la surveillance elle-m\u00EAme (self-monitoring) : m\u00E9triques sur latence et \u00E9checs de sondes. R\u00E9visions p\u00E9riodiques : mettre \u00E0 jour algorithmes de hachage support\u00E9s, v\u00E9rifier compatibilit\u00E9 outils, et synchroniser politiques d\u2019alerte avec \u00E9quipes op\u00E9rationnelles. Documentation : runbooks pour chaque type d\u2019alerte et responsabilit\u00E9 claire.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "\u00C9crire un script bash minimal qui v\u00E9rifie la date d\u0027expiration du RRSIG pour l\u0027enregistrement SOA d\u0027une zone donn\u00E9e et renvoie un code de sortie : 0 si \u003E 7 jours restants, 1 si entre 0 et 7 jours, 2 si expir\u00E9/erreur. Le script doit utiliser dig et afficher un message court explicite.",
              "Answer": "#!/usr/bin/env bash\n# usage: check_rrsig_soa.sh example.com\nset -eu\nZONE=\u0022$1\u0022\n# r\u00E9cup\u00E9rer la RRSIG de SOA en format UTC\nOUT=$(dig \u002Bnoall \u002Banswer \u002Bttlid -t RRSIG SOA \u0022$ZONE\u0022) || true\nif [ -z \u0022$OUT\u0022 ]; then\n  echo \u0022CRITICAL: RRSIG SOA absent for $ZONE\u0022\n  exit 2\nfi\n# dig RRSIG format contient la date d\u0027expiration en champs (dernier champ) ou sous forme YYYYMMDDHHMMSS\n# extrait la derni\u00E8re colonne correspondant \u00E0 Expiration\nEXPIRATION=$(echo \u0022$OUT\u0022 | awk \u0027{print $NF}\u0027 | head -n1)\n# parser la date (format YYYYMMDDHHMMSS) en secondes depuis epoch (UTC)\nEXPTS=$(date -u -d \u0022$EXPIRATION\u0022 \u002B%s 2\u003E/dev/null || true)\nif [ -z \u0022$EXPTS\u0022 ]; then\n  echo \u0022UNKNOWN: cannot parse expiration ($EXPIRATION) for $ZONE\u0022\n  exit 3\nfi\nNOW=$(date -u \u002B%s)\nDELTA_SEC=$((EXPTS - NOW))\nDELTA_DAYS=$((DELTA_SEC / 86400))\nif [ $DELTA_SEC -lt 0 ]; then\n  echo \u0022CRITICAL: RRSIG SOA for $ZONE expired $(date -u -d \u0022@$EXPTS\u0022)\u0022\n  exit 2\nelif [ $DELTA_DAYS -le 7 ]; then\n  echo \u0022WARNING: RRSIG SOA for $ZONE expires in $DELTA_DAYS day(s)\u0022\n  exit 1\nelse\n  echo \u0022OK: RRSIG SOA for $ZONE expires in $DELTA_DAYS day(s)\u0022\n  exit 0\nfi",
              "Explanation": "Le script utilise dig pour r\u00E9cup\u00E9rer l\u0027enregistrement RRSIG de SOA. Il extrait la date d\u0027expiration, la convertit en timestamp UTC, calcule le delta en jours et retourne un code conforme aux standards Nagios/Icinga. On g\u00E8re les cas d\u0027absence (critique) et d\u0027impossibilit\u00E9 de parsing (unknown). En production : ajouter retries, timeout, logging, et utiliser \u002Bdnssec ou r\u00E9solveur configurable."
            },
            {
              "Instruction": "D\u00E9crivez une proc\u00E9dure (pseudo-code ou \u00E9tapes pr\u00E9cises) pour v\u00E9rifier automatiquement la coh\u00E9rence entre le DS publi\u00E9 chez le parent et les DNSKEYs de la zone. Mentionnez les cas particuliers \u00E0 prendre en compte.",
              "Answer": "\u00C9tapes :\n1) R\u00E9cup\u00E9rer tous les enregistrements DNSKEY depuis l\u0027autorit\u00E9 de la zone (type DNSKEY).\n2) Pour chaque DNSKEY active (flags indiquant KSK ou ZSK selon politique), g\u00E9n\u00E9rer les DS correspondants avec les algorithmes de hash pertinents (SHA-1, SHA-256, SHA-384 si support\u00E9). Outils : ldns-key2ds ou calcul via hashlib (en Python : base64-\u003Eraw key -\u003E digest).\n3) R\u00E9cup\u00E9rer tous les enregistrements DS depuis le parent (type DS pour le nom de la zone aupr\u00E8s du parent).\n4) Comparer les empreintes : si au moins un DS du parent correspond \u00E0 un DS calcul\u00E9 \u00E0 partir d\u0027un DNSKEY actif, consid\u00E9rer la liaison valide.\n5) Si aucun DS ne correspond : g\u00E9n\u00E9rer une alerte CRITICAL, avec d\u00E9tails (liste des DS du parent, empreintes calcul\u00E9es, algorithmes, cl\u00E9s non appari\u00E9es).\n6) Cas particuliers \u00E0 g\u00E9rer :\n   - P\u00E9riode de rollover : le parent peut contenir plusieurs DS correspondant \u00E0 plusieurs cl\u00E9s (coexistence). Autoriser correspondance multiple.\n   - Algorithmes diff\u00E9rents : comparer sur tous les algorithmes support\u00E9s.\n   - Cl\u00E9s retir\u00E9es r\u00E9cemment : tenir compte d\u0027une fen\u00EAtre de tol\u00E9rance et v\u00E9rifier historique si disponible.\n   - Absence de DS (zone non-ds) : alerter selon politique (\u00E9cart potentiel entre signed et non-signed).\n   - Clefs en double/alternatives : journaliser toutes les clefs et ne pas consid\u00E9rer la premi\u00E8re incompatibilit\u00E9 comme d\u00E9finitive sans retries.\n7) Impl\u00E9mentation robuste : retries r\u00E9seau, timeouts, logging, ex\u00E9cution sur plusieurs sondes pour corr\u00E9lation.\n8) Int\u00E9gration : exposer r\u00E9sultat avec niveau (OK/WARNING/CRITICAL) et m\u00E9triques pour exporter vers Prometheus si besoin.",
              "Explanation": "La proc\u00E9dure insiste sur la conversion des DNSKEY en DS et la comparaison des empreintes. Les cas particuliers sont importants parce que les op\u00E9rations de rollover et la coexistence temporaires de clefs sont fr\u00E9quentes et peuvent provoquer des faux positifs. L\u0027utilisation d\u0027outils \u00E9prouv\u00E9s (ldns) ou de biblioth\u00E8ques (dnspython, hashlib) r\u00E9duit les erreurs de parsing."
            },
            {
              "Instruction": "Vous devez exposer la m\u00E9trique suivante pour Prometheus : dnssec_signature_days_remaining{zone=\u0022example.com\u0022}. Proposez une impl\u00E9mentation Python l\u00E9g\u00E8re (utilisant dnspython) qui calcule le nombre de jours restants d\u0027une RRSIG SOA et l\u0027expose via HTTP au format texte Prometheus (simple exporter). Fournissez aussi une r\u00E8gle d\u0027alerte Prometheus qui d\u00E9clenche si la m\u00E9trique est \u003C 7 pendant plus de 1h.",
              "Answer": "Impl\u00E9mentation Python (simplifi\u00E9e) :\n#!/usr/bin/env python3\nfrom http.server import BaseHTTPRequestHandler, HTTPServer\nimport dns.resolver, dns.rdatatype\nimport time\nfrom datetime import datetime, timezone\n\nZONE = \u0027example.com.\u0027\nPORT = 9118\n\nclass Handler(BaseHTTPRequestHandler):\n    def do_GET(self):\n        if self.path != \u0027/metrics\u0027:\n            self.send_response(404); self.end_headers(); return\n        try:\n            answers = dns.resolver.resolve(ZONE, \u0027RRSIG\u0027)\n            # trouver la RRSIG pour SOA\n            expiry_ts = None\n            for r in answers:\n                if r.type_covered == dns.rdatatype.SOA:\n                    # r.expiration est un int au format epoch? dnspython fournit .expiration (YYYYMMDDHHMMSS) en tant que str\n                    # utiliser r.expiration si disponible; sinon r.signature_expiration\n                    expiry_str = r.expiration if hasattr(r, \u0027expiration\u0027) else r.signature_expiration\n                    # parse YYYYMMDDHHMMSS\n                    expiry_dt = datetime.strptime(str(expiry_str), \u0027%Y%m%d%H%M%S\u0027).replace(tzinfo=timezone.utc)\n                    expiry_ts = expiry_dt.timestamp()\n                    break\n            if expiry_ts is None:\n                value = 0.0\n            else:\n                now = datetime.now(timezone.utc).timestamp()\n                days = max(0.0, (expiry_ts - now) / 86400.0)\n                value = days\n        except Exception:\n            value = 0.0\n        body = f\u0022# HELP dnssec_signature_days_remaining Days until RRSIG of SOA expires\\n\u0022\n        body \u002B= f\u0022# TYPE dnssec_signature_days_remaining gauge\\n\u0022\n        body \u002B= f\u0022dnssec_signature_days_remaining{{zone=\\\u0022{ZONE.rstrip(\u0027.\u0027) if ZONE.endswith(\u0027.\u0027) else ZONE}\\\u0022}} {value}\\n\u0022\n        self.send_response(200)\n        self.send_header(\u0027Content-Type\u0027, \u0027text/plain; version=0.0.4\u0027)\n        self.send_header(\u0027Content-Length\u0027, str(len(body)))\n        self.end_headers()\n        self.wfile.write(body.encode())\n\nif __name__ == \u0027__main__\u0027:\n    httpd = HTTPServer((\u00270.0.0.0\u0027, PORT), Handler)\n    httpd.serve_forever()\n\nR\u00E8gle d\u0027alerte Prometheus (YAML) :\n- alert: DNSSEC_Signature_Expiring\n  expr: dnssec_signature_days_remaining{zone=\u0022example.com\u0022} \u003C 7\n  for: 1h\n  labels:\n    severity: warning\n  annotations:\n    summary: \u0022RRSIG for example.com expires in less than 7 days\u0022\n    description: \u0022Signature for example.com is expiring soon ({{ $value }} days). Check DNSKEY and key rollover procedures.\u0022\n",
              "Explanation": "L\u0027exporter HTTP est volontairement minimal : il r\u00E9sout le RRSIG et calcule le nombre de jours restants, puis l\u0027expose au format attendu par Prometheus. En production : g\u00E9rer caches, timeouts DNS, multi-threading, et m\u00E9triques suppl\u00E9mentaires (erreurs r\u00E9seau, latence). La r\u00E8gle Prometheus d\u00E9clenche si la m\u00E9trique reste inf\u00E9rieure \u00E0 7 pendant 1 heure, \u00E9vitant ainsi alertes ponctuelles dues \u00E0 fluctuations temporaires."
            }
          ]
        },
        {
          "Title": "Cl\u00F4ture : checklist, bonnes pratiques et ressources",
          "Summary": "Synth\u00E8se des bonnes pratiques pour la mise en production et l\u0027exploitation : proc\u00E9dures de rollover, tests avant publication, proc\u00E9dures d\u0027urgence, checklist de cl\u00F4ture et ressources/documentation suppl\u00E9mentaires.",
          "EstimatedMinutes": 45,
          "LearningObjectives": [
            "Conna\u00EEtre les \u00E9l\u00E9ments essentiels d\u0027une checklist de cl\u00F4ture pour une mise en production s\u00FBre",
            "Savoir pr\u00E9parer et ex\u00E9cuter des proc\u00E9dures de rollover (basculage) sans interruption majeure de service",
            "Ma\u00EEtriser les tests critiques \u00E0 r\u00E9aliser avant publication (smoke tests, tests de r\u00E9gression, performance, s\u00E9curit\u00E9, migration de donn\u00E9es)",
            "\u00CAtre capable d\u0027appliquer des proc\u00E9dures d\u0027urgence et de rollback en cas d\u0027incident",
            "Savoir organiser la documentation et les ressources n\u00E9cessaires pour l\u0027exploitation et le support",
            "Pouvoir valider les crit\u00E8res de succ\u00E8s post-d\u00E9ploiement et effectuer un transfert (handover) vers les \u00E9quipes d\u0027exploitation"
          ],
          "Content": "Introduction : objectif de la cl\u00F4ture\r\nLa cl\u00F4ture d\u0027un d\u00E9ploiement regroupe les actions qui garantissent que la mise en production est r\u00E9alis\u00E9e de fa\u00E7on contr\u00F4l\u00E9e, tra\u00E7able et r\u00E9versible. L\u0027objectif est de minimiser les risques pour les utilisateurs, d\u0027assurer la continuit\u00E9 de service et de fournir aux \u00E9quipes d\u0027exploitation tout le n\u00E9cessaire pour la surveillance et l\u0027intervention. Cette section pr\u00E9sente une synth\u00E8se des bonnes pratiques, une checklist concr\u00E8te, des proc\u00E9dures de rollover et d\u0027urgence ainsi que les ressources documentaires \u00E0 pr\u00E9parer.\r\n\r\nSynth\u00E8se des bonnes pratiques pour la mise en production et l\u0027exploitation\r\nAvant toute mise en production, il faut : 1) d\u00E9finir des crit\u00E8res de r\u00E9ussite mesurables (KPIs et conditions de rollback), 2) automatiser les t\u00E2ches r\u00E9p\u00E9titives (CI/CD, scripts d\u0027infrastructure), 3) pr\u00E9voir une fen\u00EAtre et des acteurs responsables (downtime plan, on-call), 4) disposer d\u0027environnements proches de la production pour les tests, 5) pr\u00E9parer la surveillance et les alertes bas\u00E9es sur les indicateurs cl\u00E9s (erreurs, latence, taux d\u0027erreurs), 6) documenter les proc\u00E9dures et contacts. Apr\u00E8s mise en production, v\u00E9rifier la conformit\u00E9 des logs, monitorer la sant\u00E9 applicative et garder une possibilit\u00E9 de rollback rapide si les crit\u00E8res ne sont pas respect\u00E9s.\r\n\r\nProc\u00E9dures de rollover (basculage) : principes et \u00E9tapes\r\nLe rollover permet de transf\u00E9rer le trafic d\u0027une version/instance \u00E0 une autre sans rupture. Principes : faire des rollouts incr\u00E9mentaux (canary, blue/green), maintenir la capacit\u00E9 de revenir en arri\u00E8re, v\u00E9rifier l\u0027idempotence des op\u00E9rations, et communiquer. \u00C9tapes typiques :\n- Pr\u00E9parer la cible (configuration, migrations, donn\u00E9es pr\u00E9charg\u00E9es).\n- D\u00E9ployer en environnement canary avec pourcentage faible de trafic et surveiller m\u00E9triques.\n- Augmenter progressivement la part de trafic en validant SLA/KPI \u00E0 chaque \u00E9tape.\n- Finaliser le basculement et convertir la cible en active.\n- Nettoyer l\u0027ancienne version et mettre \u00E0 jour la documentation.\nConseil : automatiser le basculement via orchestration (kubernetes, load balancer scripts) et pr\u00E9voir des tests d\u0027int\u00E9grit\u00E9 \u00E0 chaque palier.\r\n\r\nTests avant publication : quoi, quand et comment\r\nTests \u00E0 r\u00E9aliser avant la publication :\n- Smoke tests : v\u00E9rification rapide que les fonctions critiques r\u00E9pondent.\n- Tests de r\u00E9gression automatis\u00E9s : confirmer qu\u0027aucune fonctionnalit\u00E9 existante n\u0027est cass\u00E9e.\n- Tests d\u0027int\u00E9gration : v\u00E9rifier les interactions avec services externes, DB et queues.\n- Tests de performance/charge : valider latence, TPS, comportement sous pic.\n- Tests de s\u00E9curit\u00E9 : scans SAST/DAST, v\u00E9rification des permissions et configurations.\n- Tests de migration de donn\u00E9es : v\u00E9rifier scripts de migration dans une r\u00E9plica ou sandbox.\n- Tests de rollback : ex\u00E9cuter la proc\u00E9dure de retour avant publication pour s\u0027assurer qu\u0027elle marche et qu\u0027elle conserve l\u0027int\u00E9grit\u00E9 des donn\u00E9es.\nChaque test doit avoir des crit\u00E8res d\u0027acceptation explicites et id\u00E9alement des scripts automatis\u00E9s pour reproductibilit\u00E9.\r\n\r\nProc\u00E9dures d\u0027urgence et de rollback\r\nPr\u00E9parer un plan d\u0027urgence permet d\u0027agir rapidement en cas d\u0027incident. Composants cl\u00E9s :\n- Runbook de l\u0027incident : sympt\u00F4mes, diagnostics rapides, commandes de v\u00E9rification.\n- R\u00F4les et responsabilit\u00E9s : qui d\u00E9cide le rollback, qui l\u0027ex\u00E9cute, qui informe les parties prenantes.\n- Checklist de rollback : points de contr\u00F4le pour l\u0027\u00E9tat avant/pendant/apr\u00E8s le rollback (sauvegardes, version \u00E0 restaurer, synchronisation des donn\u00E9es).\n- Communication : messages pr\u00E9d\u00E9finis pour internes et externes (status pages, chat ops, e-mail de crise).\n- Post-mortem rapide : collecte des logs, time stamps, et premi\u00E8res hypoth\u00E8ses d\u00E8s r\u00E9solution.\nTests \u00E0 pratiquer : exercices de simulation (chaos drills), tests p\u00E9riodiques de restauration depuis backups.\r\n\r\nChecklist de cl\u00F4ture d\u00E9taill\u00E9e\r\nChecklist type, \u00E0 adapter selon projet :\nPr\u00E9-d\u00E9ploiement :\n- Crit\u00E8res de succ\u00E8s d\u00E9finis et approuv\u00E9s.\n- Backups complets (configuration \u002B donn\u00E9es critiques) v\u00E9rifi\u00E9s.\n- Plan de rollback valid\u00E9 et test\u00E9.\n- Contacts d\u0027escalade et on-call list disponibles.\n- Communication planifi\u00E9e (fen\u00EAtre de d\u00E9ploiement, status page).\nD\u00E9ploiement :\n- Scripts d\u00E9ploy\u00E9s via pipeline automatis\u00E9.\n- Smoke tests ex\u00E9cut\u00E9s et pass\u00E9s.\n- Migration de donn\u00E9es ex\u00E9cut\u00E9e et v\u00E9rifi\u00E9e sur \u00E9chantillon.\n- Monitoring configur\u00E9 pour nouvelles m\u00E9triques et dashboards pr\u00EAts.\n- Alertes r\u00E9veillant les bons intervenants.\nPost-d\u00E9ploiement (0-24h) :\n- V\u00E9rification des logs et absence d\u0027augmentation d\u0027erreurs.\n- Validation des KPIs (latence, erreurs, throughput).\n- V\u00E9rification des int\u00E9grations externes et des jobs batch.\n- Confirmation des backups post-migration.\n- Handover fait aux \u00E9quipes d\u0027exploitation avec runbooks et playbooks.\nCl\u00F4ture administrative :\n- Document de d\u00E9ploiement et changelog centralis\u00E9s.\n- Retours de l\u0027\u00E9quipe (checklist post-deploy signed-off).\n- Plan d\u0027am\u00E9lioration pour le prochain d\u00E9ploiement (learnings).\nCes items peuvent \u00EAtre coch\u00E9s dans un outil de ticketing ou un template partag\u00E9.\r\n\r\nRessources et documentation suppl\u00E9mentaires\r\nPr\u00E9parer et centraliser les ressources :\n- Runbooks et playbooks (format step-by-step pour incidents fr\u00E9quents).\n- Templates de checklist (pr\u00E9-d\u00E9ploiement, d\u00E9ploiement, post-d\u00E9ploiement).\n- Scripts et pipelines stock\u00E9s en CI/CD avec historique de versions.\n- Dashboards et tableaux de bord (Grafana, Kibana) et seuils d\u0027alerte document\u00E9s.\n- Liste de contacts (on-call, \u00E9quipes tier, fournisseurs externes) avec proc\u00E9dures d\u0027escalade.\n- R\u00E9f\u00E9rences : politiques de s\u00E9curit\u00E9, SLA, guides de restauration de base de donn\u00E9es.\n- Biblioth\u00E8que de post-mortems et d\u0027am\u00E9liorations continues (RCA et actions correctives).\nConseil : maintenir ces ressources dans un repo accessible (wiki, repo git, runbook manager) et les tenir \u00E0 jour apr\u00E8s chaque incident ou changement majeur.\r\n\r\nConseils pratiques et pi\u00E8ges \u00E0 \u00E9viter\r\nConseils :\n- Ne pas d\u00E9ployer trop de changements \u00E0 la fois : privil\u00E9gier petits d\u00E9ploiements incr\u00E9mentaux.\n- Automatiser au maximum pour r\u00E9duire l\u0027erreur humaine.\n- Faire des d\u00E9ploiements pendant des fen\u00EAtres adapt\u00E9es au trafic et avec \u00E9quipes disponibles.\n- Communiquer r\u00E9guli\u00E8rement et clairement aux parties prenantes.\nPi\u00E8ges courants :\n- Supposer qu\u0027un test manuel suffit pour valider une migration de donn\u00E9es.\n- Oublier d\u0027alerter les \u00E9quipes qui surveillent en production.\n- Ne pas tester le rollback ou l\u0027\u00E9chec du d\u00E9ploiement en conditions r\u00E9elles.\n- Laisser la documentation obsol\u00E8te apr\u00E8s des modifications d\u0027infrastructure.\r\n\r\n",
          "Exercises": [
            {
              "Instruction": "R\u00E9dige une checklist minimale (6 items) \u00E0 ex\u00E9cuter imm\u00E9diatement avant une mise en production critique.",
              "Answer": "1) V\u00E9rifier que des sauvegardes compl\u00E8tes ont \u00E9t\u00E9 r\u00E9alis\u00E9es et test\u00E9es.\n2) Ex\u00E9cuter et valider les smoke tests critiques.\n3) Confirmer que le plan de rollback est pr\u00EAt et test\u00E9.\n4) S\u0027assurer que les dashboards et alertes sont actifs pour les m\u00E9triques cl\u00E9s.\n5) Notifier les \u00E9quipes on-call et confirmer la disponibilit\u00E9 des intervenants.\n6) Bloquer la fen\u00EAtre de d\u00E9ploiement et communiquer le status aux parties prenantes.",
              "Explanation": "Chaque item couvre un risque majeur : backups pour restaurer les donn\u00E9es, smoke tests pour valider le service minimal, rollback pour revenir en arri\u00E8re, monitoring pour d\u00E9tecter rapidement les r\u00E9gressions, disponibilit\u00E9 des \u00E9quipes pour agir si besoin, et communication pour la visibilit\u00E9 et la coordination."
            },
            {
              "Instruction": "D\u00E9cris, par \u00E9tapes ordonn\u00E9es, la proc\u00E9dure d\u0027urgence \u00E0 suivre si le d\u00E9ploiement provoque une hausse soudaine des erreurs en production.",
              "Answer": "1) Activer la communication d\u0027incident (status page, canal d\u00E9di\u00E9) et pr\u00E9venir les on-call.\n2) Collecter rapidement les indicateurs cl\u00E9s et logs pour \u00E9tablir la port\u00E9e (services affect\u00E9s, impact utilisateurs).\n3) Appliquer des mesures temporaires si possibles (r\u00E9duire le trafic, activer circuit breaker, scaling, d\u00E9sactiver feature flag).\n4) Si le probl\u00E8me persiste ou impacte fortement, d\u00E9cider d\u0027un rollback et ex\u00E9cuter la proc\u00E9dure de retour valid\u00E9e.\n5) V\u00E9rifier l\u0027int\u00E9grit\u00E9 des donn\u00E9es apr\u00E8s rollback et relancer les v\u00E9rifications smoke.\n6) Informer parties prenantes du r\u00E9tablissement, ouvrir un post-mortem et lister actions correctives.",
              "Explanation": "La proc\u00E9dure commence par la coordination et la visibilit\u00E9, continue par l\u0027analyse rapide et des mitigations temporaires pour limiter l\u0027impact, et inclut la d\u00E9cision de rollback si n\u00E9cessaire. La v\u00E9rification post-rollback et le post-mortem sont cruciaux pour restaurer la confiance et am\u00E9liorer les processus."
            },
            {
              "Instruction": "Pour un service qui implique une migration de base de donn\u00E9es, quels tests sp\u00E9cifiques devez-vous inclure avant la publication ? Donnez au moins 5 tests.",
              "Answer": "1) Test de migration sur une copie de la BDD de production (sandbox) pour v\u00E9rifier ex\u00E9cution et temps.\n2) Test d\u0027int\u00E9grit\u00E9 des donn\u00E9es : comparer \u00E9chantillons avant/apr\u00E8s migration.\n3) Test de compatibilit\u00E9 applicative : s\u0027assurer que la nouvelle structure n\u0027introduit pas d\u0027erreurs c\u00F4t\u00E9 applicatif.\n4) Test de rollback de la migration : proc\u00E9der \u00E0 une restauration et valider l\u0027\u00E9tat ant\u00E9rieur.\n5) Tests de performance des requ\u00EAtes critiques apr\u00E8s migration (indexation, plans d\u0027ex\u00E9cution).\n6) Tests de scripts idempotents si la migration peut \u00EAtre relanc\u00E9e.",
              "Explanation": "Les migrations de BDD sont \u00E0 haut risque : elles impactent la durabilit\u00E9 et la coh\u00E9rence des donn\u00E9es. Il faut v\u00E9rifier ex\u00E9cution, int\u00E9grit\u00E9, compatibilit\u00E9 applicative, capacit\u00E9 de revenir en arri\u00E8re et performance afin d\u0027\u00E9viter r\u00E9gressions et corruptions."
            }
          ]
        }
      ]
    }
  ]
}